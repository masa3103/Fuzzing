-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[111, 'saerf', 44]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 9.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      2.0          1,
    16         1          2.0      2.0      2.0          234,
    17         1          1.0      1.0      1.0          543,
    18         1          1.0      1.0      1.0          766,
    19         1          1.0      1.0      1.0          44,
    20         1          1.0      1.0      1.0          5,
    21         1          2.0      2.0      2.0          100,
    22         1          2.0      2.0      2.0          20,
    23         1          2.0      2.0      2.0          111,
    24         1          1.0      1.0      1.0          371,
    25         1          1.0      1.0      1.0          0,
    26         1          1.0      1.0      1.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.0          0.134,
    28         1          1.0      1.0      1.0          "あいう",
    29         1          2.0      2.0      2.0          "saerf",
    30         1          2.0      2.0      2.0          "plus",
    31         1          2.0      2.0      2.0          "AAAd123482934",
    32         1          1.0      1.0      1.0          "minus",
    33         1          2.0      2.0      2.0          "devide",
    34         1          1.0      1.0      1.0          "multiply",
    35         1          1.0      1.0      1.0          "divide",
    36         1          1.0      1.0      1.0          "plas",
    37         1          2.0      2.0      2.0          "minos",
    38         1          3.0      3.0      3.0          "multipy"
    39                                                   ]
    40         1          3.0      3.0      3.0      length = len(elements)-1
    41                                               extraction = [
    42         1         32.0     32.0     32.3          elements[random.randint(0,length)],
    43         1         14.0     14.0     14.1          elements[random.randint(0,length)],
    44         1         12.0     12.0     12.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          2.0      2.0      2.0      return extraction

Total time: 1.3e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          7.0      2.3     53.8      if isinstance(obj, int):
    52         2          2.0      1.0     15.4          return 1
    53                                           
    54         1          1.0      1.0      7.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0      7.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0      7.7      if isinstance(obj, str):
    61         1          1.0      1.0      7.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.002089 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        187.0    187.0      9.0      inputValue = inputPart()
    89         1         15.0     15.0      0.7      judgeValue0 = judge(inputValue[0])
    90         1         22.0     22.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1         11.0     11.0      0.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.0          output = "error"
    96                                               
    97         1         48.0     48.0      2.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       1802.0   1802.0     86.3      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

1回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[234, 'minos', 'minos']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.8          1,
    16         1          1.0      1.0      2.8          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.8          44,
    20         1          1.0      1.0      2.8          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.8          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.8          0.134,
    28         1          1.0      1.0      2.8          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.8          "multiply",
    35         1          1.0      1.0      2.8          "divide",
    36         1          1.0      1.0      2.8          "plas",
    37         1          1.0      1.0      2.8          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     36.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     40.0      if isinstance(obj, int):
    52         1          1.0      1.0     10.0          return 1
    53                                           
    54         2          2.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     10.0      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000463 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         75.0     75.0     16.2      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        344.0    344.0     74.3      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

2回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0.134, 'multiply', 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      2.8          1,
    16         1          2.0      2.0      2.8          234,
    17         1          1.0      1.0      1.4          543,
    18         1          1.0      1.0      1.4          766,
    19         1          1.0      1.0      1.4          44,
    20         1          1.0      1.0      1.4          5,
    21         1          1.0      1.0      1.4          100,
    22         1          1.0      1.0      1.4          20,
    23         1          1.0      1.0      1.4          111,
    24         1          1.0      1.0      1.4          371,
    25         1          1.0      1.0      1.4          0,
    26         1          1.0      1.0      1.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.4          0.134,
    28         1          1.0      1.0      1.4          "あいう",
    29         1          1.0      1.0      1.4          "saerf",
    30         1          1.0      1.0      1.4          "plus",
    31         1          1.0      1.0      1.4          "AAAd123482934",
    32         1          1.0      1.0      1.4          "minus",
    33         1          1.0      1.0      1.4          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      1.4          "divide",
    36         1          1.0      1.0      1.4          "plas",
    37         1          1.0      1.0      1.4          "minos",
    38         1          2.0      2.0      2.8          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         24.0     24.0     33.3          elements[random.randint(0,length)],
    43         1         10.0     10.0     13.9          elements[random.randint(0,length)],
    44         1          9.0      9.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.4      return extraction

Total time: 1.3e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          8.0      2.7     61.5      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     15.4      if isinstance(obj, float):
    55         1          1.0      1.0      7.7          return 1
    56                                           
    57         1          1.0      1.0      7.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          1.0      1.0      7.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000732 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        128.0    128.0     17.5      inputValue = inputPart()
    89         1         13.0     13.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1         13.0     13.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.0      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         38.0     38.0      5.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        530.0    530.0     72.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

3回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['divide', 543, 5]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.7          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.7          766,
    19         1          1.0      1.0      2.7          44,
    20         1          1.0      1.0      2.7          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.7          0.134,
    28         1          1.0      1.0      2.7          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          2.0      2.0      5.4      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     43.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     75.0      if isinstance(obj, int):
    52         2          1.0      0.5     25.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.002524 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         74.0     74.0      2.9      inputValue = inputPart()
    89         1          9.0      9.0      0.4      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.2      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.1      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         18.0     18.0      0.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       2412.0   2412.0     95.6      print str(inputValue).decode("string-escape")
   102         1          4.0      4.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

4回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plus', 371, 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          1.0      1.0      2.6          20,
    23         1          1.0      1.0      2.6          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     41.0          elements[random.randint(0,length)],
    43         1          6.0      6.0     15.4          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     16.7      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     16.7      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000482 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     15.1      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      1.0      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         18.0     18.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        368.0    368.0     76.3      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

5回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['saerf', 766, 20]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 5.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.7          1,
    16         1          2.0      2.0      3.4          234,
    17         1          1.0      1.0      1.7          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      1.7          5,
    21         1          1.0      1.0      1.7          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      1.7          371,
    25         1          1.0      1.0      1.7          0,
    26         1          1.0      1.0      1.7          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.7          0.134,
    28         1          1.0      1.0      1.7          "あいう",
    29         1          1.0      1.0      1.7          "saerf",
    30         1          1.0      1.0      1.7          "plus",
    31         1          1.0      1.0      1.7          "AAAd123482934",
    32         1          1.0      1.0      1.7          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      1.7          "multiply",
    35         1          1.0      1.0      1.7          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      1.7          "minos",
    38         1          1.0      1.0      1.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      1.7      length = len(elements)-1
    41                                               extraction = [
    42         1         22.0     22.0     37.3          elements[random.randint(0,length)],
    43         1          8.0      8.0     13.6          elements[random.randint(0,length)],
    44         1          8.0      8.0     13.6          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.7      return extraction

Total time: 1.1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     45.5      if isinstance(obj, int):
    52         2          1.0      0.5      9.1          return 1
    53                                           
    54         1          2.0      2.0     18.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0      9.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0      9.1      if isinstance(obj, str):
    61         1          1.0      1.0      9.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000743 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        116.0    116.0     15.6      inputValue = inputPart()
    89         1         16.0     16.0      2.2      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         30.0     30.0      4.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        564.0    564.0     75.9      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

6回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['saerf', 'divide', 'plas']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.6          1,
    16         1          2.0      2.0      3.1          234,
    17         1          1.0      1.0      1.6          543,
    18         1          1.0      1.0      1.6          766,
    19         1          1.0      1.0      1.6          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      1.6          111,
    24         1          1.0      1.0      1.6          371,
    25         1          1.0      1.0      1.6          0,
    26         1          1.0      1.0      1.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.6          0.134,
    28         1          1.0      1.0      1.6          "あいう",
    29         1          1.0      1.0      1.6          "saerf",
    30         1          1.0      1.0      1.6          "plus",
    31         1          1.0      1.0      1.6          "AAAd123482934",
    32         1          1.0      1.0      1.6          "minus",
    33         1          1.0      1.0      1.6          "devide",
    34         1          1.0      1.0      1.6          "multiply",
    35         1          1.0      1.0      1.6          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      1.6          "minos",
    38         1          1.0      1.0      1.6          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.1      length = len(elements)-1
    41                                               extraction = [
    42         1         22.0     22.0     34.4          elements[random.randint(0,length)],
    43         1          9.0      9.0     14.1          elements[random.randint(0,length)],
    44         1          9.0      9.0     14.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.6      return extraction

Total time: 1.6e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     31.2      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          3.0      1.0     18.8      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          3.0      1.0     18.8      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          3.0      1.0     18.8      if isinstance(obj, str):
    61         3          2.0      0.7     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000929 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        120.0    120.0     12.9      inputValue = inputPart()
    89         1         17.0     17.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1         11.0     11.0      1.2      judgeValue1 = judge(inputValue[1])
    91         1         12.0     12.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         31.0     31.0      3.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        734.0    734.0     79.0      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

7回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 'plus', 100]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.1          1,
    16         1          1.0      1.0      2.1          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.1          766,
    19         1          1.0      1.0      2.1          44,
    20         1          1.0      1.0      2.1          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.1          111,
    24         1          1.0      1.0      2.1          371,
    25         1          1.0      1.0      2.1          0,
    26         1          1.0      1.0      2.1          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.1          "saerf",
    30         1          1.0      1.0      2.1          "plus",
    31         1          1.0      1.0      2.1          "AAAd123482934",
    32         1          1.0      1.0      2.1          "minus",
    33         1          1.0      1.0      2.1          "devide",
    34         1          1.0      1.0      2.1          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.1          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.1      length = len(elements)-1
    41                                               extraction = [
    42         1         18.0     18.0     37.5          elements[random.randint(0,length)],
    43         1          6.0      6.0     12.5          elements[random.randint(0,length)],
    44         1          6.0      6.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.1      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     55.6      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     11.1      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     11.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     11.1      if isinstance(obj, str):
    61         1          1.0      1.0     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000543 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         85.0     85.0     15.7      inputValue = inputPart()
    89         1          6.0      6.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         27.0     27.0      5.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        409.0    409.0     75.3      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

8回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plas', 234, 26182576726545671723454736273454323454327667827345432763478372L]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 5.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.0          1,
    16         1          1.0      1.0      2.0          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.0          44,
    20         1          1.0      1.0      2.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.0          20,
    23         1          1.0      1.0      2.0          111,
    24         1          1.0      1.0      2.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.0          0.134,
    28         1          1.0      1.0      2.0          "あいう",
    29         1          1.0      1.0      2.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.0          "minus",
    33         1          1.0      1.0      2.0          "devide",
    34         1          1.0      1.0      2.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.0          "minos",
    38         1          1.0      1.0      2.0          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.9      length = len(elements)-1
    41                                               extraction = [
    42         1         23.0     23.0     45.1          elements[random.randint(0,length)],
    43         1          6.0      6.0     11.8          elements[random.randint(0,length)],
    44         1          5.0      5.0      9.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1.3e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     46.2      if isinstance(obj, int):
    52         1          1.0      1.0      7.7          return 1
    53                                           
    54         2          2.0      1.0     15.4      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     15.4      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     15.4      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.003609 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         91.0     91.0      2.5      inputValue = inputPart()
    89         1         12.0     12.0      0.3      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.1      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      0.2      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         26.0     26.0      0.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       3464.0   3464.0     96.0      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

9回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minus', 'あいう', 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     36.8          elements[random.randint(0,length)],
    43         1          6.0      6.0     15.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     16.7      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00046 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.2      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         18.0     18.0      3.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        349.0    349.0     75.9      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

10回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 543, 'minos']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 1.1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     36.4      if isinstance(obj, int):
    52         1          1.0      1.0      9.1          return 1
    53                                           
    54         2          2.0      1.0     18.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     18.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5      9.1      if isinstance(obj, str):
    61         2          1.0      0.5      9.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000493 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     14.8      inputValue = inputPart()
    89         1          9.0      9.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         21.0     21.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        378.0    378.0     76.7      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

11回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multipy', 543, 234]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      3.0          234,
    17         1          1.0      1.0      3.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      3.0          100,
    22         1          1.0      1.0      3.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      3.0          "あいう",
    29         1          1.0      1.0      3.0          "saerf",
    30         1          1.0      1.0      3.0          "plus",
    31         1          1.0      1.0      3.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      3.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      3.0      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     42.4          elements[random.randint(0,length)],
    43         1          5.0      5.0     15.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     12.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     50.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     25.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000449 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.8      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        339.0    339.0     75.5      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

12回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[20, 44, 'plas']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.8          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.8          100,
    22         1          1.0      1.0      2.8          20,
    23         1          1.0      1.0      2.8          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          1.0      1.0      2.8          "AAAd123482934",
    32         1          1.0      1.0      2.8          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     41.7          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.8      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     60.0      if isinstance(obj, int):
    52         2          2.0      1.0     40.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 4.3e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      2.3      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      2.3      def pr(x):
    68                                                   print x
    69         1         34.0     34.0     79.1      sep()
    70                                           
    71         1          2.0      2.0      4.7      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      2.3      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      2.3      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      2.3      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          1.0      1.0      2.3          result = "Operator is invalid."
    84         1          1.0      1.0      2.3      return result

Total time: 0.000671 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     10.6      inputValue = inputPart()
    89         1          5.0      5.0      0.7      judgeValue0 = judge(inputValue[0])
    90         1         15.0     15.0      2.2      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         58.0     58.0      8.6          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          3.0      3.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        508.0    508.0     75.7      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

13回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[111, 20, 'divide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.6          1,
    16         1          1.0      1.0      1.6          234,
    17         1          1.0      1.0      1.6          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      1.6          44,
    20         1          1.0      1.0      1.6          5,
    21         1          1.0      1.0      1.6          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      1.6          111,
    24         1          1.0      1.0      1.6          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.6          0.134,
    28         1          1.0      1.0      1.6          "あいう",
    29         1          1.0      1.0      1.6          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      1.6          "AAAd123482934",
    32         1          1.0      1.0      1.6          "minus",
    33         1          1.0      1.0      1.6          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      1.6          "divide",
    36         1          1.0      1.0      1.6          "plas",
    37         1          1.0      1.0      1.6          "minos",
    38         1          2.0      2.0      3.2          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.2      length = len(elements)-1
    41                                               extraction = [
    42         1         22.0     22.0     35.5          elements[random.randint(0,length)],
    43         1         10.0     10.0     16.1          elements[random.randint(0,length)],
    44         1          8.0      8.0     12.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.6      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     60.0      if isinstance(obj, int):
    52         2          1.0      0.5     10.0          return 1
    53                                           
    54         1          1.0      1.0     10.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     10.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     10.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 3.9e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      2.6      def sep():
    66                                                   print "--------------------------------------"
    67         1          0.0      0.0      0.0      def pr(x):
    68                                                   print x
    69         1         30.0     30.0     76.9      sep()
    70                                           
    71         1          2.0      2.0      5.1      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      2.6      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      2.6      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      2.6      elif list[2] == "divide":
    78         1          1.0      1.0      2.6          if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81         1          2.0      2.0      5.1              result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84         1          0.0      0.0      0.0      return result

Total time: 0.000689 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        116.0    116.0     16.8      inputValue = inputPart()
    89         1          9.0      9.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1         15.0     15.0      2.2      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         56.0     56.0      8.1          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        483.0    483.0     70.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

14回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minus', 0, 20]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.5          1,
    16         1          1.0      1.0      1.5          234,
    17         1          1.0      1.0      1.5          543,
    18         1          1.0      1.0      1.5          766,
    19         1          1.0      1.0      1.5          44,
    20         1          1.0      1.0      1.5          5,
    21         1          1.0      1.0      1.5          100,
    22         1          1.0      1.0      1.5          20,
    23         1          1.0      1.0      1.5          111,
    24         1          1.0      1.0      1.5          371,
    25         1          1.0      1.0      1.5          0,
    26         1          1.0      1.0      1.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.5          0.134,
    28         1          1.0      1.0      1.5          "あいう",
    29         1          1.0      1.0      1.5          "saerf",
    30         1          1.0      1.0      1.5          "plus",
    31         1          1.0      1.0      1.5          "AAAd123482934",
    32         1          1.0      1.0      1.5          "minus",
    33         1          1.0      1.0      1.5          "devide",
    34         1          1.0      1.0      1.5          "multiply",
    35         1          1.0      1.0      1.5          "divide",
    36         1          1.0      1.0      1.5          "plas",
    37         1          1.0      1.0      1.5          "minos",
    38         1          2.0      2.0      3.0          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.0      length = len(elements)-1
    41                                               extraction = [
    42         1         21.0     21.0     31.8          elements[random.randint(0,length)],
    43         1          9.0      9.0     13.6          elements[random.randint(0,length)],
    44         1          8.0      8.0     12.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.5      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     50.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          2.0      2.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     12.5      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000793 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        124.0    124.0     15.6      inputValue = inputPart()
    89         1         16.0     16.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.0      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         27.0     27.0      3.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        606.0    606.0     76.4      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

15回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[5, 111, 'minos']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      2.8          1,
    16         1          2.0      2.0      2.8          234,
    17         1          1.0      1.0      1.4          543,
    18         1          1.0      1.0      1.4          766,
    19         1          1.0      1.0      1.4          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      1.4          100,
    22         1          1.0      1.0      1.4          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      1.4          0,
    26         1          1.0      1.0      1.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.4          0.134,
    28         1          1.0      1.0      1.4          "あいう",
    29         1          1.0      1.0      1.4          "saerf",
    30         1          1.0      1.0      1.4          "plus",
    31         1          1.0      1.0      1.4          "AAAd123482934",
    32         1          1.0      1.0      1.4          "minus",
    33         1          1.0      1.0      1.4          "devide",
    34         1          1.0      1.0      1.4          "multiply",
    35         1          1.0      1.0      1.4          "divide",
    36         1          1.0      1.0      1.4          "plas",
    37         1          1.0      1.0      1.4          "minos",
    38         1          2.0      2.0      2.8          "multipy"
    39                                                   ]
    40         1          3.0      3.0      4.2      length = len(elements)-1
    41                                               extraction = [
    42         1         25.0     25.0     34.7          elements[random.randint(0,length)],
    43         1         10.0     10.0     13.9          elements[random.randint(0,length)],
    44         1          9.0      9.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.4      return extraction

Total time: 1.2e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     50.0      if isinstance(obj, int):
    52         2          1.0      0.5      8.3          return 1
    53                                           
    54         1          2.0      2.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0      8.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0      8.3      if isinstance(obj, str):
    61         1          1.0      1.0      8.3          return 3

Total time: 5.1e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      2.0      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      2.0      def pr(x):
    68                                                   print x
    69         1         43.0     43.0     84.3      sep()
    70                                           
    71         1          1.0      1.0      2.0      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      2.0      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      2.0      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      2.0      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          1.0      1.0      2.0          result = "Operator is invalid."
    84         1          1.0      1.0      2.0      return result

Total time: 0.00092 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        137.0    137.0     14.9      inputValue = inputPart()
    89         1         10.0     10.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1         16.0     16.0      1.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         71.0     71.0      7.7          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          3.0      3.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        671.0    671.0     72.9      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

16回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[1, 'AAAd123482934', 'minos']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.5          543,
    18         1          1.0      1.0      2.5          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.5          100,
    22         1          1.0      1.0      2.5          20,
    23         1          1.0      1.0      2.5          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.5          "あいう",
    29         1          1.0      1.0      2.5          "saerf",
    30         1          1.0      1.0      2.5          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          1.0      1.0      2.5          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     37.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     66.7      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          1.0      0.5     33.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000541 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0     14.0      inputValue = inputPart()
    89         1          6.0      6.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          9.0      9.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        421.0    421.0     77.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

17回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0.134, 5, 5]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.3          1,
    16         1          1.0      1.0      2.3          234,
    17         1          1.0      1.0      2.3          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.3          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.3          0,
    26         1          1.0      1.0      2.3          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.3          0.134,
    28         1          1.0      1.0      2.3          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.3          "minus",
    33         1          1.0      1.0      2.3          "devide",
    34         1          1.0      1.0      2.3          "multiply",
    35         1          1.0      1.0      2.3          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.3          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.5      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     36.4          elements[random.randint(0,length)],
    43         1          6.0      6.0     13.6          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.3      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     66.7      if isinstance(obj, int):
    52         2          1.0      0.5     16.7          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000514 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0     14.8      inputValue = inputPart()
    89         1          9.0      9.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         19.0     19.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        400.0    400.0     77.8      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

18回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0.134, 0, 'divide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          1.0      1.0      2.7          543,
    18         1          1.0      1.0      2.7          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          1.0      1.0      2.7          20,
    23         1          1.0      1.0      2.7          111,
    24         1          1.0      1.0      2.7          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          1.0      1.0      2.7          "minus",
    33         1          1.0      1.0      2.7          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     37.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1.8e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     27.8      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2         12.0      6.0     66.7      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0      5.6      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 2.5e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          0.0      0.0      0.0      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      4.0      def pr(x):
    68                                                   print x
    69         1         20.0     20.0     80.0      sep()
    70                                           
    71         1          1.0      1.0      4.0      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          0.0      0.0      0.0      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      4.0      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      4.0      elif list[2] == "divide":
    78         1          0.0      0.0      0.0          if list[1] == 0:
    79         1          0.0      0.0      0.0              result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84         1          1.0      1.0      4.0      return result

Total time: 0.000555 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     13.0      inputValue = inputPart()
    89         1          8.0      8.0      1.4      judgeValue0 = judge(inputValue[0])
    90         1          3.0      3.0      0.5      judgeValue1 = judge(inputValue[1])
    91         1         48.0     48.0      8.6      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         36.0     36.0      6.5          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        386.0    386.0     69.5      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

19回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[766, 'minos', 'saerf']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.5          1,
    16         1          2.0      2.0      2.9          234,
    17         1          1.0      1.0      1.5          543,
    18         1          1.0      1.0      1.5          766,
    19         1          1.0      1.0      1.5          44,
    20         1          1.0      1.0      1.5          5,
    21         1          1.0      1.0      1.5          100,
    22         1          1.0      1.0      1.5          20,
    23         1          1.0      1.0      1.5          111,
    24         1          1.0      1.0      1.5          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.5          0.134,
    28         1          1.0      1.0      1.5          "あいう",
    29         1          1.0      1.0      1.5          "saerf",
    30         1          1.0      1.0      1.5          "plus",
    31         1          1.0      1.0      1.5          "AAAd123482934",
    32         1          1.0      1.0      1.5          "minus",
    33         1          1.0      1.0      1.5          "devide",
    34         1          1.0      1.0      1.5          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      1.5          "minos",
    38         1          2.0      2.0      2.9          "multipy"
    39                                                   ]
    40         1          3.0      3.0      4.4      length = len(elements)-1
    41                                               extraction = [
    42         1         24.0     24.0     35.3          elements[random.randint(0,length)],
    43         1         10.0     10.0     14.7          elements[random.randint(0,length)],
    44         1          8.0      8.0     11.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.5      return extraction

Total time: 1.4e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     42.9      if isinstance(obj, int):
    52         1          1.0      1.0      7.1          return 1
    53                                           
    54         2          2.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          3.0      1.5     21.4      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     14.3      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000855 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        132.0    132.0     15.4      inputValue = inputPart()
    89         1         11.0     11.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1         15.0     15.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1         13.0     13.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         35.0     35.0      4.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        644.0    644.0     75.3      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

20回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 'minos', 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          1.0      1.0      2.6          20,
    23         1          1.0      1.0      2.6          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     36.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     12.5      if isinstance(obj, str):
    61         2          1.0      0.5     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000465 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     15.7      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         21.0     21.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        350.0    350.0     75.3      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

21回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[100, 'multipy', 20]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.4          100,
    22         1          1.0      1.0      2.4          20,
    23         1          1.0      1.0      2.4          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          1.0      1.0      2.4          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     35.7          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.3          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     40.0      if isinstance(obj, int):
    52         2          2.0      1.0     20.0          return 1
    53                                           
    54         1          1.0      1.0     10.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     10.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     10.0      if isinstance(obj, str):
    61         1          1.0      1.0     10.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000636 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         98.0     98.0     15.4      inputValue = inputPart()
    89         1          6.0      6.0      0.9      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         30.0     30.0      4.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        483.0    483.0     75.9      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

22回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[5, 'plas', 'multipy']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.3          1,
    16         1          1.0      1.0      2.3          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.3          766,
    19         1          1.0      1.0      2.3          44,
    20         1          1.0      1.0      2.3          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.3          20,
    23         1          1.0      1.0      2.3          111,
    24         1          1.0      1.0      2.3          371,
    25         1          1.0      1.0      2.3          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.3          "saerf",
    30         1          1.0      1.0      2.3          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.3          "multiply",
    35         1          1.0      1.0      2.3          "divide",
    36         1          1.0      1.0      2.3          "plas",
    37         1          1.0      1.0      2.3          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.3      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     37.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.6          elements[random.randint(0,length)],
    44         1          4.0      4.0      9.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.3      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     66.7      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          1.0      0.5     16.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000578 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         78.0     78.0     13.5      inputValue = inputPart()
    89         1          6.0      6.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          9.0      9.0      1.6      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         22.0     22.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        453.0    453.0     78.4      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

23回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[5, 'multiply', 543]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          1.0      1.0      2.7          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.7          0.134,
    28         1          1.0      1.0      2.7          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.7          "divide",
    36         1          1.0      1.0      2.7          "plas",
    37         1          1.0      1.0      2.7          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     40.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     75.0      if isinstance(obj, int):
    52         2          1.0      0.5     25.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000493 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         74.0     74.0     15.0      inputValue = inputPart()
    89         1          6.0      6.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1          9.0      9.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         22.0     22.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        377.0    377.0     76.5      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

24回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['AAAd123482934', 5, 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.8          234,
    17         1          1.0      1.0      2.8          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.8          100,
    22         1          1.0      1.0      2.8          20,
    23         1          1.0      1.0      2.8          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          1.0      1.0      2.8          "AAAd123482934",
    32         1          1.0      1.0      2.8          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     44.4          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     44.4      if isinstance(obj, int):
    52         1          1.0      1.0     11.1          return 1
    53                                           
    54         2          2.0      1.0     22.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     11.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          1.0      0.5     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000507 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     14.4      inputValue = inputPart()
    89         1          9.0      9.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         21.0     21.0      4.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        392.0    392.0     77.3      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

25回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[111, 5, 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.4          1,
    16         1          2.0      2.0      2.7          234,
    17         1          1.0      1.0      1.4          543,
    18         1          1.0      1.0      1.4          766,
    19         1          1.0      1.0      1.4          44,
    20         1          1.0      1.0      1.4          5,
    21         1          1.0      1.0      1.4          100,
    22         1          1.0      1.0      1.4          20,
    23         1          1.0      1.0      1.4          111,
    24         1          1.0      1.0      1.4          371,
    25         1          1.0      1.0      1.4          0,
    26         1          1.0      1.0      1.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.4          0.134,
    28         1          1.0      1.0      1.4          "あいう",
    29         1          1.0      1.0      1.4          "saerf",
    30         1          1.0      1.0      1.4          "plus",
    31         1          1.0      1.0      1.4          "AAAd123482934",
    32         1          1.0      1.0      1.4          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      1.4          "divide",
    36         1          1.0      1.0      1.4          "plas",
    37         1          1.0      1.0      1.4          "minos",
    38         1          2.0      2.0      2.7          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         28.0     28.0     38.4          elements[random.randint(0,length)],
    43         1         10.0     10.0     13.7          elements[random.randint(0,length)],
    44         1          8.0      8.0     11.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.4      return extraction

Total time: 2.1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3         17.0      5.7     81.0      if isinstance(obj, int):
    52         2          1.0      0.5      4.8          return 1
    53                                           
    54         1          3.0      3.0     14.3      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000664 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        149.0    149.0     22.4      inputValue = inputPart()
    89         1         10.0     10.0      1.5      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1         28.0     28.0      4.2      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         22.0     22.0      3.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        446.0    446.0     67.2      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

26回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plus', 234, 111]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     40.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     66.7      if isinstance(obj, int):
    52         2          1.0      0.5     33.3          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000553 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         80.0     80.0     14.5      inputValue = inputPart()
    89         1         11.0     11.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        429.0    429.0     77.6      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

27回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[100, 'plas', 20]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      2.7          1,
    16         1          1.0      1.0      1.4          234,
    17         1          1.0      1.0      1.4          543,
    18         1          1.0      1.0      1.4          766,
    19         1          1.0      1.0      1.4          44,
    20         1          2.0      2.0      2.7          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      1.4          20,
    23         1          1.0      1.0      1.4          111,
    24         1          1.0      1.0      1.4          371,
    25         1          1.0      1.0      1.4          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      1.4          "あいう",
    29         1          1.0      1.0      1.4          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      1.4          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      1.4          "divide",
    36         1          1.0      1.0      1.4          "plas",
    37         1          2.0      2.0      2.7          "minos",
    38         1          1.0      1.0      1.4          "multipy"
    39                                                   ]
    40         1          3.0      3.0      4.1      length = len(elements)-1
    41                                               extraction = [
    42         1         28.0     28.0     38.4          elements[random.randint(0,length)],
    43         1         11.0     11.0     15.1          elements[random.randint(0,length)],
    44         1         10.0     10.0     13.7          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.4      return extraction

Total time: 1.1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     54.5      if isinstance(obj, int):
    52         2          1.0      0.5      9.1          return 1
    53                                           
    54         1          1.0      1.0      9.1      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0      9.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0      9.1      if isinstance(obj, str):
    61         1          1.0      1.0      9.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.001068 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        141.0    141.0     13.2      inputValue = inputPart()
    89         1         11.0     11.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1         17.0     17.0      1.6      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         40.0     40.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        848.0    848.0     79.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

28回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multipy', 543, 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.5          100,
    22         1          1.0      1.0      2.5          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.5          0.134,
    28         1          1.0      1.0      2.5          "あいう",
    29         1          1.0      1.0      2.5          "saerf",
    30         1          1.0      1.0      2.5          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          1.0      1.0      2.5          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     40.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     28.6      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000508 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0     15.0      inputValue = inputPart()
    89         1         10.0     10.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         19.0     19.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        392.0    392.0     77.2      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

29回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[371, 111, 'plas']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.1          1,
    16         1          1.0      1.0      2.1          234,
    17         1          1.0      1.0      2.1          543,
    18         1          1.0      1.0      2.1          766,
    19         1          1.0      1.0      2.1          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.1          100,
    22         1          1.0      1.0      2.1          20,
    23         1          1.0      1.0      2.1          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.1          "あいう",
    29         1          1.0      1.0      2.1          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.1          "devide",
    34         1          1.0      1.0      2.1          "multiply",
    35         1          1.0      1.0      2.1          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.1          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.2      length = len(elements)-1
    41                                               extraction = [
    42         1         19.0     19.0     39.6          elements[random.randint(0,length)],
    43         1          7.0      7.0     14.6          elements[random.randint(0,length)],
    44         1          5.0      5.0     10.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.1      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         2          2.0      1.0     33.3          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 3e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      3.3      def sep():
    66                                                   print "--------------------------------------"
    67         1          0.0      0.0      0.0      def pr(x):
    68                                                   print x
    69         1         25.0     25.0     83.3      sep()
    70                                           
    71         1          1.0      1.0      3.3      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      3.3      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          0.0      0.0      0.0      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      3.3      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          1.0      1.0      3.3          result = "Operator is invalid."
    84         1          0.0      0.0      0.0      return result

Total time: 0.000564 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         84.0     84.0     14.9      inputValue = inputPart()
    89         1          6.0      6.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.7      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.4      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         40.0     40.0      7.1          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        418.0    418.0     74.1      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

30回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0, 111, 'minos']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     41.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     60.0      if isinstance(obj, int):
    52         2          1.0      0.5     20.0          return 1
    53                                           
    54         1          1.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 2.6e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      3.8      def sep():
    66                                                   print "--------------------------------------"
    67         1          0.0      0.0      0.0      def pr(x):
    68                                                   print x
    69         1         20.0     20.0     76.9      sep()
    70                                           
    71         1          1.0      1.0      3.8      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      3.8      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      3.8      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          0.0      0.0      0.0      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          1.0      1.0      3.8          result = "Operator is invalid."
    84         1          1.0      1.0      3.8      return result

Total time: 0.000526 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0     14.4      inputValue = inputPart()
    89         1          6.0      6.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         35.0     35.0      6.7          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        393.0    393.0     74.7      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

31回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multipy', 766, 'saerf']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     39.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1.1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     36.4      if isinstance(obj, int):
    52         1          1.0      1.0      9.1          return 1
    53                                           
    54         2          2.0      1.0     18.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     18.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5      9.1      if isinstance(obj, str):
    61         2          1.0      0.5      9.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000524 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0     14.5      inputValue = inputPart()
    89         1          9.0      9.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        407.0    407.0     77.7      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

32回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['divide', 'multipy', 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.4          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     39.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.2          elements[random.randint(0,length)],
    44         1          4.0      4.0      9.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     12.5      if isinstance(obj, str):
    61         2          1.0      0.5     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000562 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         78.0     78.0     13.9      inputValue = inputPart()
    89         1         10.0     10.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         28.0     28.0      5.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        433.0    433.0     77.0      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

33回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 111, 20]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          1.0      1.0      2.7          20,
    23         1          1.0      1.0      2.7          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          1.0      1.0      2.7          "minus",
    33         1          1.0      1.0      2.7          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.7          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     40.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.7      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         2          1.0      0.5     14.3          return 1
    53                                           
    54         1          1.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000453 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.7      inputValue = inputPart()
    89         1          8.0      8.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        344.0    344.0     75.9      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

34回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multiply', 'devide', 'minus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.3          234,
    17         1          1.0      1.0      2.3          543,
    18         1          1.0      1.0      2.3          766,
    19         1          1.0      1.0      2.3          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.3          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.3          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.3          0.134,
    28         1          1.0      1.0      2.3          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.3          "minus",
    33         1          1.0      1.0      2.3          "devide",
    34         1          1.0      1.0      2.3          "multiply",
    35         1          1.0      1.0      2.3          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.3          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.7      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     37.2          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.0          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.6          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1.3e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     23.1      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          3.0      1.0     23.1      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          3.0      1.0     23.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          3.0      1.0     23.1      if isinstance(obj, str):
    61         3          1.0      0.3      7.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000537 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         79.0     79.0     14.7      inputValue = inputPart()
    89         1          9.0      9.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         23.0     23.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        412.0    412.0     76.7      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

35回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0, 'あいう', 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      3.0          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      3.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      3.0          0.134,
    28         1          1.0      1.0      3.0          "あいう",
    29         1          1.0      1.0      3.0          "saerf",
    30         1          1.0      1.0      3.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      3.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      3.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      3.0      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     45.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     15.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     12.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     50.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     25.0      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57         1          1.0      1.0     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     12.5      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000525 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     13.9      inputValue = inputPart()
    89         1          6.0      6.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        412.0    412.0     78.5      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

36回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['divide', 44, 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.4          100,
    22         1          1.0      1.0      2.4          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.4          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.8      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     38.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          4.0      4.0      9.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     75.0      if isinstance(obj, int):
    52         2          1.0      0.5     25.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000535 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         77.0     77.0     14.4      inputValue = inputPart()
    89         1         10.0     10.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         24.0     24.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        412.0    412.0     77.0      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

37回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['AAAd123482934', 26182576726545671723454736273454323454327667827345432763478372L, 'minos']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.4          1,
    16         1          1.0      1.0      1.4          234,
    17         1          1.0      1.0      1.4          543,
    18         1          1.0      1.0      1.4          766,
    19         1          1.0      1.0      1.4          44,
    20         1          1.0      1.0      1.4          5,
    21         1          1.0      1.0      1.4          100,
    22         1          1.0      1.0      1.4          20,
    23         1          1.0      1.0      1.4          111,
    24         1          1.0      1.0      1.4          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      1.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.4          0.134,
    28         1          1.0      1.0      1.4          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      1.4          "AAAd123482934",
    32         1          1.0      1.0      1.4          "minus",
    33         1          1.0      1.0      1.4          "devide",
    34         1          1.0      1.0      1.4          "multiply",
    35         1          1.0      1.0      1.4          "divide",
    36         1          1.0      1.0      1.4          "plas",
    37         1          1.0      1.0      1.4          "minos",
    38         1          1.0      1.0      1.4          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         26.0     26.0     37.1          elements[random.randint(0,length)],
    43         1         11.0     11.0     15.7          elements[random.randint(0,length)],
    44         1          9.0      9.0     12.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.4      return extraction

Total time: 1.9e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     31.6      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          4.0      1.3     21.1      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          4.0      1.3     21.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          3.0      1.0     15.8      if isinstance(obj, str):
    61         2          2.0      1.0     10.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.001399 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        126.0    126.0      9.0      inputValue = inputPart()
    89         1         16.0     16.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1         13.0     13.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1         12.0     12.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         36.0     36.0      2.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       1191.0   1191.0     85.1      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

38回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[766, 1, 234]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.4          1,
    16         1          1.0      1.0      1.4          234,
    17         1          1.0      1.0      1.4          543,
    18         1          1.0      1.0      1.4          766,
    19         1          1.0      1.0      1.4          44,
    20         1          1.0      1.0      1.4          5,
    21         1          1.0      1.0      1.4          100,
    22         1          1.0      1.0      1.4          20,
    23         1          1.0      1.0      1.4          111,
    24         1          1.0      1.0      1.4          371,
    25         1          1.0      1.0      1.4          0,
    26         1          1.0      1.0      1.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.4          0.134,
    28         1          1.0      1.0      1.4          "あいう",
    29         1          1.0      1.0      1.4          "saerf",
    30         1          1.0      1.0      1.4          "plus",
    31         1          1.0      1.0      1.4          "AAAd123482934",
    32         1          1.0      1.0      1.4          "minus",
    33         1          1.0      1.0      1.4          "devide",
    34         1          1.0      1.0      1.4          "multiply",
    35         1          1.0      1.0      1.4          "divide",
    36         1          1.0      1.0      1.4          "plas",
    37         1          1.0      1.0      1.4          "minos",
    38         1          2.0      2.0      2.9          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         22.0     22.0     31.9          elements[random.randint(0,length)],
    43         1         10.0     10.0     14.5          elements[random.randint(0,length)],
    44         1          9.0      9.0     13.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.4      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     57.1      if isinstance(obj, int):
    52         3          3.0      1.0     42.9          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.001771 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        135.0    135.0      7.6      inputValue = inputPart()
    89         1         10.0     10.0      0.6      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      0.4      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      0.4      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         32.0     32.0      1.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       1576.0   1576.0     89.0      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

39回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[5, 371, 26182576726545671723454736273454323454327667827345432763478372L]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.2          1,
    16         1          1.0      1.0      2.2          234,
    17         1          1.0      1.0      2.2          543,
    18         1          1.0      1.0      2.2          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.2          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.2          0,
    26         1          1.0      1.0      2.2          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.2          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.2          "AAAd123482934",
    32         1          1.0      1.0      2.2          "minus",
    33         1          1.0      1.0      2.2          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.2          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.2          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.4      length = len(elements)-1
    41                                               extraction = [
    42         1         18.0     18.0     40.0          elements[random.randint(0,length)],
    43         1          6.0      6.0     13.3          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.2      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     60.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     20.0      if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000619 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         85.0     85.0     13.7      inputValue = inputPart()
    89         1          6.0      6.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.6      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         28.0     28.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        484.0    484.0     78.2      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

40回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multiply', 'minos', 'saerf']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          1.0      1.0      2.6          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          2.0      2.0      5.3      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     42.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     33.3      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          1.0      0.3     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          2.0      0.7     33.3      if isinstance(obj, str):
    61         3          1.0      0.3     16.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000539 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         78.0     78.0     14.5      inputValue = inputPart()
    89         1         10.0     10.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         23.0     23.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        410.0    410.0     76.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

41回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[111, 100, 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.5          1,
    16         1          2.0      2.0      2.9          234,
    17         1          1.0      1.0      1.5          543,
    18         1          1.0      1.0      1.5          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      1.5          100,
    22         1          1.0      1.0      1.5          20,
    23         1          1.0      1.0      1.5          111,
    24         1          1.0      1.0      1.5          371,
    25         1          1.0      1.0      1.5          0,
    26         1          1.0      1.0      1.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.5          0.134,
    28         1          1.0      1.0      1.5          "あいう",
    29         1          1.0      1.0      1.5          "saerf",
    30         1          1.0      1.0      1.5          "plus",
    31         1          1.0      1.0      1.5          "AAAd123482934",
    32         1          1.0      1.0      1.5          "minus",
    33         1          1.0      1.0      1.5          "devide",
    34         1          1.0      1.0      1.5          "multiply",
    35         1          1.0      1.0      1.5          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      1.5          "minos",
    38         1          1.0      1.0      1.5          "multipy"
    39                                                   ]
    40         1          3.0      3.0      4.4      length = len(elements)-1
    41                                               extraction = [
    42         1         23.0     23.0     33.8          elements[random.randint(0,length)],
    43         1         10.0     10.0     14.7          elements[random.randint(0,length)],
    44         1          9.0      9.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.5      return extraction

Total time: 2.2e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3         20.0      6.7     90.9      if isinstance(obj, int):
    52         3          2.0      0.7      9.1          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000615 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        134.0    134.0     21.8      inputValue = inputPart()
    89         1         31.0     31.0      5.0      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.0      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         24.0     24.0      3.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        414.0    414.0     67.3      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

42回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['AAAd123482934', 'あいう', 111]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 0.000101 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.0          1,
    16         1          1.0      1.0      1.0          234,
    17         1          1.0      1.0      1.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      1.0          100,
    22         1          1.0      1.0      1.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      1.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.0          0.134,
    28         1          1.0      1.0      1.0          "あいう",
    29         1          1.0      1.0      1.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      1.0          "minus",
    33         1          1.0      1.0      1.0          "devide",
    34         1          1.0      1.0      1.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      1.0          "minos",
    38         1          1.0      1.0      1.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      1.0      length = len(elements)-1
    41                                               extraction = [
    42         1         44.0     44.0     43.6          elements[random.randint(0,length)],
    43         1         15.0     15.0     14.9          elements[random.randint(0,length)],
    44         1         27.0     27.0     26.7          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1.2e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     33.3      if isinstance(obj, int):
    52         1          1.0      1.0      8.3          return 1
    53                                           
    54         2          2.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5      8.3      if isinstance(obj, str):
    61         2          2.0      1.0     16.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000886 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        154.0    154.0     17.4      inputValue = inputPart()
    89         1         16.0     16.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1         12.0     12.0      1.4      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         29.0     29.0      3.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        664.0    664.0     74.9      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

43回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 100, 'multiply']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.4          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     36.6          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         2          1.0      0.5     12.5          return 1
    53                                           
    54         1          1.0      1.0     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     12.5      if isinstance(obj, str):
    61         1          1.0      1.0     12.5          return 3

Total time: 2.7e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      3.7      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      3.7      def pr(x):
    68                                                   print x
    69         1         22.0     22.0     81.5      sep()
    70                                           
    71         1          1.0      1.0      3.7      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          0.0      0.0      0.0      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      3.7      elif list[2] == "multiply":
    76         1          0.0      0.0      0.0          result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84         1          1.0      1.0      3.7      return result

Total time: 0.00068 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         75.0     75.0     11.0      inputValue = inputPart()
    89         1          6.0      6.0      0.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.6      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         37.0     37.0      5.4          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        547.0    547.0     80.4      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

44回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[543, 0, 44]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.4          1,
    16         1          1.0      1.0      1.4          234,
    17         1          1.0      1.0      1.4          543,
    18         1          1.0      1.0      1.4          766,
    19         1          1.0      1.0      1.4          44,
    20         1          1.0      1.0      1.4          5,
    21         1          1.0      1.0      1.4          100,
    22         1          1.0      1.0      1.4          20,
    23         1          1.0      1.0      1.4          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      1.4          0,
    26         1          1.0      1.0      1.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.4          0.134,
    28         1          1.0      1.0      1.4          "あいう",
    29         1          1.0      1.0      1.4          "saerf",
    30         1          1.0      1.0      1.4          "plus",
    31         1          1.0      1.0      1.4          "AAAd123482934",
    32         1          1.0      1.0      1.4          "minus",
    33         1          1.0      1.0      1.4          "devide",
    34         1          1.0      1.0      1.4          "multiply",
    35         1          1.0      1.0      1.4          "divide",
    36         1          1.0      1.0      1.4          "plas",
    37         1          1.0      1.0      1.4          "minos",
    38         1          2.0      2.0      2.9          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         23.0     23.0     33.3          elements[random.randint(0,length)],
    43         1         11.0     11.0     15.9          elements[random.randint(0,length)],
    44         1          9.0      9.0     13.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     80.0      if isinstance(obj, int):
    52         3          1.0      0.3     20.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000799 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        132.0    132.0     16.5      inputValue = inputPart()
    89         1         10.0     10.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         27.0     27.0      3.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        614.0    614.0     76.8      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

45回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 'saerf', 'multiply']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.4          100,
    22         1          1.0      1.0      2.4          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          1.0      1.0      2.4          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     39.0          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.6          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1.2e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     25.0      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          3.0      1.0     25.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          3.0      1.0     25.0      if isinstance(obj, str):
    61         3          1.0      0.3      8.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000656 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         78.0     78.0     11.9      inputValue = inputPart()
    89         1         10.0     10.0      1.5      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         23.0     23.0      3.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        528.0    528.0     80.5      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

46回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['AAAd123482934', 111, 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.0          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.0          543,
    18         1          1.0      1.0      2.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.0          100,
    22         1          1.0      1.0      2.0          20,
    23         1          1.0      1.0      2.0          111,
    24         1          1.0      1.0      2.0          371,
    25         1          1.0      1.0      2.0          0,
    26         1          1.0      1.0      2.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.0          0.134,
    28         1          1.0      1.0      2.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.0          "devide",
    34         1          1.0      1.0      2.0          "multiply",
    35         1          1.0      1.0      2.0          "divide",
    36         1          1.0      1.0      2.0          "plas",
    37         1          1.0      1.0      2.0          "minos",
    38         1          1.0      1.0      2.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.0      length = len(elements)-1
    41                                               extraction = [
    42         1         18.0     18.0     36.7          elements[random.randint(0,length)],
    43         1          5.0      5.0     10.2          elements[random.randint(0,length)],
    44         1          7.0      7.0     14.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.0      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          1.0      0.3     25.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     25.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     25.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000517 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         83.0     83.0     16.1      inputValue = inputPart()
    89         1          9.0      9.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.2      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      3.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        392.0    392.0     75.8      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

47回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[234, 100, 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.5          1,
    16         1          2.0      2.0      3.1          234,
    17         1          1.0      1.0      1.5          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      1.5          44,
    20         1          1.0      1.0      1.5          5,
    21         1          1.0      1.0      1.5          100,
    22         1          1.0      1.0      1.5          20,
    23         1          1.0      1.0      1.5          111,
    24         1          1.0      1.0      1.5          371,
    25         1          1.0      1.0      1.5          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      1.5          "saerf",
    30         1          1.0      1.0      1.5          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      1.5          "minus",
    33         1          1.0      1.0      1.5          "devide",
    34         1          1.0      1.0      1.5          "multiply",
    35         1          1.0      1.0      1.5          "divide",
    36         1          1.0      1.0      1.5          "plas",
    37         1          1.0      1.0      1.5          "minos",
    38         1          2.0      2.0      3.1          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.1      length = len(elements)-1
    41                                               extraction = [
    42         1         26.0     26.0     40.0          elements[random.randint(0,length)],
    43         1          9.0      9.0     13.8          elements[random.randint(0,length)],
    44         1          6.0      6.0      9.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.5      return extraction

Total time: 2e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7    100.0      if isinstance(obj, int):
    52         3          0.0      0.0      0.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000645 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        128.0    128.0     19.8      inputValue = inputPart()
    89         1          7.0      7.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.6      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.6      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         32.0     32.0      5.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        466.0    466.0     72.2      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

48回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plus', 111, 0]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.4          5,
    21         1          1.0      1.0      2.4          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     40.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          4.0      4.0      9.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     60.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     20.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000529 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         78.0     78.0     14.7      inputValue = inputPart()
    89         1         10.0     10.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      4.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        409.0    409.0     77.3      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

49回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[100, 'plas', 'multipy']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.4          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          1.0      1.0      2.4          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.8      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     35.7          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     28.6      if isinstance(obj, int):
    52         1          1.0      1.0     14.3          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         2          1.0      0.5     14.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000499 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0     15.2      inputValue = inputPart()
    89         1          6.0      6.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1          9.0      9.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.4      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         18.0     18.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        380.0    380.0     76.2      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

50回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0.134, 111, 44]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 0.00016 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      1.2          1,
    16         1          3.0      3.0      1.9          234,
    17         1          1.0      1.0      0.6          543,
    18         1          1.0      1.0      0.6          766,
    19         1          1.0      1.0      0.6          44,
    20         1          1.0      1.0      0.6          5,
    21         1          1.0      1.0      0.6          100,
    22         1          1.0      1.0      0.6          20,
    23         1          5.0      5.0      3.1          111,
    24         1          1.0      1.0      0.6          371,
    25         1          1.0      1.0      0.6          0,
    26         1          1.0      1.0      0.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      0.6          0.134,
    28         1          1.0      1.0      0.6          "あいう",
    29         1          1.0      1.0      0.6          "saerf",
    30         1          1.0      1.0      0.6          "plus",
    31         1          1.0      1.0      0.6          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      0.6          "multiply",
    35         1          1.0      1.0      0.6          "divide",
    36         1          1.0      1.0      0.6          "plas",
    37         1          1.0      1.0      0.6          "minos",
    38         1          3.0      3.0      1.9          "multipy"
    39                                                   ]
    40         1         31.0     31.0     19.4      length = len(elements)-1
    41                                               extraction = [
    42         1         72.0     72.0     45.0          elements[random.randint(0,length)],
    43         1         16.0     16.0     10.0          elements[random.randint(0,length)],
    44         1          9.0      9.0      5.6          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      0.6      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     66.7      if isinstance(obj, int):
    52         2          2.0      1.0     22.2          return 1
    53                                           
    54         1          1.0      1.0     11.1      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000897 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        294.0    294.0     32.8      inputValue = inputPart()
    89         1         17.0     17.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         53.0     53.0      5.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        516.0    516.0     57.5      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

51回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 'minos', 'minus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.4          1,
    16         1          2.0      2.0      2.9          234,
    17         1          1.0      1.0      1.4          543,
    18         1          1.0      1.0      1.4          766,
    19         1          1.0      1.0      1.4          44,
    20         1          1.0      1.0      1.4          5,
    21         1          1.0      1.0      1.4          100,
    22         1          1.0      1.0      1.4          20,
    23         1          1.0      1.0      1.4          111,
    24         1          1.0      1.0      1.4          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      1.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.4          0.134,
    28         1          1.0      1.0      1.4          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      1.4          "plus",
    31         1          1.0      1.0      1.4          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      1.4          "devide",
    34         1          1.0      1.0      1.4          "multiply",
    35         1          1.0      1.0      1.4          "divide",
    36         1          1.0      1.0      1.4          "plas",
    37         1          2.0      2.0      2.9          "minos",
    38         1          1.0      1.0      1.4          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         24.0     24.0     34.3          elements[random.randint(0,length)],
    43         1         11.0     11.0     15.7          elements[random.randint(0,length)],
    44         1          9.0      9.0     12.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.4      return extraction

Total time: 1.4e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     42.9      if isinstance(obj, int):
    52         1          1.0      1.0      7.1          return 1
    53                                           
    54         2          2.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     14.3      if isinstance(obj, str):
    61         2          1.0      0.5      7.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00073 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        131.0    131.0     17.9      inputValue = inputPart()
    89         1         10.0     10.0      1.4      judgeValue0 = judge(inputValue[0])
    90         1         16.0     16.0      2.2      judgeValue1 = judge(inputValue[1])
    91         1         13.0     13.0      1.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         32.0     32.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        525.0    525.0     71.9      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

52回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 26182576726545671723454736273454323454327667827345432763478372L, 234]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.8          234,
    17         1          1.0      1.0      2.8          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.8          100,
    22         1          1.0      1.0      2.8          20,
    23         1          1.0      1.0      2.8          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          1.0      1.0      2.8          "AAAd123482934",
    32         1          1.0      1.0      2.8          "minus",
    33         1          1.0      1.0      2.8          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     41.7          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     75.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000466 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     15.7      inputValue = inputPart()
    89         1          6.0      6.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         21.0     21.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        352.0    352.0     75.5      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

53回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multipy', 'plus', 'divide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     36.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     33.3      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          1.0      0.3     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          1.0      0.3     16.7      if isinstance(obj, str):
    61         3          2.0      0.7     33.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000534 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     13.7      inputValue = inputPart()
    89         1          9.0      9.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         19.0     19.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        418.0    418.0     78.3      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

54回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[5, 26182576726545671723454736273454323454327667827345432763478372L, 'multiply']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.6          1,
    16         1          1.0      1.0      1.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      1.6          766,
    19         1          1.0      1.0      1.6          44,
    20         1          1.0      1.0      1.6          5,
    21         1          1.0      1.0      1.6          100,
    22         1          1.0      1.0      1.6          20,
    23         1          1.0      1.0      1.6          111,
    24         1          1.0      1.0      1.6          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      1.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.6          0.134,
    28         1          1.0      1.0      1.6          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      1.6          "plus",
    31         1          1.0      1.0      1.6          "AAAd123482934",
    32         1          1.0      1.0      1.6          "minus",
    33         1          1.0      1.0      1.6          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      1.6          "divide",
    36         1          1.0      1.0      1.6          "plas",
    37         1          1.0      1.0      1.6          "minos",
    38         1          2.0      2.0      3.3          "multipy"
    39                                                   ]
    40         1          1.0      1.0      1.6      length = len(elements)-1
    41                                               extraction = [
    42         1         23.0     23.0     37.7          elements[random.randint(0,length)],
    43         1          8.0      8.0     13.1          elements[random.randint(0,length)],
    44         1          7.0      7.0     11.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.6      return extraction

Total time: 1.3e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     46.2      if isinstance(obj, int):
    52         1          1.0      1.0      7.7          return 1
    53                                           
    54         2          2.0      1.0     15.4      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     15.4      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     15.4      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000629 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        119.0    119.0     18.9      inputValue = inputPart()
    89         1          8.0      8.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1         12.0     12.0      1.9      judgeValue1 = judge(inputValue[1])
    91         1         11.0     11.0      1.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         27.0     27.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        449.0    449.0     71.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

55回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minos', 111, 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.1          1,
    16         1          1.0      1.0      2.1          234,
    17         1          1.0      1.0      2.1          543,
    18         1          1.0      1.0      2.1          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.1          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.1          0,
    26         1          1.0      1.0      2.1          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.1          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.1          "saerf",
    30         1          1.0      1.0      2.1          "plus",
    31         1          1.0      1.0      2.1          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.1          "multiply",
    35         1          1.0      1.0      2.1          "divide",
    36         1          1.0      1.0      2.1          "plas",
    37         1          1.0      1.0      2.1          "minos",
    38         1          1.0      1.0      2.1          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.1      length = len(elements)-1
    41                                               extraction = [
    42         1         19.0     19.0     39.6          elements[random.randint(0,length)],
    43         1          7.0      7.0     14.6          elements[random.randint(0,length)],
    44         1          5.0      5.0     10.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     80.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000586 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         87.0     87.0     14.8      inputValue = inputPart()
    89         1         12.0     12.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.7      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         24.0     24.0      4.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        451.0    451.0     77.0      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

56回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[371, 5, 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 5.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.0          1,
    16         1          1.0      1.0      2.0          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.0          766,
    19         1          1.0      1.0      2.0          44,
    20         1          1.0      1.0      2.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.0          371,
    25         1          1.0      1.0      2.0          0,
    26         1          1.0      1.0      2.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.0          "devide",
    34         1          1.0      1.0      2.0          "multiply",
    35         1          1.0      1.0      2.0          "divide",
    36         1          1.0      1.0      2.0          "plas",
    37         1          1.0      1.0      2.0          "minos",
    38         1          1.0      1.0      2.0          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.9      length = len(elements)-1
    41                                               extraction = [
    42         1         24.0     24.0     47.1          elements[random.randint(0,length)],
    43         1          6.0      6.0     11.8          elements[random.randint(0,length)],
    44         1          4.0      4.0      7.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7    100.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000539 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         88.0     88.0     16.3      inputValue = inputPart()
    89         1          6.0      6.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          3.0      3.0      0.6      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        413.0    413.0     76.6      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

57回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 20, 0]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.2          1,
    16         1          1.0      1.0      2.2          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.2          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.2          100,
    22         1          1.0      1.0      2.2          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.2          0,
    26         1          1.0      1.0      2.2          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.2          0.134,
    28         1          1.0      1.0      2.2          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.2          "minus",
    33         1          1.0      1.0      2.2          "devide",
    34         1          1.0      1.0      2.2          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.2          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.3      length = len(elements)-1
    41                                               extraction = [
    42         1         19.0     19.0     41.3          elements[random.randint(0,length)],
    43         1          7.0      7.0     15.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     10.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     57.1      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000589 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         87.0     87.0     14.8      inputValue = inputPart()
    89         1         12.0     12.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.7      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         25.0     25.0      4.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        454.0    454.0     77.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

58回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[371, 'minos', 'plus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.4          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     41.5          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.6          elements[random.randint(0,length)],
    44         1          4.0      4.0      9.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 1.3e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     38.5      if isinstance(obj, int):
    52         1          1.0      1.0      7.7          return 1
    53                                           
    54         2          2.0      1.0     15.4      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     15.4      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     15.4      if isinstance(obj, str):
    61         2          1.0      0.5      7.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000543 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         83.0     83.0     15.3      inputValue = inputPart()
    89         1          6.0      6.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         23.0     23.0      4.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        413.0    413.0     76.1      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

59回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[234, 100, 111]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.1          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.1          766,
    19         1          1.0      1.0      2.1          44,
    20         1          1.0      1.0      2.1          5,
    21         1          1.0      1.0      2.1          100,
    22         1          1.0      1.0      2.1          20,
    23         1          1.0      1.0      2.1          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.1          0.134,
    28         1          1.0      1.0      2.1          "あいう",
    29         1          1.0      1.0      2.1          "saerf",
    30         1          1.0      1.0      2.1          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.1          "devide",
    34         1          1.0      1.0      2.1          "multiply",
    35         1          1.0      1.0      2.1          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.1          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.3      length = len(elements)-1
    41                                               extraction = [
    42         1         19.0     19.0     40.4          elements[random.randint(0,length)],
    43         1          6.0      6.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     10.6          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     75.0      if isinstance(obj, int):
    52         3          1.0      0.3     25.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.001967 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         80.0     80.0      4.1      inputValue = inputPart()
    89         1          5.0      5.0      0.3      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.2      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.2      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         32.0     32.0      1.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       1836.0   1836.0     93.3      print str(inputValue).decode("string-escape")
   102         1          4.0      4.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

60回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[5, 'minus', 0]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.3          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.3          766,
    19         1          1.0      1.0      2.3          44,
    20         1          1.0      1.0      2.3          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.3          20,
    23         1          1.0      1.0      2.3          111,
    24         1          1.0      1.0      2.3          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.3          "あいう",
    29         1          1.0      1.0      2.3          "saerf",
    30         1          1.0      1.0      2.3          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.3          "multiply",
    35         1          1.0      1.0      2.3          "divide",
    36         1          1.0      1.0      2.3          "plas",
    37         1          1.0      1.0      2.3          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.3      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     39.5          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.0          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.6          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61         1          1.0      1.0     14.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000561 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         79.0     79.0     14.1      inputValue = inputPart()
    89         1          6.0      6.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.4      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        439.0    439.0     78.3      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

61回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['divide', 'あいう', 'あいう']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      1.6          234,
    17         1          1.0      1.0      1.6          543,
    18         1          1.0      1.0      1.6          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      1.6          5,
    21         1         14.0     14.0     22.6          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      1.6          0,
    26         1          1.0      1.0      1.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      1.6          "plus",
    31         1          1.0      1.0      1.6          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      1.6          "multiply",
    35         1          1.0      1.0      1.6          "divide",
    36         1          1.0      1.0      1.6          "plas",
    37         1          1.0      1.0      1.6          "minos",
    38         1          1.0      1.0      1.6          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.2      length = len(elements)-1
    41                                               extraction = [
    42         1         21.0     21.0     33.9          elements[random.randint(0,length)],
    43         1          7.0      7.0     11.3          elements[random.randint(0,length)],
    44         1          5.0      5.0      8.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 2.8e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     17.9      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7      7.1      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3         12.0      4.0     42.9      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          6.0      2.0     21.4      if isinstance(obj, str):
    61         3          3.0      1.0     10.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000669 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        104.0    104.0     15.5      inputValue = inputPart()
    89         1         11.0     11.0      1.6      judgeValue0 = judge(inputValue[0])
    90         1         27.0     27.0      4.0      judgeValue1 = judge(inputValue[1])
    91         1         13.0     13.0      1.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         43.0     43.0      6.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        468.0    468.0     70.0      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

62回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[111, 543, 'plas']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.4          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.4          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     38.1          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0      9.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     33.3      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     16.7      if isinstance(obj, str):
    61         1          1.0      1.0     16.7          return 3

Total time: 3.1e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      3.2      def sep():
    66                                                   print "--------------------------------------"
    67         1          0.0      0.0      0.0      def pr(x):
    68                                                   print x
    69         1         26.0     26.0     83.9      sep()
    70                                           
    71         1          1.0      1.0      3.2      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          0.0      0.0      0.0      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      3.2      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          0.0      0.0      0.0      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          1.0      1.0      3.2          result = "Operator is invalid."
    84         1          1.0      1.0      3.2      return result

Total time: 0.004226 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         84.0     84.0      2.0      inputValue = inputPart()
    89         1          6.0      6.0      0.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.1      judgeValue1 = judge(inputValue[1])
    91         1          9.0      9.0      0.2      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         42.0     42.0      1.0          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          2.0      2.0      0.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       4075.0   4075.0     96.4      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

63回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[543, 'multiply', 'plus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.3          1,
    16         1          1.0      1.0      2.3          234,
    17         1          1.0      1.0      2.3          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.3          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.3          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.3          111,
    24         1          1.0      1.0      2.3          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.3          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.3          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.3          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.3          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.3          "multiply",
    35         1          1.0      1.0      2.3          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.3      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     37.2          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.0          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.6          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.3      return extraction

Total time: 1.3e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     15.4      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5      7.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2         10.0      5.0     76.9      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000511 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         84.0     84.0     16.4      inputValue = inputPart()
    89         1          6.0      6.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1         18.0     18.0      3.5      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.4      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         22.0     22.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        370.0    370.0     72.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

64回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[5, 20, 20]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          1.0      1.0      2.5          543,
    18         1          1.0      1.0      2.5          766,
    19         1          1.0      1.0      2.5          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.5          20,
    23         1          1.0      1.0      2.5          111,
    24         1          1.0      1.0      2.5          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.5          "saerf",
    30         1          1.0      1.0      2.5          "plus",
    31         1          1.0      1.0      2.5          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          1.0      1.0      2.5          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     37.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         3          3.0      1.0     50.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000497 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         79.0     79.0     15.9      inputValue = inputPart()
    89         1          5.0      5.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         22.0     22.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        379.0    379.0     76.3      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

65回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 'minos', 'saerf']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 9.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.1          1,
    16         1          1.0      1.0      1.1          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      1.1          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      1.1          111,
    24         1          1.0      1.0      1.1          371,
    25         1          1.0      1.0      1.1          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      1.1          "saerf",
    30         1          1.0      1.0      1.1          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      1.1          "devide",
    34         1          1.0      1.0      1.1          "multiply",
    35         1          1.0      1.0      1.1          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      1.1          "multipy"
    39                                                   ]
    40         1         19.0     19.0     20.9      length = len(elements)-1
    41                                               extraction = [
    42         1         38.0     38.0     41.8          elements[random.randint(0,length)],
    43         1         12.0     12.0     13.2          elements[random.randint(0,length)],
    44         1          9.0      9.0      9.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.1      return extraction

Total time: 1.7e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     29.4      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          4.0      1.3     23.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          3.0      1.0     17.6      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          3.0      1.0     17.6      if isinstance(obj, str):
    61         3          2.0      0.7     11.8          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000757 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        146.0    146.0     19.3      inputValue = inputPart()
    89         1         16.0     16.0      2.1      judgeValue0 = judge(inputValue[0])
    90         1         12.0     12.0      1.6      judgeValue1 = judge(inputValue[1])
    91         1         11.0     11.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         32.0     32.0      4.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        536.0    536.0     70.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

66回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[100, 234, 26182576726545671723454736273454323454327667827345432763478372L]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.1          1,
    16         1          1.0      1.0      2.1          234,
    17         1          1.0      1.0      2.1          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.1          5,
    21         1          1.0      1.0      2.1          100,
    22         1          1.0      1.0      2.1          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.1          371,
    25         1          1.0      1.0      2.1          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.1          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.1          "AAAd123482934",
    32         1          1.0      1.0      2.1          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.1          "multiply",
    35         1          1.0      1.0      2.1          "divide",
    36         1          1.0      1.0      2.1          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.1          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.1      length = len(elements)-1
    41                                               extraction = [
    42         1         19.0     19.0     39.6          elements[random.randint(0,length)],
    43         1          7.0      7.0     14.6          elements[random.randint(0,length)],
    44         1          6.0      6.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     71.4      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000616 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         91.0     91.0     14.8      inputValue = inputPart()
    89         1          7.0      7.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1         11.0     11.0      1.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         24.0     24.0      3.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        476.0    476.0     77.3      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

67回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[1, 20, 26182576726545671723454736273454323454327667827345432763478372L]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.3          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.3          766,
    19         1          1.0      1.0      2.3          44,
    20         1          1.0      1.0      2.3          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.3          20,
    23         1          1.0      1.0      2.3          111,
    24         1          1.0      1.0      2.3          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.3          0.134,
    28         1          1.0      1.0      2.3          "あいう",
    29         1          1.0      1.0      2.3          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.3          "devide",
    34         1          1.0      1.0      2.3          "multiply",
    35         1          1.0      1.0      2.3          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.3      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     39.5          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.0          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.6          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     60.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     20.0      if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000624 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         80.0     80.0     12.8      inputValue = inputPart()
    89         1          6.0      6.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.6      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         26.0     26.0      4.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        495.0    495.0     79.3      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

68回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[371, 1, 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.4          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     38.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     60.0      if isinstance(obj, int):
    52         2          2.0      1.0     40.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000538 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         78.0     78.0     14.5      inputValue = inputPart()
    89         1          5.0      5.0      0.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.7      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         19.0     19.0      3.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        422.0    422.0     78.4      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

69回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 'あいう', 20]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.3          1,
    16         1          2.0      2.0      2.5          234,
    17         1          1.0      1.0      1.3          543,
    18         1          1.0      1.0      1.3          766,
    19         1          1.0      1.0      1.3          44,
    20         1          1.0      1.0      1.3          5,
    21         1          1.0      1.0      1.3          100,
    22         1          1.0      1.0      1.3          20,
    23         1          1.0      1.0      1.3          111,
    24         1          1.0      1.0      1.3          371,
    25         1          1.0      1.0      1.3          0,
    26         1          1.0      1.0      1.3          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.3          0.134,
    28         1          1.0      1.0      1.3          "あいう",
    29         1          1.0      1.0      1.3          "saerf",
    30         1          1.0      1.0      1.3          "plus",
    31         1          1.0      1.0      1.3          "AAAd123482934",
    32         1          1.0      1.0      1.3          "minus",
    33         1          1.0      1.0      1.3          "devide",
    34         1          1.0      1.0      1.3          "multiply",
    35         1          1.0      1.0      1.3          "divide",
    36         1          1.0      1.0      1.3          "plas",
    37         1          1.0      1.0      1.3          "minos",
    38         1          2.0      2.0      2.5          "multipy"
    39                                                   ]
    40         1          3.0      3.0      3.8      length = len(elements)-1
    41                                               extraction = [
    42         1         28.0     28.0     35.4          elements[random.randint(0,length)],
    43         1         11.0     11.0     13.9          elements[random.randint(0,length)],
    44         1         10.0     10.0     12.7          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.3      return extraction

Total time: 1.4e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     42.9      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          3.0      1.5     21.4      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          3.0      1.5     21.4      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     14.3      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00215 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        145.0    145.0      6.7      inputValue = inputPart()
    89         1         19.0     19.0      0.9      judgeValue0 = judge(inputValue[0])
    90         1         13.0     13.0      0.6      judgeValue1 = judge(inputValue[1])
    91         1          9.0      9.0      0.4      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         36.0     36.0      1.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       1923.0   1923.0     89.4      print str(inputValue).decode("string-escape")
   102         1          4.0      4.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

70回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[5, 'あいう', 'minos']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.4          1,
    16         1          2.0      2.0      2.9          234,
    17         1          1.0      1.0      1.4          543,
    18         1          1.0      1.0      1.4          766,
    19         1          1.0      1.0      1.4          44,
    20         1          1.0      1.0      1.4          5,
    21         1          1.0      1.0      1.4          100,
    22         1          1.0      1.0      1.4          20,
    23         1          1.0      1.0      1.4          111,
    24         1          1.0      1.0      1.4          371,
    25         1          1.0      1.0      1.4          0,
    26         1          1.0      1.0      1.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.4          0.134,
    28         1          1.0      1.0      1.4          "あいう",
    29         1          1.0      1.0      1.4          "saerf",
    30         1          1.0      1.0      1.4          "plus",
    31         1          1.0      1.0      1.4          "AAAd123482934",
    32         1          1.0      1.0      1.4          "minus",
    33         1          1.0      1.0      1.4          "devide",
    34         1          1.0      1.0      1.4          "multiply",
    35         1          1.0      1.0      1.4          "divide",
    36         1          1.0      1.0      1.4          "plas",
    37         1          1.0      1.0      1.4          "minos",
    38         1          1.0      1.0      1.4          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         24.0     24.0     34.3          elements[random.randint(0,length)],
    43         1         10.0     10.0     14.3          elements[random.randint(0,length)],
    44         1          8.0      8.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.4      return extraction

Total time: 1.4e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     35.7      if isinstance(obj, int):
    52         1          1.0      1.0      7.1          return 1
    53                                           
    54         2          2.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          3.0      1.5     21.4      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     14.3      if isinstance(obj, str):
    61         2          1.0      0.5      7.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000885 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        135.0    135.0     15.3      inputValue = inputPart()
    89         1         10.0     10.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1         15.0     15.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1         13.0     13.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         31.0     31.0      3.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        677.0    677.0     76.5      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

71回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[1, 111, 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.3          1,
    16         1          1.0      1.0      1.3          234,
    17         1          1.0      1.0      1.3          543,
    18         1          1.0      1.0      1.3          766,
    19         1          1.0      1.0      1.3          44,
    20         1          1.0      1.0      1.3          5,
    21         1          1.0      1.0      1.3          100,
    22         1          1.0      1.0      1.3          20,
    23         1          1.0      1.0      1.3          111,
    24         1          1.0      1.0      1.3          371,
    25         1          1.0      1.0      1.3          0,
    26         1          1.0      1.0      1.3          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.3          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      1.3          "plus",
    31         1          1.0      1.0      1.3          "AAAd123482934",
    32         1          1.0      1.0      1.3          "minus",
    33         1          1.0      1.0      1.3          "devide",
    34         1          1.0      1.0      1.3          "multiply",
    35         1          1.0      1.0      1.3          "divide",
    36         1          1.0      1.0      1.3          "plas",
    37         1          1.0      1.0      1.3          "minos",
    38         1          2.0      2.0      2.7          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         29.0     29.0     38.7          elements[random.randint(0,length)],
    43         1         12.0     12.0     16.0          elements[random.randint(0,length)],
    44         1          9.0      9.0     12.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1.2e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     50.0      if isinstance(obj, int):
    52         2          1.0      0.5      8.3          return 1
    53                                           
    54         1          1.0      1.0      8.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          2.0      2.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0      8.3      if isinstance(obj, str):
    61         1          1.0      1.0      8.3          return 3

Total time: 5.6e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      1.8      def sep():
    66                                                   print "--------------------------------------"
    67         1          2.0      2.0      3.6      def pr(x):
    68                                                   print x
    69         1         47.0     47.0     83.9      sep()
    70                                           
    71         1          1.0      1.0      1.8      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      1.8      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      1.8      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      1.8      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          1.0      1.0      1.8          result = "Operator is invalid."
    84         1          1.0      1.0      1.8      return result

Total time: 0.002701 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        138.0    138.0      5.1      inputValue = inputPart()
    89         1         10.0     10.0      0.4      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      0.3      judgeValue1 = judge(inputValue[1])
    91         1         15.0     15.0      0.6      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         75.0     75.0      2.8          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          3.0      3.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       2449.0   2449.0     90.7      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

72回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['AAAd123482934', 234, 'divide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 5.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      3.9          1,
    16         1          2.0      2.0      3.9          234,
    17         1          1.0      1.0      2.0          543,
    18         1          1.0      1.0      2.0          766,
    19         1          1.0      1.0      2.0          44,
    20         1          1.0      1.0      2.0          5,
    21         1          1.0      1.0      2.0          100,
    22         1          1.0      1.0      2.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.0          371,
    25         1          1.0      1.0      2.0          0,
    26         1          1.0      1.0      2.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.0          0.134,
    28         1          1.0      1.0      2.0          "あいう",
    29         1          1.0      1.0      2.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.0          "minus",
    33         1          1.0      1.0      2.0          "devide",
    34         1          1.0      1.0      2.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.0          "minos",
    38         1          2.0      2.0      3.9          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.9      length = len(elements)-1
    41                                               extraction = [
    42         1         18.0     18.0     35.3          elements[random.randint(0,length)],
    43         1          5.0      5.0      9.8          elements[random.randint(0,length)],
    44         1          4.0      4.0      7.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     44.4      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     22.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     22.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     11.1      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000642 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        111.0    111.0     17.3      inputValue = inputPart()
    89         1         10.0     10.0      1.6      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.6      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         24.0     24.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        484.0    484.0     75.4      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

73回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 766, 'minus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         2          1.0      0.5     16.7          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 4.3e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      2.3      def sep():
    66                                                   print "--------------------------------------"
    67         1          0.0      0.0      0.0      def pr(x):
    68                                                   print x
    69         1         39.0     39.0     90.7      sep()
    70                                           
    71         1          1.0      1.0      2.3      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      2.3      elif list[2] == "minus":
    74         1          0.0      0.0      0.0          result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84         1          1.0      1.0      2.3      return result

Total time: 0.000622 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     11.6      inputValue = inputPart()
    89         1          5.0      5.0      0.8      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.6      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         51.0     51.0      8.2          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        478.0    478.0     76.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

74回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[5, 766, 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.2          1,
    16         1          1.0      1.0      2.2          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.2          766,
    19         1          1.0      1.0      2.2          44,
    20         1          1.0      1.0      2.2          5,
    21         1          1.0      1.0      2.2          100,
    22         1          1.0      1.0      2.2          20,
    23         1          1.0      1.0      2.2          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.2          0.134,
    28         1          1.0      1.0      2.2          "あいう",
    29         1          1.0      1.0      2.2          "saerf",
    30         1          1.0      1.0      2.2          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.2          "devide",
    34         1          1.0      1.0      2.2          "multiply",
    35         1          1.0      1.0      2.2          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.2          "minos",
    38         1          1.0      1.0      2.2          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.2      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     37.0          elements[random.randint(0,length)],
    43         1          6.0      6.0     13.0          elements[random.randint(0,length)],
    44         1          5.0      5.0     10.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0    100.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000643 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         88.0     88.0     13.7      inputValue = inputPart()
    89         1          7.0      7.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.6      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         26.0     26.0      4.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        508.0    508.0     79.0      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

75回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0.134, 5, 111]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 0.001775 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      0.1          1,
    16         1          2.0      2.0      0.1          234,
    17         1          1.0      1.0      0.1          543,
    18         1          1.0      1.0      0.1          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      0.1          5,
    21         1          1.0      1.0      0.1          100,
    22         1          1.0      1.0      0.1          20,
    23         1          1.0      1.0      0.1          111,
    24         1          1.0      1.0      0.1          371,
    25         1          1.0      1.0      0.1          0,
    26         1          1.0      1.0      0.1          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      0.1          0.134,
    28         1          1.0      1.0      0.1          "あいう",
    29         1          1.0      1.0      0.1          "saerf",
    30         1          1.0      1.0      0.1          "plus",
    31         1          1.0      1.0      0.1          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      0.1          "devide",
    34         1          1.0      1.0      0.1          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      0.1          "plas",
    37         1          1.0      1.0      0.1          "minos",
    38         1          1.0      1.0      0.1          "multipy"
    39                                                   ]
    40         1          2.0      2.0      0.1      length = len(elements)-1
    41                                               extraction = [
    42         1         22.0     22.0      1.2          elements[random.randint(0,length)],
    43         1          9.0      9.0      0.5          elements[random.randint(0,length)],
    44         1       1718.0   1718.0     96.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          2.0      2.0      0.1      return extraction

Total time: 0.000171 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3        166.0     55.3     97.1      if isinstance(obj, int):
    52         2          1.0      0.5      0.6          return 1
    53                                           
    54         1          3.0      3.0      1.8      if isinstance(obj, float):
    55         1          1.0      1.0      0.6          return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.002994 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1       1838.0   1838.0     61.4      inputValue = inputPart()
    89         1        188.0    188.0      6.3      judgeValue0 = judge(inputValue[0])
    90         1          9.0      9.0      0.3      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      0.2      judgeValue2 = judge(inputValue[2])
    92         1          3.0      3.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.0          output = "error"
    96                                               
    97         1         42.0     42.0      1.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        903.0    903.0     30.2      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

76回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[371, 'multiply', 'divide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.2          234,
    17         1          1.0      1.0      2.2          543,
    18         1          1.0      1.0      2.2          766,
    19         1          1.0      1.0      2.2          44,
    20         1          1.0      1.0      2.2          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.2          0,
    26         1          1.0      1.0      2.2          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.2          0.134,
    28         1          1.0      1.0      2.2          "あいう",
    29         1          1.0      1.0      2.2          "saerf",
    30         1          1.0      1.0      2.2          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.2          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.2          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.4      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     35.6          elements[random.randint(0,length)],
    43         1          7.0      7.0     15.6          elements[random.randint(0,length)],
    44         1          6.0      6.0     13.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.2      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         1          1.0      1.0     14.3          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000513 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         78.0     78.0     15.2      inputValue = inputPart()
    89         1          5.0      5.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.6      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         19.0     19.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        394.0    394.0     76.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

77回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[766, 766, 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.4          1,
    16         1          1.0      1.0      1.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      1.4          100,
    22         1          1.0      1.0      1.4          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.4          0.134,
    28         1          1.0      1.0      1.4          "あいう",
    29         1          1.0      1.0      1.4          "saerf",
    30         1          1.0      1.0      1.4          "plus",
    31         1          1.0      1.0      1.4          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      1.4          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      1.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      1.4      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     21.4          elements[random.randint(0,length)],
    43         1         16.0     16.0     22.9          elements[random.randint(0,length)],
    44         1         26.0     26.0     37.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.4      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     62.5      if isinstance(obj, int):
    52         2          1.0      0.5     12.5          return 1
    53                                           
    54         1          1.0      1.0     12.5      if isinstance(obj, float):
    55         1          1.0      1.0     12.5          return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000579 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        109.0    109.0     18.8      inputValue = inputPart()
    89         1          9.0      9.0      1.6      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.0      judgeValue1 = judge(inputValue[1])
    91         1          9.0      9.0      1.6      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         46.0     46.0      7.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        397.0    397.0     68.6      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

78回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 20, 'divide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.5          1,
    16         1          2.0      2.0      3.1          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      1.5          766,
    19         1          1.0      1.0      1.5          44,
    20         1          1.0      1.0      1.5          5,
    21         1          1.0      1.0      1.5          100,
    22         1          1.0      1.0      1.5          20,
    23         1          1.0      1.0      1.5          111,
    24         1          1.0      1.0      1.5          371,
    25         1          1.0      1.0      1.5          0,
    26         1          1.0      1.0      1.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.5          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      1.5          "plus",
    31         1          1.0      1.0      1.5          "AAAd123482934",
    32         1          1.0      1.0      1.5          "minus",
    33         1          1.0      1.0      1.5          "devide",
    34         1          1.0      1.0      1.5          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      1.5          "plas",
    37         1          1.0      1.0      1.5          "minos",
    38         1          1.0      1.0      1.5          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.1      length = len(elements)-1
    41                                               extraction = [
    42         1         23.0     23.0     35.4          elements[random.randint(0,length)],
    43         1         10.0     10.0     15.4          elements[random.randint(0,length)],
    44         1          9.0      9.0     13.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1.2e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          8.0      2.7     66.7      if isinstance(obj, int):
    52         2          1.0      0.5      8.3          return 1
    53                                           
    54         1          1.0      1.0      8.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0      8.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0      8.3      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 5.1e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      2.0      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      2.0      def pr(x):
    68                                                   print x
    69         1         41.0     41.0     80.4      sep()
    70                                           
    71         1          1.0      1.0      2.0      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      2.0      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      2.0      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      2.0      elif list[2] == "divide":
    78         1          1.0      1.0      2.0          if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81         1          2.0      2.0      3.9              result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84         1          1.0      1.0      2.0      return result

Total time: 0.000678 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        130.0    130.0     19.2      inputValue = inputPart()
    89         1         11.0     11.0      1.6      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1         18.0     18.0      2.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         70.0     70.0     10.3          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        439.0    439.0     64.7      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

79回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multiply', 371, 20]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     38.5          elements[random.randint(0,length)],
    43         1          6.0      6.0     15.4          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     40.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     20.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000507 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0     15.0      inputValue = inputPart()
    89         1          9.0      9.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         19.0     19.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        392.0    392.0     77.3      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

80回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 'AAAd123482934', 'あいう']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.8          1,
    16         1          1.0      1.0      2.8          234,
    17         1          1.0      1.0      2.8          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.8          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.8          0.134,
    28         1          1.0      1.0      2.8          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.8          "divide",
    36         1          1.0      1.0      2.8          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     41.7          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          1.0      0.3     14.3      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     28.6      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          2.0      0.7     28.6      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          2.0      0.7     28.6      if isinstance(obj, str):
    61         3          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000468 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.0      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        358.0    358.0     76.5      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

81回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[543, 1, 'plus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 0.000122 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      0.8          1,
    16         1          1.0      1.0      0.8          234,
    17         1          2.0      2.0      1.6          543,
    18         1          1.0      1.0      0.8          766,
    19         1          1.0      1.0      0.8          44,
    20         1          1.0      1.0      0.8          5,
    21         1          1.0      1.0      0.8          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      0.8          371,
    25         1          1.0      1.0      0.8          0,
    26         1          1.0      1.0      0.8          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      0.8          0.134,
    28         1          1.0      1.0      0.8          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      0.8          "AAAd123482934",
    32         1          1.0      1.0      0.8          "minus",
    33         1          1.0      1.0      0.8          "devide",
    34         1          1.0      1.0      0.8          "multiply",
    35         1          1.0      1.0      0.8          "divide",
    36         1          1.0      1.0      0.8          "plas",
    37         1          1.0      1.0      0.8          "minos",
    38         1          1.0      1.0      0.8          "multipy"
    39                                                   ]
    40         1          3.0      3.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         32.0     32.0     26.2          elements[random.randint(0,length)],
    43         1         51.0     51.0     41.8          elements[random.randint(0,length)],
    44         1         14.0     14.0     11.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      0.8      return extraction

Total time: 1.3e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          8.0      2.7     61.5      if isinstance(obj, int):
    52         2          1.0      0.5      7.7          return 1
    53                                           
    54         1          2.0      2.0     15.4      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0      7.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0      7.7      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 6.6e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          3.0      3.0      4.5      def sep():
    66                                                   print "--------------------------------------"
    67         1          2.0      2.0      3.0      def pr(x):
    68                                                   print x
    69         1         57.0     57.0     86.4      sep()
    70                                           
    71         1          2.0      2.0      3.0      if list[2] == "plus":
    72         1          1.0      1.0      1.5          result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84         1          1.0      1.0      1.5      return result

Total time: 0.00135 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        255.0    255.0     18.9      inputValue = inputPart()
    89         1         14.0     14.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      0.5      judgeValue1 = judge(inputValue[1])
    91         1         49.0     49.0      3.6      judgeValue2 = judge(inputValue[2])
    92         1          2.0      2.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1        111.0    111.0      8.2          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          3.0      3.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        907.0    907.0     67.2      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

82回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['saerf', 371, 0]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.3          1,
    16         1          2.0      2.0      2.7          234,
    17         1          1.0      1.0      1.3          543,
    18         1          1.0      1.0      1.3          766,
    19         1          1.0      1.0      1.3          44,
    20         1          1.0      1.0      1.3          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      1.3          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      1.3          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.3          0.134,
    28         1          1.0      1.0      1.3          "あいう",
    29         1          1.0      1.0      1.3          "saerf",
    30         1          1.0      1.0      1.3          "plus",
    31         1          1.0      1.0      1.3          "AAAd123482934",
    32         1          1.0      1.0      1.3          "minus",
    33         1          1.0      1.0      1.3          "devide",
    34         1          1.0      1.0      1.3          "multiply",
    35         1          1.0      1.0      1.3          "divide",
    36         1          1.0      1.0      1.3          "plas",
    37         1          1.0      1.0      1.3          "minos",
    38         1          2.0      2.0      2.7          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         29.0     29.0     38.7          elements[random.randint(0,length)],
    43         1         12.0     12.0     16.0          elements[random.randint(0,length)],
    44         1         10.0     10.0     13.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     66.7      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     11.1      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     11.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     11.1      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000994 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        143.0    143.0     14.4      inputValue = inputPart()
    89         1         20.0     20.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         38.0     38.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        774.0    774.0     77.9      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

83回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[20, 371, 44]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 8.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.2          1,
    16         1          2.0      2.0      2.4          234,
    17         1          1.0      1.0      1.2          543,
    18         1          1.0      1.0      1.2          766,
    19         1          1.0      1.0      1.2          44,
    20         1          1.0      1.0      1.2          5,
    21         1          1.0      1.0      1.2          100,
    22         1          1.0      1.0      1.2          20,
    23         1          1.0      1.0      1.2          111,
    24         1          1.0      1.0      1.2          371,
    25         1          1.0      1.0      1.2          0,
    26         1          1.0      1.0      1.2          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.2          0.134,
    28         1          1.0      1.0      1.2          "あいう",
    29         1          1.0      1.0      1.2          "saerf",
    30         1          1.0      1.0      1.2          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      1.2          "minus",
    33         1          1.0      1.0      1.2          "devide",
    34         1          1.0      1.0      1.2          "multiply",
    35         1          1.0      1.0      1.2          "divide",
    36         1          1.0      1.0      1.2          "plas",
    37         1          1.0      1.0      1.2          "minos",
    38         1          1.0      1.0      1.2          "multipy"
    39                                                   ]
    40         1          3.0      3.0      3.6      length = len(elements)-1
    41                                               extraction = [
    42         1         41.0     41.0     49.4          elements[random.randint(0,length)],
    43         1          9.0      9.0     10.8          elements[random.randint(0,length)],
    44         1          5.0      5.0      6.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.2      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     40.0      if isinstance(obj, int):
    52         3          3.0      1.0     60.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00058 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        147.0    147.0     25.3      inputValue = inputPart()
    89         1          6.0      6.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.7      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      3.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        396.0    396.0     68.3      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

84回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[371, 'saerf', 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          1.0      1.0      2.4          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     41.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.2          elements[random.randint(0,length)],
    44         1          4.0      4.0      9.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     57.1      if isinstance(obj, int):
    52         1          1.0      1.0     14.3          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000626 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0     12.1      inputValue = inputPart()
    89         1          5.0      5.0      0.8      judgeValue0 = judge(inputValue[0])
    90         1          9.0      9.0      1.4      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.0      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         19.0     19.0      3.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        509.0    509.0     81.3      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

85回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multipy', 234, 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          1.0      1.0      2.9          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          1.0      1.0      2.9          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     41.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.7          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     50.0      if isinstance(obj, int):
    52         1          1.0      1.0     12.5          return 1
    53                                           
    54         2          1.0      0.5     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          2.0      1.0     25.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00047 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.1      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         18.0     18.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        358.0    358.0     76.2      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

86回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[234, 100, 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.5          1,
    16         1          2.0      2.0      3.0          234,
    17         1          1.0      1.0      1.5          543,
    18         1          1.0      1.0      1.5          766,
    19         1          1.0      1.0      1.5          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      1.5          100,
    22         1          1.0      1.0      1.5          20,
    23         1          1.0      1.0      1.5          111,
    24         1          1.0      1.0      1.5          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      1.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.5          0.134,
    28         1          1.0      1.0      1.5          "あいう",
    29         1          1.0      1.0      1.5          "saerf",
    30         1          1.0      1.0      1.5          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      1.5          "minus",
    33         1          1.0      1.0      1.5          "devide",
    34         1          1.0      1.0      1.5          "multiply",
    35         1          1.0      1.0      1.5          "divide",
    36         1          1.0      1.0      1.5          "plas",
    37         1          1.0      1.0      1.5          "minos",
    38         1          2.0      2.0      3.0          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.0      length = len(elements)-1
    41                                               extraction = [
    42         1         24.0     24.0     35.8          elements[random.randint(0,length)],
    43         1          9.0      9.0     13.4          elements[random.randint(0,length)],
    44         1          8.0      8.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.5      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3    100.0      if isinstance(obj, int):
    52         3          0.0      0.0      0.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000908 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        123.0    123.0     13.5      inputValue = inputPart()
    89         1          9.0      9.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      0.7      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         27.0     27.0      3.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        733.0    733.0     80.7      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

87回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[543, 'minus', 100]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      2.7          1,
    16         1          2.0      2.0      2.7          234,
    17         1          1.0      1.0      1.4          543,
    18         1          1.0      1.0      1.4          766,
    19         1          1.0      1.0      1.4          44,
    20         1          1.0      1.0      1.4          5,
    21         1          1.0      1.0      1.4          100,
    22         1          1.0      1.0      1.4          20,
    23         1          1.0      1.0      1.4          111,
    24         1          1.0      1.0      1.4          371,
    25         1          1.0      1.0      1.4          0,
    26         1          1.0      1.0      1.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.4          0.134,
    28         1          1.0      1.0      1.4          "あいう",
    29         1          1.0      1.0      1.4          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      1.4          "AAAd123482934",
    32         1          1.0      1.0      1.4          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      1.4          "multiply",
    35         1          1.0      1.0      1.4          "divide",
    36         1          1.0      1.0      1.4          "plas",
    37         1          1.0      1.0      1.4          "minos",
    38         1          2.0      2.0      2.7          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         26.0     26.0     35.1          elements[random.randint(0,length)],
    43         1         11.0     11.0     14.9          elements[random.randint(0,length)],
    44         1          9.0      9.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.4      return extraction

Total time: 1.2e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     50.0      if isinstance(obj, int):
    52         2          1.0      0.5      8.3          return 1
    53                                           
    54         1          2.0      2.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0      8.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0      8.3      if isinstance(obj, str):
    61         1          1.0      1.0      8.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.003457 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        133.0    133.0      3.8      inputValue = inputPart()
    89         1         10.0     10.0      0.3      judgeValue0 = judge(inputValue[0])
    90         1         16.0     16.0      0.5      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      0.2      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         37.0     37.0      1.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       3249.0   3249.0     94.0      print str(inputValue).decode("string-escape")
   102         1          4.0      4.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

88回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[543, 'AAAd123482934', 111]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.7          0.134,
    28         1          1.0      1.0      2.7          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.7          "divide",
    36         1          1.0      1.0      2.7          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     37.8          elements[random.randint(0,length)],
    43         1          6.0      6.0     16.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.7      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         2          1.0      0.5     16.7          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          1.0      1.0     16.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000475 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     15.2      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.6      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        368.0    368.0     77.5      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

89回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[20, 'plas', 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.8          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.8          44,
    20         1          1.0      1.0      2.8          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.8          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.8          0.134,
    28         1          1.0      1.0      2.8          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.8          "plas",
    37         1          1.0      1.0      2.8          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     41.7          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     33.3      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     11.1      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     22.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     22.2      if isinstance(obj, str):
    61         2          1.0      0.5     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000484 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     15.1      inputValue = inputPart()
    89         1          6.0      6.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         19.0     19.0      3.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        369.0    369.0     76.2      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

90回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[371, 1, 44]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.4          1,
    16         1          2.0      2.0      2.9          234,
    17         1          1.0      1.0      1.4          543,
    18         1          1.0      1.0      1.4          766,
    19         1          1.0      1.0      1.4          44,
    20         1          1.0      1.0      1.4          5,
    21         1          1.0      1.0      1.4          100,
    22         1          1.0      1.0      1.4          20,
    23         1          1.0      1.0      1.4          111,
    24         1          1.0      1.0      1.4          371,
    25         1          1.0      1.0      1.4          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      1.4          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      1.4          "AAAd123482934",
    32         1          1.0      1.0      1.4          "minus",
    33         1          1.0      1.0      1.4          "devide",
    34         1          1.0      1.0      1.4          "multiply",
    35         1          1.0      1.0      1.4          "divide",
    36         1          1.0      1.0      1.4          "plas",
    37         1          1.0      1.0      1.4          "minos",
    38         1          1.0      1.0      1.4          "multipy"
    39                                                   ]
    40         1          3.0      3.0      4.3      length = len(elements)-1
    41                                               extraction = [
    42         1         25.0     25.0     36.2          elements[random.randint(0,length)],
    43         1         10.0     10.0     14.5          elements[random.randint(0,length)],
    44         1          9.0      9.0     13.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.4      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         3          3.0      1.0     50.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.001274 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        135.0    135.0     10.6      inputValue = inputPart()
    89         1          9.0      9.0      0.7      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      0.5      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      0.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         41.0     41.0      3.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       1071.0   1071.0     84.1      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

91回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[371, 0.134, 26182576726545671723454736273454323454327667827345432763478372L]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.2          1,
    16         1          1.0      1.0      2.2          234,
    17         1          1.0      1.0      2.2          543,
    18         1          1.0      1.0      2.2          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.2          20,
    23         1          1.0      1.0      2.2          111,
    24         1          1.0      1.0      2.2          371,
    25         1          1.0      1.0      2.2          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.2          "AAAd123482934",
    32         1          1.0      1.0      2.2          "minus",
    33         1          1.0      1.0      2.2          "devide",
    34         1          1.0      1.0      2.2          "multiply",
    35         1          1.0      1.0      2.2          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.2          "minos",
    38         1          1.0      1.0      2.2          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.4      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     37.8          elements[random.randint(0,length)],
    43         1          6.0      6.0     13.3          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     16.7      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     16.7      if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000515 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0     14.8      inputValue = inputPart()
    89         1          6.0      6.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.4      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.4      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         18.0     18.0      3.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        399.0    399.0     77.5      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

92回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 44, 111]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.5          543,
    18         1          1.0      1.0      2.5          766,
    19         1          1.0      1.0      2.5          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.5          111,
    24         1          1.0      1.0      2.5          371,
    25         1          1.0      1.0      2.5          0,
    26         1          1.0      1.0      2.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.5          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.5          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          1.0      1.0      2.5          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     66.7      if isinstance(obj, int):
    52         2          1.0      0.5     33.3          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000472 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.0      inputValue = inputPart()
    89         1          8.0      8.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.6      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         19.0     19.0      4.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        366.0    366.0     77.5      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

93回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multipy', 'divide', 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 0.000105 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      1.9          1,
    16         1          2.0      2.0      1.9          234,
    17         1          2.0      2.0      1.9          543,
    18         1          1.0      1.0      1.0          766,
    19         1          1.0      1.0      1.0          44,
    20         1          1.0      1.0      1.0          5,
    21         1          1.0      1.0      1.0          100,
    22         1          1.0      1.0      1.0          20,
    23         1          1.0      1.0      1.0          111,
    24         1          1.0      1.0      1.0          371,
    25         1          1.0      1.0      1.0          0,
    26         1          1.0      1.0      1.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.0          0.134,
    28         1          1.0      1.0      1.0          "あいう",
    29         1          1.0      1.0      1.0          "saerf",
    30         1          1.0      1.0      1.0          "plus",
    31         1          1.0      1.0      1.0          "AAAd123482934",
    32         1          1.0      1.0      1.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      1.0          "multiply",
    35         1          1.0      1.0      1.0          "divide",
    36         1          1.0      1.0      1.0          "plas",
    37         1          1.0      1.0      1.0          "minos",
    38         1          2.0      2.0      1.9          "multipy"
    39                                                   ]
    40         1          2.0      2.0      1.9      length = len(elements)-1
    41                                               extraction = [
    42         1         53.0     53.0     50.5          elements[random.randint(0,length)],
    43         1         13.0     13.0     12.4          elements[random.randint(0,length)],
    44         1         10.0     10.0      9.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1.8e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          7.0      2.3     38.9      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          3.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          3.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          2.0      0.7     11.1      if isinstance(obj, str):
    61         3          3.0      1.0     16.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.001076 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        209.0    209.0     19.4      inputValue = inputPart()
    89         1         18.0     18.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1         12.0     12.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1         12.0     12.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         35.0     35.0      3.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        787.0    787.0     73.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

94回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 'devide', 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      4.4          1,
    16         1          1.0      1.0      2.2          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.2          766,
    19         1          1.0      1.0      2.2          44,
    20         1          1.0      1.0      2.2          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.2          20,
    23         1          1.0      1.0      2.2          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.2          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.2          0.134,
    28         1          1.0      1.0      2.2          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.2          "minus",
    33         1          1.0      1.0      2.2          "devide",
    34         1          1.0      1.0      2.2          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.2          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.4      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     37.8          elements[random.randint(0,length)],
    43         1          6.0      6.0     13.3          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1.4e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     42.9      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          3.0      1.0     21.4      if isinstance(obj, float):
    55         1          1.0      1.0      7.1          return 1
    56                                           
    57         2          2.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     14.3      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000705 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        108.0    108.0     15.3      inputValue = inputPart()
    89         1         11.0     11.0      1.6      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.0      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         24.0     24.0      3.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        543.0    543.0     77.0      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

95回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[543, 111, 'minus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          1.0      1.0      2.5          543,
    18         1          1.0      1.0      2.5          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.5          100,
    22         1          1.0      1.0      2.5          20,
    23         1          1.0      1.0      2.5          111,
    24         1          1.0      1.0      2.5          371,
    25         1          1.0      1.0      2.5          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.5          "plus",
    31         1          1.0      1.0      2.5          "AAAd123482934",
    32         1          1.0      1.0      2.5          "minus",
    33         1          1.0      1.0      2.5          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.0          elements[random.randint(0,length)],
    43         1          4.0      4.0     10.0          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          1.0      0.3     33.3      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     33.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          1.0      1.0     33.3          return 3

Total time: 2.7e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      3.7      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      3.7      def pr(x):
    68                                                   print x
    69         1         22.0     22.0     81.5      sep()
    70                                           
    71         1          1.0      1.0      3.7      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          0.0      0.0      0.0      elif list[2] == "minus":
    74         1          1.0      1.0      3.7          result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84         1          1.0      1.0      3.7      return result

Total time: 0.000513 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     13.8      inputValue = inputPart()
    89         1          5.0      5.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.6      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         35.0     35.0      6.8          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        387.0    387.0     75.4      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

96回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 100, 'divide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.4          1,
    16         1          1.0      1.0      1.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      1.4          766,
    19         1          1.0      1.0      1.4          44,
    20         1          1.0      1.0      1.4          5,
    21         1          1.0      1.0      1.4          100,
    22         1          1.0      1.0      1.4          20,
    23         1          1.0      1.0      1.4          111,
    24         1          1.0      1.0      1.4          371,
    25         1          1.0      1.0      1.4          0,
    26         1          1.0      1.0      1.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.4          0.134,
    28         1          1.0      1.0      1.4          "あいう",
    29         1          1.0      1.0      1.4          "saerf",
    30         1          1.0      1.0      1.4          "plus",
    31         1          1.0      1.0      1.4          "AAAd123482934",
    32         1          1.0      1.0      1.4          "minus",
    33         1          1.0      1.0      1.4          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      1.4          "minos",
    38         1          1.0      1.0      1.4          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         27.0     27.0     37.5          elements[random.randint(0,length)],
    43         1         12.0     12.0     16.7          elements[random.randint(0,length)],
    44         1         10.0     10.0     13.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.4      return extraction

Total time: 1.7e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          8.0      2.7     47.1      if isinstance(obj, int):
    52         1          1.0      1.0      5.9          return 1
    53                                           
    54         2          3.0      1.5     17.6      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     11.8      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     11.8      if isinstance(obj, str):
    61         1          1.0      1.0      5.9          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.001184 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        136.0    136.0     11.5      inputValue = inputPart()
    89         1         19.0     19.0      1.6      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      0.6      judgeValue1 = judge(inputValue[1])
    91         1         13.0     13.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         35.0     35.0      3.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        970.0    970.0     81.9      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

97回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['divide', 5, 543]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          1.0      1.0      2.6          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     42.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     16.7      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000595 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         75.0     75.0     12.6      inputValue = inputPart()
    89         1          9.0      9.0      1.5      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.7      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.5      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         18.0     18.0      3.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        484.0    484.0     81.3      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

98回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[5, 'multipy', 26182576726545671723454736273454323454327667827345432763478372L]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.4          5,
    21         1          1.0      1.0      2.4          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.4          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     35.7          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     33.3      if isinstance(obj, int):
    52         1          1.0      1.0     11.1          return 1
    53                                           
    54         2          2.0      1.0     22.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     22.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     11.1      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000469 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         74.0     74.0     15.8      inputValue = inputPart()
    89         1          6.0      6.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          9.0      9.0      1.9      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         16.0     16.0      3.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        355.0    355.0     75.7      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

99回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[234, 'minos', 'minos']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          1.0      1.0      2.5          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.5          100,
    22         1          1.0      1.0      2.5          20,
    23         1          1.0      1.0      2.5          111,
    24         1          1.0      1.0      2.5          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.5          "plus",
    31         1          1.0      1.0      2.5          "AAAd123482934",
    32         1          1.0      1.0      2.5          "minus",
    33         1          1.0      1.0      2.5          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     40.0      if isinstance(obj, int):
    52         1          1.0      1.0     10.0          return 1
    53                                           
    54         2          1.0      0.5     10.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     10.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     10.0      if isinstance(obj, str):
    61         2          2.0      1.0     20.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000499 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     14.2      inputValue = inputPart()
    89         1          5.0      5.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.6      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         18.0     18.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        388.0    388.0     77.8      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

100回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 'minus', 100]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.5          1,
    16         1          2.0      2.0      3.1          234,
    17         1          1.0      1.0      1.5          543,
    18         1          1.0      1.0      1.5          766,
    19         1          1.0      1.0      1.5          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      1.5          100,
    22         1          1.0      1.0      1.5          20,
    23         1          1.0      1.0      1.5          111,
    24         1          1.0      1.0      1.5          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.5          0.134,
    28         1          1.0      1.0      1.5          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      1.5          "plus",
    31         1          1.0      1.0      1.5          "AAAd123482934",
    32         1          1.0      1.0      1.5          "minus",
    33         1          1.0      1.0      1.5          "devide",
    34         1          1.0      1.0      1.5          "multiply",
    35         1          1.0      1.0      1.5          "divide",
    36         1          1.0      1.0      1.5          "plas",
    37         1          1.0      1.0      1.5          "minos",
    38         1          1.0      1.0      1.5          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.1      length = len(elements)-1
    41                                               extraction = [
    42         1         23.0     23.0     35.4          elements[random.randint(0,length)],
    43         1         10.0     10.0     15.4          elements[random.randint(0,length)],
    44         1          8.0      8.0     12.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.5      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     50.0      if isinstance(obj, int):
    52         2          2.0      1.0     20.0          return 1
    53                                           
    54         1          1.0      1.0     10.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     10.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     10.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00065 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        128.0    128.0     19.7      inputValue = inputPart()
    89         1         10.0     10.0      1.5      judgeValue0 = judge(inputValue[0])
    90         1         15.0     15.0      2.3      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         37.0     37.0      5.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        450.0    450.0     69.2      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

101回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multipy', 234, 'multipy']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 5.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      1.9          543,
    18         1          1.0      1.0      1.9          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      1.9          100,
    22         1          1.0      1.0      1.9          20,
    23         1          1.0      1.0      1.9          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.9          0.134,
    28         1          1.0      1.0      1.9          "あいう",
    29         1          1.0      1.0      1.9          "saerf",
    30         1          1.0      1.0      1.9          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      1.9          "multiply",
    35         1          1.0      1.0      1.9          "divide",
    36         1          1.0      1.0      1.9          "plas",
    37         1          1.0      1.0      1.9          "minos",
    38         1          1.0      1.0      1.9          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.8      length = len(elements)-1
    41                                               extraction = [
    42         1         26.0     26.0     49.1          elements[random.randint(0,length)],
    43         1          6.0      6.0     11.3          elements[random.randint(0,length)],
    44         1          5.0      5.0      9.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     12.5      if isinstance(obj, str):
    61         2          1.0      0.5     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000884 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         88.0     88.0     10.0      inputValue = inputPart()
    89         1         11.0     11.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.6      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         21.0     21.0      2.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        747.0    747.0     84.5      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

102回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0.134, 0.134, 5]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.5          234,
    17         1          1.0      1.0      2.5          543,
    18         1          1.0      1.0      2.5          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.5          20,
    23         1          1.0      1.0      2.5          111,
    24         1          1.0      1.0      2.5          371,
    25         1          1.0      1.0      2.5          0,
    26         1          1.0      1.0      2.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.5          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          1.0      1.0      2.5          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     66.7      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          0.0      0.0      0.0      if isinstance(obj, float):
    55         2          1.0      0.5     33.3          return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000736 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0      9.5      inputValue = inputPart()
    89         1          8.0      8.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.7      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.4      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         18.0     18.0      2.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        630.0    630.0     85.6      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

103回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[20, 1, 'multipy']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.9          234,
    17         1          1.0      1.0      2.9          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          1.0      1.0      2.9          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.9          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     42.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     33.3      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     16.7      if isinstance(obj, str):
    61         1          1.0      1.0     16.7          return 3

Total time: 2.1e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      4.8      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      4.8      def pr(x):
    68                                                   print x
    69         1         17.0     17.0     81.0      sep()
    70                                           
    71         1          1.0      1.0      4.8      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          0.0      0.0      0.0      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          0.0      0.0      0.0      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      4.8      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          0.0      0.0      0.0          result = "Operator is invalid."
    84         1          0.0      0.0      0.0      return result

Total time: 0.000477 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     15.3      inputValue = inputPart()
    89         1          6.0      6.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         33.0     33.0      6.9          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        349.0    349.0     73.2      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

104回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 'minus', 100]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     34.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     50.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          1.0      0.5     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000509 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     14.1      inputValue = inputPart()
    89         1          9.0      9.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.2      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         18.0     18.0      3.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        396.0    396.0     77.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

105回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['AAAd123482934', 20, 111]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          1.0      1.0      2.6          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          2.0      2.0      5.3      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     36.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     40.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     20.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000468 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.2      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        358.0    358.0     76.5      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

106回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minus', 766, 0]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.3          1,
    16         1          1.0      1.0      2.3          234,
    17         1          1.0      1.0      2.3          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.3          100,
    22         1          1.0      1.0      2.3          20,
    23         1          1.0      1.0      2.3          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.3          0.134,
    28         1          1.0      1.0      2.3          "あいう",
    29         1          1.0      1.0      2.3          "saerf",
    30         1          1.0      1.0      2.3          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.3          "divide",
    36         1          1.0      1.0      2.3          "plas",
    37         1          1.0      1.0      2.3          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.3      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     38.6          elements[random.randint(0,length)],
    43         1          6.0      6.0     13.6          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.3      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         2          1.0      0.5     16.7          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          1.0      1.0     16.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000852 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         79.0     79.0      9.3      inputValue = inputPart()
    89         1         10.0     10.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.6      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.5      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         22.0     22.0      2.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        729.0    729.0     85.6      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

107回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multiply', 111, 44]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.3          1,
    16         1          2.0      2.0      4.7          234,
    17         1          1.0      1.0      2.3          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.3          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.3          0,
    26         1          1.0      1.0      2.3          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.3          "saerf",
    30         1          1.0      1.0      2.3          "plus",
    31         1          1.0      1.0      2.3          "AAAd123482934",
    32         1          1.0      1.0      2.3          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.3          "plas",
    37         1          1.0      1.0      2.3          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.3      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     39.5          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.0          elements[random.randint(0,length)],
    44         1          4.0      4.0      9.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.3      return extraction

Total time: 2e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7    100.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000578 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         83.0     83.0     14.4      inputValue = inputPart()
    89         1         10.0     10.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         22.0     22.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        450.0    450.0     77.9      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

108回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 'plus', 44]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.3          1,
    16         1          1.0      1.0      2.3          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.3          766,
    19         1          1.0      1.0      2.3          44,
    20         1          1.0      1.0      2.3          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.3          111,
    24         1          1.0      1.0      2.3          371,
    25         1          1.0      1.0      2.3          0,
    26         1          1.0      1.0      2.3          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.3          "plus",
    31         1          1.0      1.0      2.3          "AAAd123482934",
    32         1          1.0      1.0      2.3          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.3          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.3      length = len(elements)-1
    41                                               extraction = [
    42         1         18.0     18.0     40.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.4          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.3      return extraction

Total time: 1.1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     27.3      if isinstance(obj, int):
    52         1          1.0      1.0      9.1          return 1
    53                                           
    54         2          2.0      1.0     18.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     18.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     18.2      if isinstance(obj, str):
    61         2          1.0      0.5      9.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000487 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0     15.6      inputValue = inputPart()
    89         1          9.0      9.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.4      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        373.0    373.0     76.6      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

109回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minos', 'plas', 'AAAd123482934']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      3.0          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      3.0          100,
    22         1          1.0      1.0      3.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      3.0          "あいう",
    29         1          1.0      1.0      3.0          "saerf",
    30         1          1.0      1.0      3.0          "plus",
    31         1          1.0      1.0      3.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      3.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      3.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      3.0      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     42.4          elements[random.randint(0,length)],
    43         1          5.0      5.0     15.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     12.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     50.0      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          1.0      0.3     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          2.0      0.7     25.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          1.0      0.3     12.5      if isinstance(obj, str):
    61         3          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00047 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     15.5      inputValue = inputPart()
    89         1         10.0     10.0      2.1      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         18.0     18.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        355.0    355.0     75.5      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

110回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 100, 234]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.5          1,
    16         1          2.0      2.0      3.1          234,
    17         1          1.0      1.0      1.5          543,
    18         1          1.0      1.0      1.5          766,
    19         1          1.0      1.0      1.5          44,
    20         1          1.0      1.0      1.5          5,
    21         1          1.0      1.0      1.5          100,
    22         1          1.0      1.0      1.5          20,
    23         1          1.0      1.0      1.5          111,
    24         1          1.0      1.0      1.5          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      1.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.5          0.134,
    28         1          1.0      1.0      1.5          "あいう",
    29         1          1.0      1.0      1.5          "saerf",
    30         1          1.0      1.0      1.5          "plus",
    31         1          1.0      1.0      1.5          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      1.5          "multiply",
    35         1          1.0      1.0      1.5          "divide",
    36         1          1.0      1.0      1.5          "plas",
    37         1          1.0      1.0      1.5          "minos",
    38         1          2.0      2.0      3.1          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.1      length = len(elements)-1
    41                                               extraction = [
    42         1         23.0     23.0     35.4          elements[random.randint(0,length)],
    43         1          9.0      9.0     13.8          elements[random.randint(0,length)],
    44         1          7.0      7.0     10.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.5      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     50.0      if isinstance(obj, int):
    52         3          2.0      0.7     50.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.001401 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        120.0    120.0      8.6      inputValue = inputPart()
    89         1          9.0      9.0      0.6      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      0.5      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      0.4      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         29.0     29.0      2.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       1226.0   1226.0     87.5      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

111回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 'multiply', 'minos']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          1.0      1.0      2.5          543,
    18         1          1.0      1.0      2.5          766,
    19         1          1.0      1.0      2.5          44,
    20         1          1.0      1.0      2.5          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.5          111,
    24         1          1.0      1.0      2.5          371,
    25         1          1.0      1.0      2.5          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.5          "saerf",
    30         1          1.0      1.0      2.5          "plus",
    31         1          1.0      1.0      2.5          "AAAd123482934",
    32         1          1.0      1.0      2.5          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.5          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          1.0      0.3     14.3      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     28.6      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          2.0      0.7     28.6      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          2.0      0.7     28.6      if isinstance(obj, str):
    61         3          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000497 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     14.7      inputValue = inputPart()
    89         1          9.0      9.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.4      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        383.0    383.0     77.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

112回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0.134, 1, 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.8          1,
    16         1          1.0      1.0      2.8          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.8          44,
    20         1          1.0      1.0      2.8          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.8          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.8          0.134,
    28         1          1.0      1.0      2.8          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.8          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     41.7          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     83.3      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000511 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     14.3      inputValue = inputPart()
    89         1          8.0      8.0      1.6      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      4.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        397.0    397.0     77.7      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

113回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multiply', 'plus', 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.9          234,
    17         1          1.0      1.0      2.9          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          1.0      1.0      2.9          20,
    23         1          1.0      1.0      2.9          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          1.0      1.0      2.9          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     42.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     33.3      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     22.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     22.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     11.1      if isinstance(obj, str):
    61         2          1.0      0.5     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000812 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0      8.9      inputValue = inputPart()
    89         1          9.0      9.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      0.7      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         17.0     17.0      2.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        699.0    699.0     86.1      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

114回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[111, 'AAAd123482934', 'multipy']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      3.0          1,
    16         1          2.0      2.0      3.0          234,
    17         1          1.0      1.0      1.5          543,
    18         1          1.0      1.0      1.5          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      1.5          5,
    21         1          1.0      1.0      1.5          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      1.5          111,
    24         1          1.0      1.0      1.5          371,
    25         1          1.0      1.0      1.5          0,
    26         1          1.0      1.0      1.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      1.5          "あいう",
    29         1          1.0      1.0      1.5          "saerf",
    30         1          1.0      1.0      1.5          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      1.5          "minus",
    33         1          1.0      1.0      1.5          "devide",
    34         1          1.0      1.0      1.5          "multiply",
    35         1          1.0      1.0      1.5          "divide",
    36         1          1.0      1.0      1.5          "plas",
    37         1          1.0      1.0      1.5          "minos",
    38         1          2.0      2.0      3.0          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.0      length = len(elements)-1
    41                                               extraction = [
    42         1         23.0     23.0     34.8          elements[random.randint(0,length)],
    43         1          9.0      9.0     13.6          elements[random.randint(0,length)],
    44         1          8.0      8.0     12.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.5      return extraction

Total time: 1.1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     45.5      if isinstance(obj, int):
    52         1          1.0      1.0      9.1          return 1
    53                                           
    54         2          2.0      1.0     18.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     18.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5      9.1      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.002335 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        120.0    120.0      5.1      inputValue = inputPart()
    89         1         10.0     10.0      0.4      judgeValue0 = judge(inputValue[0])
    90         1         14.0     14.0      0.6      judgeValue1 = judge(inputValue[1])
    91         1         12.0     12.0      0.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.0          output = "error"
    96                                               
    97         1       1358.0   1358.0     58.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        816.0    816.0     34.9      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

115回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multipy', 'plas', 0]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.2          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.2          543,
    18         1          1.0      1.0      2.2          766,
    19         1          1.0      1.0      2.2          44,
    20         1          5.0      5.0     10.9          5,
    21         1          1.0      1.0      2.2          100,
    22         1          1.0      1.0      2.2          20,
    23         1          1.0      1.0      2.2          111,
    24         1          1.0      1.0      2.2          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.2          "plus",
    31         1          1.0      1.0      2.2          "AAAd123482934",
    32         1          1.0      1.0      2.2          "minus",
    33         1          1.0      1.0      2.2          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.2          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.2      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     34.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     10.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     10.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.2      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     28.6      if isinstance(obj, int):
    52         1          1.0      1.0     14.3          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         2          1.0      0.5     14.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000464 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         79.0     79.0     17.0      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         18.0     18.0      3.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        345.0    345.0     74.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

116回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plus', 'devide', 543]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.3          1,
    16         1          2.0      2.0      2.7          234,
    17         1          1.0      1.0      1.3          543,
    18         1          1.0      1.0      1.3          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      1.3          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      1.3          20,
    23         1          1.0      1.0      1.3          111,
    24         1          1.0      1.0      1.3          371,
    25         1          1.0      1.0      1.3          0,
    26         1          1.0      1.0      1.3          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.3          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      1.3          "saerf",
    30         1          1.0      1.0      1.3          "plus",
    31         1          1.0      1.0      1.3          "AAAd123482934",
    32         1          1.0      1.0      1.3          "minus",
    33         1          1.0      1.0      1.3          "devide",
    34         1          1.0      1.0      1.3          "multiply",
    35         1          1.0      1.0      1.3          "divide",
    36         1          1.0      1.0      1.3          "plas",
    37         1          1.0      1.0      1.3          "minos",
    38         1          1.0      1.0      1.3          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         29.0     29.0     38.7          elements[random.randint(0,length)],
    43         1         12.0     12.0     16.0          elements[random.randint(0,length)],
    44         1          9.0      9.0     12.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.3      return extraction

Total time: 1.3e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     46.2      if isinstance(obj, int):
    52         1          1.0      1.0      7.7          return 1
    53                                           
    54         2          2.0      1.0     15.4      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     15.4      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     15.4      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000939 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        137.0    137.0     14.6      inputValue = inputPart()
    89         1         18.0     18.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1         12.0     12.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         37.0     37.0      3.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        722.0    722.0     76.9      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

117回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['saerf', 'devide', 5]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.9          5,
    21         1          1.0      1.0      2.9          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.9          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     42.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          5.0      5.0     14.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     50.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          1.0      0.5     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00056 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     13.0      inputValue = inputPart()
    89         1          9.0      9.0      1.6      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        450.0    450.0     80.4      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

118回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 0, 'saerf']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          1.0      1.0      2.5          543,
    18         1          1.0      1.0      2.5          766,
    19         1          1.0      1.0      2.5          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.5          20,
    23         1          1.0      1.0      2.5          111,
    24         1          1.0      1.0      2.5          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.5          "plus",
    31         1          1.0      1.0      2.5          "AAAd123482934",
    32         1          1.0      1.0      2.5          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     40.0          elements[random.randint(0,length)],
    43         1          6.0      6.0     15.0          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         2          2.0      1.0     28.6          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000504 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0     15.1      inputValue = inputPart()
    89         1          9.0      9.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         18.0     18.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        387.0    387.0     76.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

119回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0, 766, 44]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     33.3          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     75.0      if isinstance(obj, int):
    52         3          1.0      0.3     25.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000443 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.8      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        342.0    342.0     77.2      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

120回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[20, 'saerf', 'minus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 0.000105 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      1.9          1,
    16         1          2.0      2.0      1.9          234,
    17         1          1.0      1.0      1.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      1.0          5,
    21         1          1.0      1.0      1.0          100,
    22         1          1.0      1.0      1.0          20,
    23         1          1.0      1.0      1.0          111,
    24         1         33.0     33.0     31.4          371,
    25         1          1.0      1.0      1.0          0,
    26         1          1.0      1.0      1.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.0          0.134,
    28         1          1.0      1.0      1.0          "あいう",
    29         1          1.0      1.0      1.0          "saerf",
    30         1          1.0      1.0      1.0          "plus",
    31         1          1.0      1.0      1.0          "AAAd123482934",
    32         1          1.0      1.0      1.0          "minus",
    33         1          1.0      1.0      1.0          "devide",
    34         1          1.0      1.0      1.0          "multiply",
    35         1          1.0      1.0      1.0          "divide",
    36         1          1.0      1.0      1.0          "plas",
    37         1          1.0      1.0      1.0          "minos",
    38         1          2.0      2.0      1.9          "multipy"
    39                                                   ]
    40         1          2.0      2.0      1.9      length = len(elements)-1
    41                                               extraction = [
    42         1         31.0     31.0     29.5          elements[random.randint(0,length)],
    43         1         10.0     10.0      9.5          elements[random.randint(0,length)],
    44         1          5.0      5.0      4.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     50.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     10.0      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000925 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        202.0    202.0     21.8      inputValue = inputPart()
    89         1          7.0      7.0      0.8      judgeValue0 = judge(inputValue[0])
    90         1         10.0     10.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         29.0     29.0      3.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        665.0    665.0     71.9      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

121回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[371, 'multiply', 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.4          1,
    16         1          1.0      1.0      1.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          2.0      2.0      2.8          44,
    20         1          1.0      1.0      1.4          5,
    21         1          1.0      1.0      1.4          100,
    22         1          1.0      1.0      1.4          20,
    23         1          1.0      1.0      1.4          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      1.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.4          0.134,
    28         1          1.0      1.0      1.4          "あいう",
    29         1          1.0      1.0      1.4          "saerf",
    30         1          1.0      1.0      1.4          "plus",
    31         1          1.0      1.0      1.4          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          3.0      3.0      4.2          "devide",
    34         1          1.0      1.0      1.4          "multiply",
    35         1          1.0      1.0      1.4          "divide",
    36         1          1.0      1.0      1.4          "plas",
    37         1          1.0      1.0      1.4          "minos",
    38         1          2.0      2.0      2.8          "multipy"
    39                                                   ]
    40         1          3.0      3.0      4.2      length = len(elements)-1
    41                                               extraction = [
    42         1         25.0     25.0     35.2          elements[random.randint(0,length)],
    43         1         10.0     10.0     14.1          elements[random.randint(0,length)],
    44         1          9.0      9.0     12.7          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.4      return extraction

Total time: 1.6e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     37.5      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          3.0      1.5     18.8      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          5.0      2.5     31.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5      6.2      if isinstance(obj, str):
    61         2          1.0      0.5      6.2          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.003191 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        396.0    396.0     12.4      inputValue = inputPart()
    89         1         10.0     10.0      0.3      judgeValue0 = judge(inputValue[0])
    90         1         16.0     16.0      0.5      judgeValue1 = judge(inputValue[1])
    91         1         33.0     33.0      1.0      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         26.0     26.0      0.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       2708.0   2708.0     84.9      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

122回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['AAAd123482934', 'plus', 'AAAd123482934']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 8.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      2.4          1,
    16         1          3.0      3.0      3.6          234,
    17         1          1.0      1.0      1.2          543,
    18         1          1.0      1.0      1.2          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      1.2          100,
    22         1          1.0      1.0      1.2          20,
    23         1          1.0      1.0      1.2          111,
    24         1          1.0      1.0      1.2          371,
    25         1          2.0      2.0      2.4          0,
    26         1          1.0      1.0      1.2          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.2          0.134,
    28         1          1.0      1.0      1.2          "あいう",
    29         1          1.0      1.0      1.2          "saerf",
    30         1          1.0      1.0      1.2          "plus",
    31         1          1.0      1.0      1.2          "AAAd123482934",
    32         1          1.0      1.0      1.2          "minus",
    33         1          1.0      1.0      1.2          "devide",
    34         1          1.0      1.0      1.2          "multiply",
    35         1          1.0      1.0      1.2          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      1.2          "minos",
    38         1          2.0      2.0      2.4          "multipy"
    39                                                   ]
    40         1          3.0      3.0      3.6      length = len(elements)-1
    41                                               extraction = [
    42         1         31.0     31.0     37.3          elements[random.randint(0,length)],
    43         1         12.0     12.0     14.5          elements[random.randint(0,length)],
    44         1         10.0     10.0     12.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.2      return extraction

Total time: 3e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          8.0      2.7     26.7      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          4.0      1.3     13.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          4.0      1.3     13.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3         11.0      3.7     36.7      if isinstance(obj, str):
    61         3          3.0      1.0     10.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.001489 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        603.0    603.0     40.5      inputValue = inputPart()
    89         1         21.0     21.0      1.4      judgeValue0 = judge(inputValue[0])
    90         1         29.0     29.0      1.9      judgeValue1 = judge(inputValue[1])
    91         1         26.0     26.0      1.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         42.0     42.0      2.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        764.0    764.0     51.3      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

123回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[766, 'minos', 5]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.6          1,
    16         1          1.0      1.0      1.6          234,
    17         1          1.0      1.0      1.6          543,
    18         1          1.0      1.0      1.6          766,
    19         1          1.0      1.0      1.6          44,
    20         1          1.0      1.0      1.6          5,
    21         1          1.0      1.0      1.6          100,
    22         1          1.0      1.0      1.6          20,
    23         1          1.0      1.0      1.6          111,
    24         1          1.0      1.0      1.6          371,
    25         1          1.0      1.0      1.6          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.6          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      1.6          "plus",
    31         1          1.0      1.0      1.6          "AAAd123482934",
    32         1          1.0      1.0      1.6          "minus",
    33         1          1.0      1.0      1.6          "devide",
    34         1          1.0      1.0      1.6          "multiply",
    35         1          1.0      1.0      1.6          "divide",
    36         1          1.0      1.0      1.6          "plas",
    37         1          1.0      1.0      1.6          "minos",
    38         1          2.0      2.0      3.1          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.1      length = len(elements)-1
    41                                               extraction = [
    42         1         23.0     23.0     35.9          elements[random.randint(0,length)],
    43         1          8.0      8.0     12.5          elements[random.randint(0,length)],
    44         1          8.0      8.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.6      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     50.0      if isinstance(obj, int):
    52         2          1.0      0.5     10.0          return 1
    53                                           
    54         1          1.0      1.0     10.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     10.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     10.0      if isinstance(obj, str):
    61         1          1.0      1.0     10.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000883 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        132.0    132.0     14.9      inputValue = inputPart()
    89         1          8.0      8.0      0.9      judgeValue0 = judge(inputValue[0])
    90         1         15.0     15.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         30.0     30.0      3.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        687.0    687.0     77.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

124回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['AAAd123482934', 'devide', 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          1.0      1.0      2.6          20,
    23         1          1.0      1.0      2.6          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     38.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          1.0      0.3     14.3      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57         2          1.0      0.5     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         2          1.0      0.5     14.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000469 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     15.6      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        354.0    354.0     75.5      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

125回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 543, 'あいう']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.6          1,
    16         1          1.0      1.0      1.6          234,
    17         1          1.0      1.0      1.6          543,
    18         1          1.0      1.0      1.6          766,
    19         1          1.0      1.0      1.6          44,
    20         1          1.0      1.0      1.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      1.6          20,
    23         1          1.0      1.0      1.6          111,
    24         1          1.0      1.0      1.6          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      1.6          "AAAd123482934",
    32         1          1.0      1.0      1.6          "minus",
    33         1          1.0      1.0      1.6          "devide",
    34         1          1.0      1.0      1.6          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      1.6          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.1      length = len(elements)-1
    41                                               extraction = [
    42         1         30.0     30.0     46.9          elements[random.randint(0,length)],
    43         1         12.0     12.0     18.8          elements[random.randint(0,length)],
    44         1          6.0      6.0      9.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     66.7      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     33.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00055 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        104.0    104.0     18.9      inputValue = inputPart()
    89         1         11.0     11.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         36.0     36.0      6.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        386.0    386.0     70.2      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

126回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['AAAd123482934', 234, 20]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          1.0      1.0      2.6          20,
    23         1          1.0      1.0      2.6          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          2.0      2.0      5.1      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     41.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         2          1.0      0.5     12.5          return 1
    53                                           
    54         1          1.0      1.0     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     12.5      if isinstance(obj, str):
    61         1          1.0      1.0     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000483 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         74.0     74.0     15.3      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        370.0    370.0     76.6      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

127回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['saerf', 100, 234]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.5          234,
    17         1          1.0      1.0      2.5          543,
    18         1          1.0      1.0      2.5          766,
    19         1          1.0      1.0      2.5          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.5          100,
    22         1          1.0      1.0      2.5          20,
    23         1          1.0      1.0      2.5          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.5          "saerf",
    30         1          1.0      1.0      2.5          "plus",
    31         1          1.0      1.0      2.5          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.5          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     40.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     33.3      if isinstance(obj, int):
    52         2          1.0      0.5     16.7          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     16.7      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000572 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         78.0     78.0     13.6      inputValue = inputPart()
    89         1         10.0     10.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         23.0     23.0      4.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        449.0    449.0     78.5      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

128回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[766, 0.134, 'minos']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 0.001605 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1         12.0     12.0      0.7          1,
    16         1          5.0      5.0      0.3          234,
    17         1          1.0      1.0      0.1          543,
    18         1          1.0      1.0      0.1          766,
    19         1          1.0      1.0      0.1          44,
    20         1          1.0      1.0      0.1          5,
    21         1          2.0      2.0      0.1          100,
    22         1          1.0      1.0      0.1          20,
    23         1          1.0      1.0      0.1          111,
    24         1          1.0      1.0      0.1          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      0.1          0.134,
    28         1          1.0      1.0      0.1          "あいう",
    29         1         35.0     35.0      2.2          "saerf",
    30         1          1.0      1.0      0.1          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      0.1          "multiply",
    35         1          1.0      1.0      0.1          "divide",
    36         1          1.0      1.0      0.1          "plas",
    37         1          1.0      1.0      0.1          "minos",
    38         1          2.0      2.0      0.1          "multipy"
    39                                                   ]
    40         1          3.0      3.0      0.2      length = len(elements)-1
    41                                               extraction = [
    42         1       1489.0   1489.0     92.8          elements[random.randint(0,length)],
    43         1         29.0     29.0      1.8          elements[random.randint(0,length)],
    44         1         13.0     13.0      0.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      0.1      return extraction

Total time: 1.3e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          7.0      2.3     53.8      if isinstance(obj, int):
    52         1          1.0      1.0      7.7          return 1
    53                                           
    54         2          2.0      1.0     15.4      if isinstance(obj, float):
    55         1          1.0      1.0      7.7          return 1
    56                                           
    57         1          1.0      1.0      7.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0      7.7      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 6.7e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          2.0      2.0      3.0      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      1.5      def pr(x):
    68                                                   print x
    69         1         58.0     58.0     86.6      sep()
    70                                           
    71         1          2.0      2.0      3.0      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      1.5      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          0.0      0.0      0.0      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      1.5      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          1.0      1.0      1.5          result = "Operator is invalid."
    84         1          1.0      1.0      1.5      return result

Total time: 0.002562 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1       1706.0   1706.0     66.6      inputValue = inputPart()
    89         1         16.0     16.0      0.6      judgeValue0 = judge(inputValue[0])
    90         1         15.0     15.0      0.6      judgeValue1 = judge(inputValue[1])
    91         1         16.0     16.0      0.6      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         89.0     89.0      3.5          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          3.0      3.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        714.0    714.0     27.9      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

129回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['saerf', 371, 44]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.5          1,
    16         1          2.0      2.0      3.0          234,
    17         1          1.0      1.0      1.5          543,
    18         1          1.0      1.0      1.5          766,
    19         1          1.0      1.0      1.5          44,
    20         1          1.0      1.0      1.5          5,
    21         1          1.0      1.0      1.5          100,
    22         1          1.0      1.0      1.5          20,
    23         1          1.0      1.0      1.5          111,
    24         1          1.0      1.0      1.5          371,
    25         1          1.0      1.0      1.5          0,
    26         1          1.0      1.0      1.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.5          0.134,
    28         1          1.0      1.0      1.5          "あいう",
    29         1          1.0      1.0      1.5          "saerf",
    30         1          1.0      1.0      1.5          "plus",
    31         1          1.0      1.0      1.5          "AAAd123482934",
    32         1          1.0      1.0      1.5          "minus",
    33         1          1.0      1.0      1.5          "devide",
    34         1          1.0      1.0      1.5          "multiply",
    35         1          1.0      1.0      1.5          "divide",
    36         1          1.0      1.0      1.5          "plas",
    37         1          1.0      1.0      1.5          "minos",
    38         1          1.0      1.0      1.5          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.0      length = len(elements)-1
    41                                               extraction = [
    42         1         24.0     24.0     35.8          elements[random.randint(0,length)],
    43         1          8.0      8.0     11.9          elements[random.randint(0,length)],
    44         1          7.0      7.0     10.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.5      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     50.0      if isinstance(obj, int):
    52         2          2.0      1.0     20.0          return 1
    53                                           
    54         1          1.0      1.0     10.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     10.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     10.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000741 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        121.0    121.0     16.3      inputValue = inputPart()
    89         1         16.0     16.0      2.2      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         27.0     27.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        560.0    560.0     75.6      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

130回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 100, 111]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.1          1,
    16         1          1.0      1.0      2.1          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.1          766,
    19         1          1.0      1.0      2.1          44,
    20         1          1.0      1.0      2.1          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.1          20,
    23         1          1.0      1.0      2.1          111,
    24         1          1.0      1.0      2.1          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.1          "あいう",
    29         1          1.0      1.0      2.1          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.1          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.1          "divide",
    36         1          1.0      1.0      2.1          "plas",
    37         1          1.0      1.0      2.1          "minos",
    38         1          1.0      1.0      2.1          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.2      length = len(elements)-1
    41                                               extraction = [
    42         1         20.0     20.0     41.7          elements[random.randint(0,length)],
    43         1          5.0      5.0     10.4          elements[random.randint(0,length)],
    44         1          5.0      5.0     10.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.1      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3    100.0      if isinstance(obj, int):
    52         3          0.0      0.0      0.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.001159 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         99.0     99.0      8.5      inputValue = inputPart()
    89         1          6.0      6.0      0.5      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.4      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      0.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         34.0     34.0      2.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       1003.0   1003.0     86.5      print str(inputValue).decode("string-escape")
   102         1          4.0      4.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

131回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 44, 766]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.5          1,
    16         1          2.0      2.0      3.1          234,
    17         1          1.0      1.0      1.5          543,
    18         1          1.0      1.0      1.5          766,
    19         1          1.0      1.0      1.5          44,
    20         1          1.0      1.0      1.5          5,
    21         1          1.0      1.0      1.5          100,
    22         1          1.0      1.0      1.5          20,
    23         1          1.0      1.0      1.5          111,
    24         1          9.0      9.0     13.8          371,
    25         1          1.0      1.0      1.5          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.5          0.134,
    28         1          1.0      1.0      1.5          "あいう",
    29         1          1.0      1.0      1.5          "saerf",
    30         1          1.0      1.0      1.5          "plus",
    31         1          1.0      1.0      1.5          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      1.5          "devide",
    34         1          1.0      1.0      1.5          "multiply",
    35         1          1.0      1.0      1.5          "divide",
    36         1          1.0      1.0      1.5          "plas",
    37         1          1.0      1.0      1.5          "minos",
    38         1          2.0      2.0      3.1          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.1      length = len(elements)-1
    41                                               extraction = [
    42         1         19.0     19.0     29.2          elements[random.randint(0,length)],
    43         1          7.0      7.0     10.8          elements[random.randint(0,length)],
    44         1          5.0      5.0      7.7          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     80.0      if isinstance(obj, int):
    52         2          1.0      0.5     20.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.001006 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        122.0    122.0     12.1      inputValue = inputPart()
    89         1         11.0     11.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         55.0     55.0      5.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        800.0    800.0     79.5      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

132回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 543, 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.5          234,
    17         1          1.0      1.0      2.5          543,
    18         1          1.0      1.0      2.5          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.5          20,
    23         1          1.0      1.0      2.5          111,
    24         1          1.0      1.0      2.5          371,
    25         1          1.0      1.0      2.5          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.5          "plus",
    31         1          1.0      1.0      2.5          "AAAd123482934",
    32         1          1.0      1.0      2.5          "minus",
    33         1          1.0      1.0      2.5          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     40.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     66.7      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     33.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000463 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     15.8      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        352.0    352.0     76.0      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

133回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[1, 'devide', 44]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          1.0      1.0      2.7          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          1.0      1.0      2.7          20,
    23         1          1.0      1.0      2.7          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          1.0      1.0      2.7          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     37.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.7      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         2          2.0      1.0     25.0          return 1
    53                                           
    54         1          1.0      1.0     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     12.5      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000545 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     13.0      inputValue = inputPart()
    89         1          5.0      5.0      0.9      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         31.0     31.0      5.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        424.0    424.0     77.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

134回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[766, 0, 543]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.8          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.8          543,
    18         1          1.0      1.0      2.8          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.8          100,
    22         1          1.0      1.0      2.8          20,
    23         1          1.0      1.0      2.8          111,
    24         1          1.0      1.0      2.8          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          1.0      1.0      2.8          "AAAd123482934",
    32         1          1.0      1.0      2.8          "minus",
    33         1          1.0      1.0      2.8          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     38.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     50.0      if isinstance(obj, int):
    52         3          2.0      0.7     50.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000602 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     11.8      inputValue = inputPart()
    89         1          5.0      5.0      0.8      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.7      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         18.0     18.0      3.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        496.0    496.0     82.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

135回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['AAAd123482934', 26182576726545671723454736273454323454327667827345432763478372L, 543]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.4          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     35.7          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.3          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     28.6      if isinstance(obj, int):
    52         1          1.0      1.0     14.3          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         1          1.0      1.0     14.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000499 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         77.0     77.0     15.4      inputValue = inputPart()
    89         1          9.0      9.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.4      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      1.0      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         19.0     19.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        378.0    378.0     75.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

136回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 0, 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.4          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     36.6          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.2          elements[random.randint(0,length)],
    44         1          4.0      4.0      9.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     44.4      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     22.2      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57         1          1.0      1.0     11.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     11.1      if isinstance(obj, str):
    61         1          1.0      1.0     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000482 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         74.0     74.0     15.4      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         18.0     18.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        367.0    367.0     76.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

137回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[766, 'minus', 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          1.0      1.0      2.6          20,
    23         1          1.0      1.0      2.6          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     38.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61         1          1.0      1.0     14.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000522 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         75.0     75.0     14.4      inputValue = inputPart()
    89         1          6.0      6.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.6      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         18.0     18.0      3.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        410.0    410.0     78.5      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

138回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[543, 'divide', 44]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.4          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          1.0      1.0      2.4          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     39.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     40.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     20.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000509 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         79.0     79.0     15.5      inputValue = inputPart()
    89         1          6.0      6.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.6      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.6      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         23.0     23.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        388.0    388.0     76.2      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

139回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[100, 'plas', 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.8          1,
    16         1          1.0      1.0      2.8          234,
    17         1          1.0      1.0      2.8          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.8          100,
    22         1          1.0      1.0      2.8          20,
    23         1          1.0      1.0      2.8          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          1.0      1.0      2.8          "AAAd123482934",
    32         1          1.0      1.0      2.8          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.8          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     38.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     50.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          1.0      1.0     25.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000538 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     13.4      inputValue = inputPart()
    89         1          6.0      6.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        427.0    427.0     79.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

140回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plus', 1, 'あいう']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     41.5          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.6          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 1.1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     45.5      if isinstance(obj, int):
    52         1          1.0      1.0      9.1          return 1
    53                                           
    54         2          2.0      1.0     18.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     18.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5      9.1      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000949 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         93.0     93.0      9.8      inputValue = inputPart()
    89         1         10.0     10.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.4      judgeValue1 = judge(inputValue[1])
    91         1         11.0     11.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         29.0     29.0      3.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        798.0    798.0     84.1      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

141回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plus', 234, 44]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 0.0001 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      2.0          1,
    16         1          1.0      1.0      1.0          234,
    17         1          1.0      1.0      1.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      1.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      1.0          100,
    22         1          1.0      1.0      1.0          20,
    23         1          1.0      1.0      1.0          111,
    24         1          1.0      1.0      1.0          371,
    25         1          1.0      1.0      1.0          0,
    26         1          1.0      1.0      1.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.0          0.134,
    28         1          1.0      1.0      1.0          "あいう",
    29         1          1.0      1.0      1.0          "saerf",
    30         1          1.0      1.0      1.0          "plus",
    31         1          1.0      1.0      1.0          "AAAd123482934",
    32         1          1.0      1.0      1.0          "minus",
    33         1          1.0      1.0      1.0          "devide",
    34         1          1.0      1.0      1.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      1.0          "minos",
    38         1          2.0      2.0      2.0          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.0      length = len(elements)-1
    41                                               extraction = [
    42         1         23.0     23.0     23.0          elements[random.randint(0,length)],
    43         1         31.0     31.0     31.0          elements[random.randint(0,length)],
    44         1         21.0     21.0     21.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.0      return extraction

Total time: 1.2e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     41.7      if isinstance(obj, int):
    52         2          2.0      1.0     16.7          return 1
    53                                           
    54         1          2.0      2.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0      8.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0      8.3      if isinstance(obj, str):
    61         1          1.0      1.0      8.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000718 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        160.0    160.0     22.3      inputValue = inputPart()
    89         1         17.0     17.0      2.4      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.0      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         24.0     24.0      3.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        498.0    498.0     69.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

142回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[100, 234, 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     39.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     75.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     25.0      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000501 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         74.0     74.0     14.8      inputValue = inputPart()
    89         1          6.0      6.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      4.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        388.0    388.0     77.4      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

143回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minos', 26182576726545671723454736273454323454327667827345432763478372L, 234]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     30.0      if isinstance(obj, int):
    52         1          1.0      1.0     10.0          return 1
    53                                           
    54         2          2.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     20.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000476 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     15.1      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        365.0    365.0     76.7      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

144回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minos', 'multipy', 5]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.4          5,
    21         1          1.0      1.0      2.4          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     35.7          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.3          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     40.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          3.0      1.5     30.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     10.0      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000504 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0     15.1      inputValue = inputPart()
    89         1         10.0     10.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.2      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         19.0     19.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        388.0    388.0     77.0      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

145回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['divide', 'saerf', 100]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.3          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.3          543,
    18         1          1.0      1.0      2.3          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.3          100,
    22         1          1.0      1.0      2.3          20,
    23         1          1.0      1.0      2.3          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.3          "あいう",
    29         1          1.0      1.0      2.3          "saerf",
    30         1          1.0      1.0      2.3          "plus",
    31         1          1.0      1.0      2.3          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.3          "plas",
    37         1          1.0      1.0      2.3          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.7      length = len(elements)-1
    41                                               extraction = [
    42         1         18.0     18.0     41.9          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.0          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.6          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         1          1.0      1.0     16.7          return 1
    53                                           
    54         2          1.0      0.5     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     16.7      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000544 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         79.0     79.0     14.5      inputValue = inputPart()
    89         1         11.0     11.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         23.0     23.0      4.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        418.0    418.0     76.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

146回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0, 20, 'divide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.4          100,
    22         1          1.0      1.0      2.4          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.4          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     38.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     57.1      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 3e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          0.0      0.0      0.0      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      3.3      def pr(x):
    68                                                   print x
    69         1         25.0     25.0     83.3      sep()
    70                                           
    71         1          1.0      1.0      3.3      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          0.0      0.0      0.0      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          0.0      0.0      0.0      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      3.3      elif list[2] == "divide":
    78         1          0.0      0.0      0.0          if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81         1          1.0      1.0      3.3              result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84         1          1.0      1.0      3.3      return result

Total time: 0.000537 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0     14.2      inputValue = inputPart()
    89         1          5.0      5.0      0.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.7      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         41.0     41.0      7.6          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        400.0    400.0     74.5      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

147回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 'devide', 'divide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.5          234,
    17         1          1.0      1.0      2.5          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.5          100,
    22         1          1.0      1.0      2.5          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.5          0.134,
    28         1          1.0      1.0      2.5          "あいう",
    29         1          1.0      1.0      2.5          "saerf",
    30         1          1.0      1.0      2.5          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          1.0      1.0      2.5          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     40.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     40.0      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          3.0      1.0     30.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          2.0      0.7     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          1.0      0.3     10.0      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000753 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         78.0     78.0     10.4      inputValue = inputPart()
    89         1         10.0     10.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         23.0     23.0      3.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        626.0    626.0     83.1      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

148回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plus', 'minus', 766]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      3.0          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      3.0          100,
    22         1          1.0      1.0      3.0          20,
    23         1          1.0      1.0      3.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      3.0          "saerf",
    30         1          1.0      1.0      3.0          "plus",
    31         1          1.0      1.0      3.0          "AAAd123482934",
    32         1          1.0      1.0      3.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      3.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      3.0      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     42.4          elements[random.randint(0,length)],
    43         1          5.0      5.0     15.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     12.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     28.6      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          1.0      0.5     14.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000461 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         75.0     75.0     16.3      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      4.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        343.0    343.0     74.4      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

149回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 'あいう', 26182576726545671723454736273454323454327667827345432763478372L]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 0.000106 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          4.0      4.0      3.8          1,
    16         1          5.0      5.0      4.7          234,
    17         1          1.0      1.0      0.9          543,
    18         1          1.0      1.0      0.9          766,
    19         1          1.0      1.0      0.9          44,
    20         1          1.0      1.0      0.9          5,
    21         1          1.0      1.0      0.9          100,
    22         1          1.0      1.0      0.9          20,
    23         1          1.0      1.0      0.9          111,
    24         1          1.0      1.0      0.9          371,
    25         1          1.0      1.0      0.9          0,
    26         1          1.0      1.0      0.9          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      0.9          0.134,
    28         1          1.0      1.0      0.9          "あいう",
    29         1          1.0      1.0      0.9          "saerf",
    30         1          1.0      1.0      0.9          "plus",
    31         1          1.0      1.0      0.9          "AAAd123482934",
    32         1          1.0      1.0      0.9          "minus",
    33         1          1.0      1.0      0.9          "devide",
    34         1          1.0      1.0      0.9          "multiply",
    35         1          1.0      1.0      0.9          "divide",
    36         1          1.0      1.0      0.9          "plas",
    37         1          2.0      2.0      1.9          "minos",
    38         1          2.0      2.0      1.9          "multipy"
    39                                                   ]
    40         1          4.0      4.0      3.8      length = len(elements)-1
    41                                               extraction = [
    42         1         40.0     40.0     37.7          elements[random.randint(0,length)],
    43         1         17.0     17.0     16.0          elements[random.randint(0,length)],
    44         1         11.0     11.0     10.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      0.9      return extraction

Total time: 2.5e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3         10.0      3.3     40.0      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          6.0      2.0     24.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          4.0      1.3     16.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          4.0      1.3     16.0      if isinstance(obj, str):
    61         1          1.0      1.0      4.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.001037 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        203.0    203.0     19.6      inputValue = inputPart()
    89         1         27.0     27.0      2.6      judgeValue0 = judge(inputValue[0])
    90         1         17.0     17.0      1.6      judgeValue1 = judge(inputValue[1])
    91         1         15.0     15.0      1.4      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         57.0     57.0      5.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        713.0    713.0     68.8      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

150回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0, 'minos', 'saerf']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 9.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.1          1,
    16         1          3.0      3.0      3.2          234,
    17         1          1.0      1.0      1.1          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      1.1          44,
    20         1          1.0      1.0      1.1          5,
    21         1          1.0      1.0      1.1          100,
    22         1          1.0      1.0      1.1          20,
    23         1          1.0      1.0      1.1          111,
    24         1          1.0      1.0      1.1          371,
    25         1          1.0      1.0      1.1          0,
    26         1          1.0      1.0      1.1          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.1          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      1.1          "saerf",
    30         1          1.0      1.0      1.1          "plus",
    31         1          1.0      1.0      1.1          "AAAd123482934",
    32         1          1.0      1.0      1.1          "minus",
    33         1          1.0      1.0      1.1          "devide",
    34         1          1.0      1.0      1.1          "multiply",
    35         1          1.0      1.0      1.1          "divide",
    36         1          1.0      1.0      1.1          "plas",
    37         1          1.0      1.0      1.1          "minos",
    38         1          1.0      1.0      1.1          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.2      length = len(elements)-1
    41                                               extraction = [
    42         1         41.0     41.0     44.1          elements[random.randint(0,length)],
    43         1         16.0     16.0     17.2          elements[random.randint(0,length)],
    44         1          9.0      9.0      9.7          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.1      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     44.4      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     11.1      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     22.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     11.1      if isinstance(obj, str):
    61         2          1.0      0.5     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000821 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        214.0    214.0     26.1      inputValue = inputPart()
    89         1          7.0      7.0      0.9      judgeValue0 = judge(inputValue[0])
    90         1         10.0     10.0      1.2      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         40.0     40.0      4.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        540.0    540.0     65.8      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

151回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[20, 'saerf', 20]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.6          1,
    16         1          2.0      2.0      3.1          234,
    17         1          1.0      1.0      1.6          543,
    18         1          1.0      1.0      1.6          766,
    19         1          1.0      1.0      1.6          44,
    20         1          1.0      1.0      1.6          5,
    21         1          1.0      1.0      1.6          100,
    22         1          1.0      1.0      1.6          20,
    23         1          1.0      1.0      1.6          111,
    24         1          1.0      1.0      1.6          371,
    25         1          1.0      1.0      1.6          0,
    26         1          1.0      1.0      1.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      1.6          "plus",
    31         1          1.0      1.0      1.6          "AAAd123482934",
    32         1          1.0      1.0      1.6          "minus",
    33         1          1.0      1.0      1.6          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      1.6          "divide",
    36         1          1.0      1.0      1.6          "plas",
    37         1          1.0      1.0      1.6          "minos",
    38         1          1.0      1.0      1.6          "multipy"
    39                                                   ]
    40         1          3.0      3.0      4.7      length = len(elements)-1
    41                                               extraction = [
    42         1         22.0     22.0     34.4          elements[random.randint(0,length)],
    43         1          9.0      9.0     14.1          elements[random.randint(0,length)],
    44         1          8.0      8.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.6      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     44.4      if isinstance(obj, int):
    52         2          1.0      0.5     11.1          return 1
    53                                           
    54         1          1.0      1.0     11.1      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     11.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     11.1      if isinstance(obj, str):
    61         1          1.0      1.0     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000847 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        122.0    122.0     14.4      inputValue = inputPart()
    89         1         10.0     10.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1         14.0     14.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         27.0     27.0      3.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        663.0    663.0     78.3      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

152回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plas', 'plas', 'minus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.3          1,
    16         1          2.0      2.0      2.7          234,
    17         1          1.0      1.0      1.3          543,
    18         1          1.0      1.0      1.3          766,
    19         1          1.0      1.0      1.3          44,
    20         1          1.0      1.0      1.3          5,
    21         1          1.0      1.0      1.3          100,
    22         1          1.0      1.0      1.3          20,
    23         1          1.0      1.0      1.3          111,
    24         1          1.0      1.0      1.3          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      1.3          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.3          0.134,
    28         1          1.0      1.0      1.3          "あいう",
    29         1          1.0      1.0      1.3          "saerf",
    30         1          1.0      1.0      1.3          "plus",
    31         1          1.0      1.0      1.3          "AAAd123482934",
    32         1          1.0      1.0      1.3          "minus",
    33         1          1.0      1.0      1.3          "devide",
    34         1          1.0      1.0      1.3          "multiply",
    35         1          1.0      1.0      1.3          "divide",
    36         1          1.0      1.0      1.3          "plas",
    37         1          1.0      1.0      1.3          "minos",
    38         1          1.0      1.0      1.3          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         28.0     28.0     37.3          elements[random.randint(0,length)],
    43         1         11.0     11.0     14.7          elements[random.randint(0,length)],
    44         1          9.0      9.0     12.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.3      return extraction

Total time: 1.9e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          7.0      2.3     36.8      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          3.0      1.0     15.8      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          3.0      1.0     15.8      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          3.0      1.0     15.8      if isinstance(obj, str):
    61         3          3.0      1.0     15.8          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000964 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        135.0    135.0     14.0      inputValue = inputPart()
    89         1         18.0     18.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1         12.0     12.0      1.2      judgeValue1 = judge(inputValue[1])
    91         1         11.0     11.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         37.0     37.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        747.0    747.0     77.5      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

153回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multiply', 20, 'AAAd123482934']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.5          234,
    17         1          1.0      1.0      2.5          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.5          100,
    22         1          1.0      1.0      2.5          20,
    23         1          1.0      1.0      2.5          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.5          "saerf",
    30         1          1.0      1.0      2.5          "plus",
    31         1          1.0      1.0      2.5          "AAAd123482934",
    32         1          1.0      1.0      2.5          "minus",
    33         1          1.0      1.0      2.5          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          2.0      2.0      5.0      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     40.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     25.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     25.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     25.0      if isinstance(obj, str):
    61         2          1.0      0.5     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000466 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     15.5      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         18.0     18.0      3.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        352.0    352.0     75.5      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

154回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plus', 'plas', 5]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.7          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.7          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.7          0.134,
    28         1          1.0      1.0      2.7          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.7          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     40.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.7      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     12.5      if isinstance(obj, str):
    61         2          1.0      0.5     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000464 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     15.7      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        352.0    352.0     75.9      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

155回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plas', 766, 'divide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.6          5,
    21         1          1.0      1.0      2.6          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     41.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     28.6      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     28.6      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     28.6      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000482 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     15.1      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      1.0      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         21.0     21.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        367.0    367.0     76.1      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

156回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['divide', 234, 'AAAd123482934']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.8      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     40.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         1          1.0      1.0     14.3          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          2.0      1.0     28.6          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000524 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         77.0     77.0     14.7      inputValue = inputPart()
    89         1         10.0     10.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      4.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        402.0    402.0     76.7      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

157回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0, 20, 100]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          1.0      1.0      2.9          20,
    23         1          1.0      1.0      2.9          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          1.0      1.0      2.9          "minus",
    33         1          1.0      1.0      2.9          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     40.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.9      return extraction

Total time: 0 s
File: profile.py
Function: judge at line 48
158回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 'minus', 'multiply']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.5          44,
    20         1          1.0      1.0      2.5          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.5          0,
    26         1          1.0      1.0      2.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.5          0.134,
    28         1          1.0      1.0      2.5          "あいう",
    29         1          1.0      1.0      2.5          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          1.0      1.0      2.5          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     37.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          1.0      0.3     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          2.0      0.7     25.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          2.0      0.7     25.0      if isinstance(obj, str):
    61         3          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000494 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         74.0     74.0     15.0      inputValue = inputPart()
    89         1         10.0     10.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.4      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         19.0     19.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        376.0    376.0     76.1      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

159回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multipy', 'devide', 543]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     33.3          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     33.3      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     16.7      if isinstance(obj, str):
    61         2          1.0      0.5     16.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000462 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     15.6      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        349.0    349.0     75.5      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

160回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multipy', 'multiply', 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          1.0      1.0      2.6          20,
    23         1          1.0      1.0      2.6          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     39.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     25.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          1.0      0.5     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000504 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         75.0     75.0     14.9      inputValue = inputPart()
    89         1          9.0      9.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.2      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         24.0     24.0      4.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        382.0    382.0     75.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

161回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0.134, 'multipy', 234]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 9.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      2.2          1,
    16         1          2.0      2.0      2.2          234,
    17         1          2.0      2.0      2.2          543,
    18         1          1.0      1.0      1.1          766,
    19         1          1.0      1.0      1.1          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      1.1          100,
    22         1          1.0      1.0      1.1          20,
    23         1          1.0      1.0      1.1          111,
    24         1          1.0      1.0      1.1          371,
    25         1          2.0      2.0      2.2          0,
    26         1          1.0      1.0      1.1          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.1          0.134,
    28         1          1.0      1.0      1.1          "あいう",
    29         1          1.0      1.0      1.1          "saerf",
    30         1          1.0      1.0      1.1          "plus",
    31         1          1.0      1.0      1.1          "AAAd123482934",
    32         1          1.0      1.0      1.1          "minus",
    33         1          1.0      1.0      1.1          "devide",
    34         1          1.0      1.0      1.1          "multiply",
    35         1          1.0      1.0      1.1          "divide",
    36         1          1.0      1.0      1.1          "plas",
    37         1          1.0      1.0      1.1          "minos",
    38         1          2.0      2.0      2.2          "multipy"
    39                                                   ]
    40         1          3.0      3.0      3.2      length = len(elements)-1
    41                                               extraction = [
    42         1         35.0     35.0     37.6          elements[random.randint(0,length)],
    43         1         14.0     14.0     15.1          elements[random.randint(0,length)],
    44         1         12.0     12.0     12.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.1      return extraction

Total time: 1.6e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          8.0      2.7     50.0      if isinstance(obj, int):
    52         1          1.0      1.0      6.2          return 1
    53                                           
    54         2          2.0      1.0     12.5      if isinstance(obj, float):
    55         1          1.0      1.0      6.2          return 1
    56                                           
    57         1          2.0      2.0     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0      6.2      if isinstance(obj, str):
    61         1          1.0      1.0      6.2          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.003035 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        176.0    176.0      5.8      inputValue = inputPart()
    89         1         19.0     19.0      0.6      judgeValue0 = judge(inputValue[0])
    90         1         15.0     15.0      0.5      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      0.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         61.0     61.0      2.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       2751.0   2751.0     90.6      print str(inputValue).decode("string-escape")
   102         1          4.0      4.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

162回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plas', 'plus', 44]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.5          1,
    16         1          1.0      1.0      1.5          234,
    17         1          1.0      1.0      1.5          543,
    18         1          1.0      1.0      1.5          766,
    19         1          1.0      1.0      1.5          44,
    20         1          1.0      1.0      1.5          5,
    21         1          1.0      1.0      1.5          100,
    22         1          1.0      1.0      1.5          20,
    23         1          1.0      1.0      1.5          111,
    24         1          1.0      1.0      1.5          371,
    25         1          1.0      1.0      1.5          0,
    26         1          1.0      1.0      1.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.5          0.134,
    28         1          1.0      1.0      1.5          "あいう",
    29         1          1.0      1.0      1.5          "saerf",
    30         1          1.0      1.0      1.5          "plus",
    31         1          1.0      1.0      1.5          "AAAd123482934",
    32         1          1.0      1.0      1.5          "minus",
    33         1          1.0      1.0      1.5          "devide",
    34         1          1.0      1.0      1.5          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      1.5          "minos",
    38         1          1.0      1.0      1.5          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.0      length = len(elements)-1
    41                                               extraction = [
    42         1         22.0     22.0     32.8          elements[random.randint(0,length)],
    43         1         10.0     10.0     14.9          elements[random.randint(0,length)],
    44         1         10.0     10.0     14.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.5      return extraction

Total time: 1.8e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          7.0      2.3     38.9      if isinstance(obj, int):
    52         1          1.0      1.0      5.6          return 1
    53                                           
    54         2          4.0      2.0     22.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     11.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     11.1      if isinstance(obj, str):
    61         2          2.0      1.0     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000971 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        124.0    124.0     12.8      inputValue = inputPart()
    89         1         18.0     18.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1         12.0     12.0      1.2      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         34.0     34.0      3.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        771.0    771.0     79.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

163回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multiply', 0.134, 100]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     33.3          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          4.0      4.0      9.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     12.5      if isinstance(obj, float):
    55         1          1.0      1.0     12.5          return 1
    56                                           
    57         1          1.0      1.0     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     12.5      if isinstance(obj, str):
    61         1          1.0      1.0     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.001827 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0      4.0      inputValue = inputPart()
    89         1          9.0      9.0      0.5      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.3      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.2      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         17.0     17.0      0.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       1714.0   1714.0     93.8      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

164回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0, 'plus', 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.9          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.9          "divide",
    36         1          1.0      1.0      2.9          "plas",
    37         1          1.0      1.0      2.9          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     42.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     50.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     12.5      if isinstance(obj, str):
    61         1          1.0      1.0     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00052 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         75.0     75.0     14.4      inputValue = inputPart()
    89         1          6.0      6.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.6      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         19.0     19.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        408.0    408.0     78.5      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

165回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 'plus', 'plas']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 5.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.7          1,
    16         1          1.0      1.0      1.7          234,
    17         1          1.0      1.0      1.7          543,
    18         1          1.0      1.0      1.7          766,
    19         1          1.0      1.0      1.7          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      1.7          100,
    22         1          1.0      1.0      1.7          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      1.7          371,
    25         1          1.0      1.0      1.7          0,
    26         1          1.0      1.0      1.7          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      1.7          "あいう",
    29         1          1.0      1.0      1.7          "saerf",
    30         1          1.0      1.0      1.7          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      1.7          "minus",
    33         1          1.0      1.0      1.7          "devide",
    34         1          1.0      1.0      1.7          "multiply",
    35         1          1.0      1.0      1.7          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      1.7          "minos",
    38         1          2.0      2.0      3.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      1.7      length = len(elements)-1
    41                                               extraction = [
    42         1         23.0     23.0     39.7          elements[random.randint(0,length)],
    43         1          7.0      7.0     12.1          elements[random.randint(0,length)],
    44         1          7.0      7.0     12.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1.7e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     29.4      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          4.0      1.3     23.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          3.0      1.0     17.6      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          2.0      0.7     11.8      if isinstance(obj, str):
    61         3          3.0      1.0     17.6          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000809 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        116.0    116.0     14.3      inputValue = inputPart()
    89         1         14.0     14.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1         10.0     10.0      1.2      judgeValue1 = judge(inputValue[1])
    91         1         10.0     10.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         27.0     27.0      3.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        476.0    476.0     58.8      print str(inputValue).decode("string-escape")
   102         1        154.0    154.0     19.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

166回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 'plus', 100]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          1.0      1.0      2.4          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     39.0          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.6          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     50.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     12.5      if isinstance(obj, str):
    61         2          1.0      0.5     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00051 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         74.0     74.0     14.5      inputValue = inputPart()
    89         1          9.0      9.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.2      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         19.0     19.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        396.0    396.0     77.6      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

167回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minos', 'devide', 'plas']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 8.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.1          1,
    16         1          2.0      2.0      2.3          234,
    17         1          1.0      1.0      1.1          543,
    18         1          1.0      1.0      1.1          766,
    19         1          1.0      1.0      1.1          44,
    20         1          1.0      1.0      1.1          5,
    21         1          1.0      1.0      1.1          100,
    22         1          1.0      1.0      1.1          20,
    23         1          1.0      1.0      1.1          111,
    24         1          1.0      1.0      1.1          371,
    25         1          1.0      1.0      1.1          0,
    26         1          1.0      1.0      1.1          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.1          0.134,
    28         1          1.0      1.0      1.1          "あいう",
    29         1          1.0      1.0      1.1          "saerf",
    30         1          1.0      1.0      1.1          "plus",
    31         1          1.0      1.0      1.1          "AAAd123482934",
    32         1          1.0      1.0      1.1          "minus",
    33         1          1.0      1.0      1.1          "devide",
    34         1          1.0      1.0      1.1          "multiply",
    35         1          1.0      1.0      1.1          "divide",
    36         1          1.0      1.0      1.1          "plas",
    37         1          1.0      1.0      1.1          "minos",
    38         1          2.0      2.0      2.3          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.3      length = len(elements)-1
    41                                               extraction = [
    42         1         39.0     39.0     44.8          elements[random.randint(0,length)],
    43         1         10.0     10.0     11.5          elements[random.randint(0,length)],
    44         1          9.0      9.0     10.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.1      return extraction

Total time: 1.7e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     35.3      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          3.0      1.0     17.6      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          4.0      1.3     23.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          3.0      1.0     17.6      if isinstance(obj, str):
    61         3          1.0      0.3      5.9          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.004629 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        161.0    161.0      3.5      inputValue = inputPart()
    89         1         21.0     21.0      0.5      judgeValue0 = judge(inputValue[0])
    90         1         14.0     14.0      0.3      judgeValue1 = judge(inputValue[1])
    91         1         15.0     15.0      0.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.0          output = "error"
    96                                               
    97         1         77.0     77.0      1.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       4336.0   4336.0     93.7      print str(inputValue).decode("string-escape")
   102         1          4.0      4.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

168回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0.134, 'multiply', 'plas']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.4          1,
    16         1          1.0      1.0      1.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      1.4          44,
    20         1          1.0      1.0      1.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      1.4          111,
    24         1          1.0      1.0      1.4          371,
    25         1          1.0      1.0      1.4          0,
    26         1          1.0      1.0      1.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      1.4          "plus",
    31         1          1.0      1.0      1.4          "AAAd123482934",
    32         1          1.0      1.0      1.4          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      1.4          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      1.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      1.4      length = len(elements)-1
    41                                               extraction = [
    42         1         33.0     33.0     46.5          elements[random.randint(0,length)],
    43         1         14.0     14.0     19.7          elements[random.randint(0,length)],
    44         1          9.0      9.0     12.7          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.4      return extraction

Total time: 1.5e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     33.3      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          3.0      1.0     20.0      if isinstance(obj, float):
    55         1          1.0      1.0      6.7          return 1
    56                                           
    57         2          2.0      1.0     13.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     13.3      if isinstance(obj, str):
    61         2          2.0      1.0     13.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000633 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        110.0    110.0     17.4      inputValue = inputPart()
    89         1         13.0     13.0      2.1      judgeValue0 = judge(inputValue[0])
    90         1         13.0     13.0      2.1      judgeValue1 = judge(inputValue[1])
    91         1         11.0     11.0      1.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         30.0     30.0      4.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        453.0    453.0     71.6      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

169回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['AAAd123482934', 1, 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 8.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      2.4          1,
    16         1          2.0      2.0      2.4          234,
    17         1          1.0      1.0      1.2          543,
    18         1          1.0      1.0      1.2          766,
    19         1          1.0      1.0      1.2          44,
    20         1          2.0      2.0      2.4          5,
    21         1          1.0      1.0      1.2          100,
    22         1          1.0      1.0      1.2          20,
    23         1          1.0      1.0      1.2          111,
    24         1          1.0      1.0      1.2          371,
    25         1          1.0      1.0      1.2          0,
    26         1          1.0      1.0      1.2          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      1.2          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      1.2          "plus",
    31         1          1.0      1.0      1.2          "AAAd123482934",
    32         1          1.0      1.0      1.2          "minus",
    33         1          1.0      1.0      1.2          "devide",
    34         1         17.0     17.0     20.0          "multiply",
    35         1         15.0     15.0     17.6          "divide",
    36         1          1.0      1.0      1.2          "plas",
    37         1          1.0      1.0      1.2          "minos",
    38         1          1.0      1.0      1.2          "multipy"
    39                                                   ]
    40         1          1.0      1.0      1.2      length = len(elements)-1
    41                                               extraction = [
    42         1         18.0     18.0     21.2          elements[random.randint(0,length)],
    43         1          6.0      6.0      7.1          elements[random.randint(0,length)],
    44         1          5.0      5.0      5.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1.6e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3         13.0      4.3     81.2      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0      6.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0      6.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0      6.2      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000684 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        147.0    147.0     21.5      inputValue = inputPart()
    89         1         20.0     20.0      2.9      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.7      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.6      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         24.0     24.0      3.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        481.0    481.0     70.3      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

170回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['divide', 0.134, 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 0.000118 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      0.8          1,
    16         1          2.0      2.0      1.7          234,
    17         1          1.0      1.0      0.8          543,
    18         1          1.0      1.0      0.8          766,
    19         1          1.0      1.0      0.8          44,
    20         1          1.0      1.0      0.8          5,
    21         1          1.0      1.0      0.8          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      0.8          111,
    24         1          1.0      1.0      0.8          371,
    25         1          1.0      1.0      0.8          0,
    26         1          1.0      1.0      0.8          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      0.8          0.134,
    28         1          1.0      1.0      0.8          "あいう",
    29         1          1.0      1.0      0.8          "saerf",
    30         1          1.0      1.0      0.8          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      0.8          "minus",
    33         1          1.0      1.0      0.8          "devide",
    34         1          1.0      1.0      0.8          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      0.8          "plas",
    37         1          1.0      1.0      0.8          "minos",
    38         1          2.0      2.0      1.7          "multipy"
    39                                                   ]
    40         1          2.0      2.0      1.7      length = len(elements)-1
    41                                               extraction = [
    42         1         81.0     81.0     68.6          elements[random.randint(0,length)],
    43         1          7.0      7.0      5.9          elements[random.randint(0,length)],
    44         1          4.0      4.0      3.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      0.8      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     50.0      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          3.0      1.0     37.5      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57         2          1.0      0.5     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000707 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        174.0    174.0     24.6      inputValue = inputPart()
    89         1         10.0     10.0      1.4      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         28.0     28.0      4.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        481.0    481.0     68.0      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

171回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 'plus', 0]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.1          1,
    16         1          1.0      1.0      2.1          234,
    17         1          1.0      1.0      2.1          543,
    18         1          1.0      1.0      2.1          766,
    19         1          1.0      1.0      2.1          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.1          100,
    22         1          1.0      1.0      2.1          20,
    23         1          1.0      1.0      2.1          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.1          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.1          0.134,
    28         1          1.0      1.0      2.1          "あいう",
    29         1          1.0      1.0      2.1          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.1          "AAAd123482934",
    32         1          1.0      1.0      2.1          "minus",
    33         1          1.0      1.0      2.1          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.1          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.1      length = len(elements)-1
    41                                               extraction = [
    42         1         18.0     18.0     38.3          elements[random.randint(0,length)],
    43         1          7.0      7.0     14.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     10.6          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1.1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     45.5      if isinstance(obj, int):
    52         1          1.0      1.0      9.1          return 1
    53                                           
    54         2          2.0      1.0     18.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     18.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5      9.1      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.001042 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         85.0     85.0      8.2      inputValue = inputPart()
    89         1         12.0     12.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         88.0     88.0      8.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        836.0    836.0     80.2      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

172回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 'plas', 'divide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 0.000359 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      0.3          1,
    16         1          2.0      2.0      0.6          234,
    17         1          1.0      1.0      0.3          543,
    18         1          1.0      1.0      0.3          766,
    19         1          1.0      1.0      0.3          44,
    20         1          1.0      1.0      0.3          5,
    21         1          1.0      1.0      0.3          100,
    22         1          1.0      1.0      0.3          20,
    23         1          1.0      1.0      0.3          111,
    24         1          1.0      1.0      0.3          371,
    25         1          1.0      1.0      0.3          0,
    26         1          1.0      1.0      0.3          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      0.3          0.134,
    28         1          1.0      1.0      0.3          "あいう",
    29         1          1.0      1.0      0.3          "saerf",
    30         1          1.0      1.0      0.3          "plus",
    31         1          1.0      1.0      0.3          "AAAd123482934",
    32         1          1.0      1.0      0.3          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      0.3          "multiply",
    35         1          1.0      1.0      0.3          "divide",
    36         1          1.0      1.0      0.3          "plas",
    37         1          1.0      1.0      0.3          "minos",
    38         1          1.0      1.0      0.3          "multipy"
    39                                                   ]
    40         1          2.0      2.0      0.6      length = len(elements)-1
    41                                               extraction = [
    42         1        310.0    310.0     86.4          elements[random.randint(0,length)],
    43         1         12.0     12.0      3.3          elements[random.randint(0,length)],
    44         1         10.0     10.0      2.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      0.3      return extraction

Total time: 2.7e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3         13.0      4.3     48.1      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          4.0      1.3     14.8      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          4.0      1.3     14.8      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          3.0      1.0     11.1      if isinstance(obj, str):
    61         3          3.0      1.0     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.001666 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        423.0    423.0     25.4      inputValue = inputPart()
    89         1         20.0     20.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1        162.0    162.0      9.7      judgeValue1 = judge(inputValue[1])
    91         1        191.0    191.0     11.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         39.0     39.0      2.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        827.0    827.0     49.6      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

173回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[766, 0.134, 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.4          100,
    22         1          1.0      1.0      2.4          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     40.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          4.0      4.0      9.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     66.7      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     33.3      if isinstance(obj, float):
    55         2          0.0      0.0      0.0          return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000517 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0     14.7      inputValue = inputPart()
    89         1          5.0      5.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.4      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      1.0      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         19.0     19.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        402.0    402.0     77.8      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

174回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['divide', 44, 20]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.6          5,
    21         1          1.0      1.0      2.6          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     42.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     66.7      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          1.0      1.0     33.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.0005 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     14.6      inputValue = inputPart()
    89         1          8.0      8.0      1.6      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.6      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         16.0     16.0      3.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        394.0    394.0     78.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

175回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 20, 0]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          1.0      1.0      2.6          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     38.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     33.3      if isinstance(obj, int):
    52         2          1.0      0.5     16.7          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     16.7      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000468 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     15.4      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        358.0    358.0     76.5      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

176回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[766, 766, 0]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.4          1,
    16         1          2.0      2.0      2.7          234,
    17         1          1.0      1.0      1.4          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      1.4          44,
    20         1          1.0      1.0      1.4          5,
    21         1          1.0      1.0      1.4          100,
    22         1          1.0      1.0      1.4          20,
    23         1          1.0      1.0      1.4          111,
    24         1          1.0      1.0      1.4          371,
    25         1          1.0      1.0      1.4          0,
    26         1          1.0      1.0      1.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.4          0.134,
    28         1          1.0      1.0      1.4          "あいう",
    29         1          1.0      1.0      1.4          "saerf",
    30         1          1.0      1.0      1.4          "plus",
    31         1          1.0      1.0      1.4          "AAAd123482934",
    32         1          1.0      1.0      1.4          "minus",
    33         1          1.0      1.0      1.4          "devide",
    34         1          1.0      1.0      1.4          "multiply",
    35         1          1.0      1.0      1.4          "divide",
    36         1          1.0      1.0      1.4          "plas",
    37         1          1.0      1.0      1.4          "minos",
    38         1          1.0      1.0      1.4          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         26.0     26.0     35.6          elements[random.randint(0,length)],
    43         1         11.0     11.0     15.1          elements[random.randint(0,length)],
    44         1          9.0      9.0     12.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.4      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     66.7      if isinstance(obj, int):
    52         3          2.0      0.7     33.3          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000916 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        144.0    144.0     15.7      inputValue = inputPart()
    89         1         13.0     13.0      1.4      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         41.0     41.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        699.0    699.0     76.3      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

177回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[100, 'AAAd123482934', 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          1.0      1.0      2.6          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     40.0      if isinstance(obj, int):
    52         1          1.0      1.0     10.0          return 1
    53                                           
    54         2          2.0      1.0     20.0      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57         1          1.0      1.0     10.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     10.0      if isinstance(obj, str):
    61         1          1.0      1.0     10.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000483 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     15.1      inputValue = inputPart()
    89         1          5.0      5.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      1.0      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        374.0    374.0     77.4      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

178回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 'minos', 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          1.0      1.0      2.6          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.9          elements[random.randint(0,length)],
    43         1          6.0      6.0     15.4          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     25.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     25.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000476 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         74.0     74.0     15.5      inputValue = inputPart()
    89         1         10.0     10.0      2.1      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        359.0    359.0     75.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

179回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[766, 111, 5]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.5          44,
    20         1          1.0      1.0      2.5          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.5          111,
    24         1          1.0      1.0      2.5          371,
    25         1          1.0      1.0      2.5          0,
    26         1          1.0      1.0      2.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.5          "plus",
    31         1          1.0      1.0      2.5          "AAAd123482934",
    32         1          1.0      1.0      2.5          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.5          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     37.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     80.0      if isinstance(obj, int):
    52         3          1.0      0.3     20.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000606 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         75.0     75.0     12.4      inputValue = inputPart()
    89         1          6.0      6.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.7      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         18.0     18.0      3.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        494.0    494.0     81.5      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

180回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 371, 'minos']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          1.0      1.0      2.7          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          1.0      1.0      2.7          20,
    23         1          1.0      1.0      2.7          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          1.0      1.0      2.7          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     43.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     44.4      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     11.1      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     22.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     22.2      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000858 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0      8.9      inputValue = inputPart()
    89         1         10.0     10.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.5      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         20.0     20.0      2.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        737.0    737.0     85.9      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

181回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[766, 44, 20]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     34.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     75.0      if isinstance(obj, int):
    52         3          1.0      0.3     25.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000444 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.8      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        339.0    339.0     76.4      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

182回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 'devide', 'minos']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.4          100,
    22         1          1.0      1.0      2.4          20,
    23         1          1.0      1.0      2.4          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          1.0      1.0      2.4          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     35.7          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          1.0      0.3     33.3      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          1.0      0.3     33.3      if isinstance(obj, str):
    61         3          1.0      0.3     33.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000517 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0     14.7      inputValue = inputPart()
    89         1         10.0     10.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.4      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.4      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         18.0     18.0      3.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        396.0    396.0     76.6      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

183回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minus', 'divide', 'multipy']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.3          1,
    16         1          2.0      2.0      2.6          234,
    17         1          1.0      1.0      1.3          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      1.3          100,
    22         1          1.0      1.0      1.3          20,
    23         1          1.0      1.0      1.3          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      1.3          "あいう",
    29         1          1.0      1.0      1.3          "saerf",
    30         1          1.0      1.0      1.3          "plus",
    31         1          1.0      1.0      1.3          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      1.3          "plas",
    37         1          1.0      1.0      1.3          "minos",
    38         1          1.0      1.0      1.3          "multipy"
    39                                                   ]
    40         1          1.0      1.0      1.3      length = len(elements)-1
    41                                               extraction = [
    42         1         49.0     49.0     64.5          elements[random.randint(0,length)],
    43         1          6.0      6.0      7.9          elements[random.randint(0,length)],
    44         1          5.0      5.0      6.6          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.3      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     33.3      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          2.0      0.7     33.3      if isinstance(obj, str):
    61         3          2.0      0.7     33.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000531 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        120.0    120.0     22.6      inputValue = inputPart()
    89         1         10.0     10.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         18.0     18.0      3.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        365.0    365.0     68.7      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

184回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[100, 26182576726545671723454736273454323454327667827345432763478372L, 100]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.5          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.5          111,
    24         1          1.0      1.0      2.5          371,
    25         1          1.0      1.0      2.5          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.5          "saerf",
    30         1          1.0      1.0      2.5          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          2.0      2.0      5.0      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     40.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     60.0      if isinstance(obj, int):
    52         2          1.0      0.5     20.0          return 1
    53                                           
    54         1          1.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000509 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         77.0     77.0     15.1      inputValue = inputPart()
    89         1          5.0      5.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.6      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.6      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         19.0     19.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        394.0    394.0     77.4      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

185回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minus', 234, 'plus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.3          1,
    16         1          1.0      1.0      2.3          234,
    17         1          1.0      1.0      2.3          543,
    18         1          1.0      1.0      2.3          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.3          100,
    22         1          1.0      1.0      2.3          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.3          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.3          0.134,
    28         1          1.0      1.0      2.3          "あいう",
    29         1          1.0      1.0      2.3          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.3          "devide",
    34         1          1.0      1.0      2.3          "multiply",
    35         1          1.0      1.0      2.3          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.3      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     39.5          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.0          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.6          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     50.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          1.0      0.5     25.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000567 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         83.0     83.0     14.6      inputValue = inputPart()
    89         1         11.0     11.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         27.0     27.0      4.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        432.0    432.0     76.2      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

186回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['saerf', 766, 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.5          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.5          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.5          0.134,
    28         1          1.0      1.0      2.5          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.5          "minus",
    33         1          1.0      1.0      2.5          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          2.0      2.0      5.0      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     40.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     16.7      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00053 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0     14.3      inputValue = inputPart()
    89         1         10.0     10.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         19.0     19.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        409.0    409.0     77.2      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

187回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 111, 0]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.0          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.0          766,
    19         1          1.0      1.0      2.0          44,
    20         1          1.0      1.0      2.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.0          20,
    23         1          1.0      1.0      2.0          111,
    24         1          1.0      1.0      2.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.0          "あいう",
    29         1          1.0      1.0      2.0          "saerf",
    30         1          1.0      1.0      2.0          "plus",
    31         1          1.0      1.0      2.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.0          "divide",
    36         1          1.0      1.0      2.0          "plas",
    37         1          1.0      1.0      2.0          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.0      length = len(elements)-1
    41                                               extraction = [
    42         1         19.0     19.0     38.0          elements[random.randint(0,length)],
    43         1          6.0      6.0     12.0          elements[random.randint(0,length)],
    44         1          8.0      8.0     16.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.0      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     60.0      if isinstance(obj, int):
    52         2          1.0      0.5     10.0          return 1
    53                                           
    54         1          1.0      1.0     10.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     10.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     10.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00084 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         88.0     88.0     10.5      inputValue = inputPart()
    89         1         16.0     16.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.0      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         31.0     31.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        686.0    686.0     81.7      print str(inputValue).decode("string-escape")
   102         1          4.0      4.0      0.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

188回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0, 'あいう', 234]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.5          1,
    16         1          2.0      2.0      2.9          234,
    17         1          1.0      1.0      1.5          543,
    18         1          1.0      1.0      1.5          766,
    19         1          1.0      1.0      1.5          44,
    20         1          1.0      1.0      1.5          5,
    21         1          1.0      1.0      1.5          100,
    22         1          1.0      1.0      1.5          20,
    23         1          1.0      1.0      1.5          111,
    24         1          1.0      1.0      1.5          371,
    25         1          1.0      1.0      1.5          0,
    26         1          1.0      1.0      1.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.5          0.134,
    28         1          1.0      1.0      1.5          "あいう",
    29         1          1.0      1.0      1.5          "saerf",
    30         1          1.0      1.0      1.5          "plus",
    31         1          1.0      1.0      1.5          "AAAd123482934",
    32         1          1.0      1.0      1.5          "minus",
    33         1          1.0      1.0      1.5          "devide",
    34         1          1.0      1.0      1.5          "multiply",
    35         1          1.0      1.0      1.5          "divide",
    36         1          1.0      1.0      1.5          "plas",
    37         1          1.0      1.0      1.5          "minos",
    38         1          1.0      1.0      1.5          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         25.0     25.0     36.8          elements[random.randint(0,length)],
    43         1         10.0     10.0     14.7          elements[random.randint(0,length)],
    44         1          5.0      5.0      7.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.5      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     50.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     12.5      if isinstance(obj, str):
    61         1          1.0      1.0     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.001004 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        128.0    128.0     12.7      inputValue = inputPart()
    89         1          6.0      6.0      0.6      judgeValue0 = judge(inputValue[0])
    90         1          9.0      9.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.4      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         28.0     28.0      2.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        827.0    827.0     82.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

189回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multipy', 'multipy', 'multiply']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 0.000165 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      1.2          1,
    16         1          2.0      2.0      1.2          234,
    17         1          1.0      1.0      0.6          543,
    18         1         18.0     18.0     10.9          766,
    19         1          1.0      1.0      0.6          44,
    20         1          5.0      5.0      3.0          5,
    21         1          1.0      1.0      0.6          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      0.6          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      0.6          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      0.6          "あいう",
    29         1          1.0      1.0      0.6          "saerf",
    30         1          1.0      1.0      0.6          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      0.6          "devide",
    34         1          3.0      3.0      1.8          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          6.0      6.0      3.6          "multipy"
    39                                                   ]
    40         1          6.0      6.0      3.6      length = len(elements)-1
    41                                               extraction = [
    42         1         81.0     81.0     49.1          elements[random.randint(0,length)],
    43         1         22.0     22.0     13.3          elements[random.randint(0,length)],
    44         1         10.0     10.0      6.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      0.6      return extraction

Total time: 2.9e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3         15.0      5.0     51.7      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          6.0      2.0     20.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          3.0      1.0     10.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          4.0      1.3     13.8      if isinstance(obj, str):
    61         3          1.0      0.3      3.4          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.002556 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1       1172.0   1172.0     45.9      inputValue = inputPart()
    89         1         47.0     47.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1         15.0     15.0      0.6      judgeValue1 = judge(inputValue[1])
    91         1         15.0     15.0      0.6      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.0          output = "error"
    96                                               
    97         1        131.0    131.0      5.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       1171.0   1171.0     45.8      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

190回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[20, 'plas', 100]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 5.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.0          1,
    16         1          1.0      1.0      2.0          234,
    17         1          1.0      1.0      2.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.0          100,
    22         1          1.0      1.0      2.0          20,
    23         1          1.0      1.0      2.0          111,
    24         1          1.0      1.0      2.0          371,
    25         1          1.0      1.0      2.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.0          0.134,
    28         1          1.0      1.0      2.0          "あいう",
    29         1          1.0      1.0      2.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.0          "devide",
    34         1          1.0      1.0      2.0          "multiply",
    35         1          1.0      1.0      2.0          "divide",
    36         1          1.0      1.0      2.0          "plas",
    37         1          1.0      1.0      2.0          "minos",
    38         1          2.0      2.0      3.9          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.9      length = len(elements)-1
    41                                               extraction = [
    42         1         19.0     19.0     37.3          elements[random.randint(0,length)],
    43         1          5.0      5.0      9.8          elements[random.randint(0,length)],
    44         1          5.0      5.0      9.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         2          1.0      0.5     14.3          return 1
    53                                           
    54         1          1.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.002249 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        111.0    111.0      4.9      inputValue = inputPart()
    89         1          6.0      6.0      0.3      judgeValue0 = judge(inputValue[0])
    90         1          9.0      9.0      0.4      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.2      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.0          output = "error"
    96                                               
    97         1        971.0    971.0     43.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       1144.0   1144.0     50.9      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

191回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plas', 'divide', 766]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.4          1,
    16         1          2.0      2.0      2.7          234,
    17         1          1.0      1.0      1.4          543,
    18         1          1.0      1.0      1.4          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      1.4          100,
    22         1          1.0      1.0      1.4          20,
    23         1          1.0      1.0      1.4          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      1.4          0,
    26         1          1.0      1.0      1.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.4          0.134,
    28         1          1.0      1.0      1.4          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      1.4          "plus",
    31         1          1.0      1.0      1.4          "AAAd123482934",
    32         1          1.0      1.0      1.4          "minus",
    33         1          1.0      1.0      1.4          "devide",
    34         1          2.0      2.0      2.7          "multiply",
    35         1          1.0      1.0      1.4          "divide",
    36         1          1.0      1.0      1.4          "plas",
    37         1          1.0      1.0      1.4          "minos",
    38         1          2.0      2.0      2.7          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         27.0     27.0     37.0          elements[random.randint(0,length)],
    43         1         11.0     11.0     15.1          elements[random.randint(0,length)],
    44         1          9.0      9.0     12.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.4      return extraction

Total time: 1.5e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     40.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          3.0      1.5     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     13.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     13.3      if isinstance(obj, str):
    61         2          2.0      1.0     13.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.001156 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        145.0    145.0     12.5      inputValue = inputPart()
    89         1         19.0     19.0      1.6      judgeValue0 = judge(inputValue[0])
    90         1         13.0     13.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         42.0     42.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        926.0    926.0     80.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

192回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0.134, 0.134, 'AAAd123482934']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.5          5,
    21         1          1.0      1.0      2.5          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.5          0.134,
    28         1          1.0      1.0      2.5          "あいう",
    29         1          1.0      1.0      2.5          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.5          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          1.0      1.0      2.5          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     40.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0    100.0      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          0.0      0.0      0.0      if isinstance(obj, float):
    55         2          0.0      0.0      0.0          return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 2.8e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      3.6      def sep():
    66                                                   print "--------------------------------------"
    67         1          0.0      0.0      0.0      def pr(x):
    68                                                   print x
    69         1         24.0     24.0     85.7      sep()
    70                                           
    71         1          1.0      1.0      3.6      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          0.0      0.0      0.0      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      3.6      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          0.0      0.0      0.0      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          0.0      0.0      0.0          result = "Operator is invalid."
    84         1          1.0      1.0      3.6      return result

Total time: 0.000662 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0     11.5      inputValue = inputPart()
    89         1          8.0      8.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         40.0     40.0      6.0          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        522.0    522.0     78.9      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

193回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multipy', 'divide', 'minus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 0.000609 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1        159.0    159.0     26.1          1,
    16         1          3.0      3.0      0.5          234,
    17         1          2.0      2.0      0.3          543,
    18         1          1.0      1.0      0.2          766,
    19         1          1.0      1.0      0.2          44,
    20         1          1.0      1.0      0.2          5,
    21         1          2.0      2.0      0.3          100,
    22         1          1.0      1.0      0.2          20,
    23         1          1.0      1.0      0.2          111,
    24         1          1.0      1.0      0.2          371,
    25         1          1.0      1.0      0.2          0,
    26         1          1.0      1.0      0.2          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      0.2          0.134,
    28         1          2.0      2.0      0.3          "あいう",
    29         1          1.0      1.0      0.2          "saerf",
    30         1          1.0      1.0      0.2          "plus",
    31         1          1.0      1.0      0.2          "AAAd123482934",
    32         1          1.0      1.0      0.2          "minus",
    33         1          2.0      2.0      0.3          "devide",
    34         1          1.0      1.0      0.2          "multiply",
    35         1          1.0      1.0      0.2          "divide",
    36         1        364.0    364.0     59.8          "plas",
    37         1          3.0      3.0      0.5          "minos",
    38         1          2.0      2.0      0.3          "multipy"
    39                                                   ]
    40         1          3.0      3.0      0.5      length = len(elements)-1
    41                                               extraction = [
    42         1         30.0     30.0      4.9          elements[random.randint(0,length)],
    43         1         12.0     12.0      2.0          elements[random.randint(0,length)],
    44         1          9.0      9.0      1.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      0.2      return extraction

Total time: 2.1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3         10.0      3.3     47.6      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          3.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          3.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          3.0      1.0     14.3      if isinstance(obj, str):
    61         3          2.0      0.7      9.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.001744 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        694.0    694.0     39.8      inputValue = inputPart()
    89         1         23.0     23.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1         50.0     50.0      2.9      judgeValue1 = judge(inputValue[1])
    91         1         19.0     19.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         46.0     46.0      2.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        908.0    908.0     52.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

194回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[371, 100, 0]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 5.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      3.6          1,
    16         1          2.0      2.0      3.6          234,
    17         1          1.0      1.0      1.8          543,
    18         1          1.0      1.0      1.8          766,
    19         1          1.0      1.0      1.8          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      1.8          100,
    22         1          1.0      1.0      1.8          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      1.8          371,
    25         1          1.0      1.0      1.8          0,
    26         1          1.0      1.0      1.8          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.8          0.134,
    28         1          1.0      1.0      1.8          "あいう",
    29         1          1.0      1.0      1.8          "saerf",
    30         1          1.0      1.0      1.8          "plus",
    31         1          1.0      1.0      1.8          "AAAd123482934",
    32         1          1.0      1.0      1.8          "minus",
    33         1          1.0      1.0      1.8          "devide",
    34         1          1.0      1.0      1.8          "multiply",
    35         1          1.0      1.0      1.8          "divide",
    36         1          1.0      1.0      1.8          "plas",
    37         1          1.0      1.0      1.8          "minos",
    38         1          2.0      2.0      3.6          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.6      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     30.9          elements[random.randint(0,length)],
    43         1          6.0      6.0     10.9          elements[random.randint(0,length)],
    44         1          4.0      4.0      7.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.8      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     75.0      if isinstance(obj, int):
    52         3          1.0      0.3     25.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000572 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        140.0    140.0     24.5      inputValue = inputPart()
    89         1          6.0      6.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.7      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      3.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        395.0    395.0     69.1      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

195回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['AAAd123482934', 0.134, 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          1.0      1.0      2.6          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.9          elements[random.randint(0,length)],
    43         1          6.0      6.0     15.4          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1.2e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     33.3      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     16.7      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57         2          2.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     16.7      if isinstance(obj, str):
    61         2          2.0      1.0     16.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000535 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         78.0     78.0     14.6      inputValue = inputPart()
    89         1         10.0     10.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         19.0     19.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        412.0    412.0     77.0      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

196回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[20, 'divide', 'plus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     38.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         1          1.0      1.0     14.3          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000784 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         74.0     74.0      9.4      inputValue = inputPart()
    89         1          5.0      5.0      0.6      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.0      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      2.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        673.0    673.0     85.8      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

197回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[100, 0.134, 0]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.8          1,
    16         1          1.0      1.0      2.8          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.8          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.8          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.8          0.134,
    28         1          1.0      1.0      2.8          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.8          "plas",
    37         1          1.0      1.0      2.8          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     41.7          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         2          2.0      1.0     33.3          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000516 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     14.1      inputValue = inputPart()
    89         1          5.0      5.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.2      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        408.0    408.0     79.1      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

198回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[1, 766, 111]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     31.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          4.0      4.0      9.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 1e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          1.0      0.3    100.0      if isinstance(obj, int):
    52         3          0.0      0.0      0.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000465 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.3      inputValue = inputPart()
    89         1          6.0      6.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.6      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        362.0    362.0     77.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

199回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[543, 543, 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     38.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         2          1.0      0.5     14.3          return 1
    53                                           
    54         1          1.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 2.6e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          0.0      0.0      0.0      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      3.8      def pr(x):
    68                                                   print x
    69         1         23.0     23.0     88.5      sep()
    70                                           
    71         1          1.0      1.0      3.8      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          0.0      0.0      0.0      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          0.0      0.0      0.0      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      3.8      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          0.0      0.0      0.0          result = "Operator is invalid."
    84         1          0.0      0.0      0.0      return result

Total time: 0.000693 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     10.5      inputValue = inputPart()
    89         1          6.0      6.0      0.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.6      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         38.0     38.0      5.5          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        561.0    561.0     81.0      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

200回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['divide', 'plas', 'plas']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.8          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.8          100,
    22         1          1.0      1.0      2.8          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          1.0      1.0      2.8          "AAAd123482934",
    32         1          1.0      1.0      2.8          "minus",
    33         1          1.0      1.0      2.8          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          2.0      2.0      5.6      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     44.4          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     28.6      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          1.0      0.3     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          1.0      0.3     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          2.0      0.7     28.6      if isinstance(obj, str):
    61         3          1.0      0.3     14.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000527 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         74.0     74.0     14.0      inputValue = inputPart()
    89         1          9.0      9.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         22.0     22.0      4.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        406.0    406.0     77.0      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

201回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minos', 234, 'AAAd123482934']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          1.0      1.0      2.5          543,
    18         1          1.0      1.0      2.5          766,
    19         1          1.0      1.0      2.5          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.5          20,
    23         1          1.0      1.0      2.5          111,
    24         1          1.0      1.0      2.5          371,
    25         1          1.0      1.0      2.5          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.5          "AAAd123482934",
    32         1          1.0      1.0      2.5          "minus",
    33         1          1.0      1.0      2.5          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     60.0      if isinstance(obj, int):
    52         1          1.0      1.0     20.0          return 1
    53                                           
    54         2          1.0      0.5     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000464 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.3      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         16.0     16.0      3.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        356.0    356.0     76.7      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

202回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 766, 20]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.5          44,
    20         1          1.0      1.0      2.5          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.5          0,
    26         1          1.0      1.0      2.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.5          0.134,
    28         1          1.0      1.0      2.5          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          1.0      1.0      2.5          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     37.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     66.7      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     33.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000474 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     15.2      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        364.0    364.0     76.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

203回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[234, 'multiply', 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 9.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.1          1,
    16         1          1.0      1.0      1.1          234,
    17         1          1.0      1.0      1.1          543,
    18         1          1.0      1.0      1.1          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      1.1          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      1.1          111,
    24         1          1.0      1.0      1.1          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.1          0.134,
    28         1          1.0      1.0      1.1          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      1.1          "plus",
    31         1          1.0      1.0      1.1          "AAAd123482934",
    32         1          1.0      1.0      1.1          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      1.1          "multiply",
    35         1          1.0      1.0      1.1          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      1.1          "multipy"
    39                                                   ]
    40         1          1.0      1.0      1.1      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     15.8          elements[random.randint(0,length)],
    43         1          5.0      5.0      5.3          elements[random.randint(0,length)],
    44         1         57.0     57.0     60.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          2.0      2.0      2.1      return extraction

Total time: 1.3e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     46.2      if isinstance(obj, int):
    52         2          1.0      0.5      7.7          return 1
    53                                           
    54         1          2.0      2.0     15.4      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          2.0      2.0     15.4      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0      7.7      if isinstance(obj, str):
    61         1          1.0      1.0      7.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.001014 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        156.0    156.0     15.4      inputValue = inputPart()
    89         1         10.0     10.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1         16.0     16.0      1.6      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         57.0     57.0      5.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        763.0    763.0     75.2      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

204回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[543, 'minus', 20]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.5          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.5          0,
    26         1          1.0      1.0      2.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.5          0.134,
    28         1          1.0      1.0      2.5          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.5          "minus",
    33         1          1.0      1.0      2.5          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          2.0      2.0      5.0      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     42.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         2          2.0      1.0     33.3          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000854 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         77.0     77.0      9.0      inputValue = inputPart()
    89         1          5.0      5.0      0.6      judgeValue0 = judge(inputValue[0])
    90         1          9.0      9.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.5      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         25.0     25.0      2.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        732.0    732.0     85.7      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

205回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[100, 1, 5]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     42.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     75.0      if isinstance(obj, int):
    52         3          1.0      0.3     25.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000464 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         74.0     74.0     15.9      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.6      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        359.0    359.0     77.4      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

206回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0.134, 'multipy', 543]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 8.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.2          1,
    16         1          1.0      1.0      1.2          234,
    17         1          1.0      1.0      1.2          543,
    18         1          1.0      1.0      1.2          766,
    19         1          1.0      1.0      1.2          44,
    20         1          1.0      1.0      1.2          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      1.2          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      1.2          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.2          0.134,
    28         1          1.0      1.0      1.2          "あいう",
    29         1         15.0     15.0     17.6          "saerf",
    30         1          2.0      2.0      2.4          "plus",
    31         1          1.0      1.0      1.2          "AAAd123482934",
    32         1          1.0      1.0      1.2          "minus",
    33         1          1.0      1.0      1.2          "devide",
    34         1          1.0      1.0      1.2          "multiply",
    35         1          1.0      1.0      1.2          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      1.2          "minos",
    38         1          4.0      4.0      4.7          "multipy"
    39                                                   ]
    40         1          3.0      3.0      3.5      length = len(elements)-1
    41                                               extraction = [
    42         1         28.0     28.0     32.9          elements[random.randint(0,length)],
    43         1         10.0     10.0     11.8          elements[random.randint(0,length)],
    44         1          7.0      7.0      8.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 5.3e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3         18.0      6.0     34.0      if isinstance(obj, int):
    52         1          2.0      2.0      3.8          return 1
    53                                           
    54         2          3.0      1.5      5.7      if isinstance(obj, float):
    55         1         27.0     27.0     50.9          return 1
    56                                           
    57         1          1.0      1.0      1.9      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0      1.9      if isinstance(obj, str):
    61         1          1.0      1.0      1.9          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.001199 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        149.0    149.0     12.4      inputValue = inputPart()
    89         1         65.0     65.0      5.4      judgeValue0 = judge(inputValue[0])
    90         1         60.0     60.0      5.0      judgeValue1 = judge(inputValue[1])
    91         1         24.0     24.0      2.0      judgeValue2 = judge(inputValue[2])
    92         1          2.0      2.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         32.0     32.0      2.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        864.0    864.0     72.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

207回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 371, 'multiply']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 0.000119 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      1.7          1,
    16         1          2.0      2.0      1.7          234,
    17         1          1.0      1.0      0.8          543,
    18         1          1.0      1.0      0.8          766,
    19         1          1.0      1.0      0.8          44,
    20         1          1.0      1.0      0.8          5,
    21         1          1.0      1.0      0.8          100,
    22         1          1.0      1.0      0.8          20,
    23         1          1.0      1.0      0.8          111,
    24         1          1.0      1.0      0.8          371,
    25         1          1.0      1.0      0.8          0,
    26         1          1.0      1.0      0.8          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      0.8          0.134,
    28         1          1.0      1.0      0.8          "あいう",
    29         1          1.0      1.0      0.8          "saerf",
    30         1          1.0      1.0      0.8          "plus",
    31         1          1.0      1.0      0.8          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      0.8          "devide",
    34         1          1.0      1.0      0.8          "multiply",
    35         1          1.0      1.0      0.8          "divide",
    36         1          1.0      1.0      0.8          "plas",
    37         1          1.0      1.0      0.8          "minos",
    38         1          2.0      2.0      1.7          "multipy"
    39                                                   ]
    40         1          2.0      2.0      1.7      length = len(elements)-1
    41                                               extraction = [
    42         1         59.0     59.0     49.6          elements[random.randint(0,length)],
    43         1         20.0     20.0     16.8          elements[random.randint(0,length)],
    44         1         11.0     11.0      9.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      0.8      return extraction

Total time: 1.8e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          7.0      2.3     38.9      if isinstance(obj, int):
    52         1          1.0      1.0      5.6          return 1
    53                                           
    54         2          3.0      1.5     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          3.0      1.5     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          3.0      1.5     16.7      if isinstance(obj, str):
    61         1          1.0      1.0      5.6          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000854 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        186.0    186.0     21.8      inputValue = inputPart()
    89         1         20.0     20.0      2.3      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1         39.0     39.0      4.6      judgeValue2 = judge(inputValue[2])
    92         1          2.0      2.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         47.0     47.0      5.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        551.0    551.0     64.5      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

208回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plas', 20, 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.4          5,
    21         1          1.0      1.0      2.4          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          1.0      1.0      2.4          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         19.0     19.0     45.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          4.0      4.0      9.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         2          1.0      0.5     16.7          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          1.0      1.0     16.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000525 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0     14.5      inputValue = inputPart()
    89         1          9.0      9.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.6      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         18.0     18.0      3.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        413.0    413.0     78.7      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

209回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 'plas', 'multipy']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 5.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.9          1,
    16         1          2.0      2.0      3.7          234,
    17         1          1.0      1.0      1.9          543,
    18         1          1.0      1.0      1.9          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      1.9          5,
    21         1          1.0      1.0      1.9          100,
    22         1          1.0      1.0      1.9          20,
    23         1          1.0      1.0      1.9          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      1.9          0,
    26         1          1.0      1.0      1.9          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.9          0.134,
    28         1          1.0      1.0      1.9          "あいう",
    29         1          1.0      1.0      1.9          "saerf",
    30         1          1.0      1.0      1.9          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      1.9          "minus",
    33         1          1.0      1.0      1.9          "devide",
    34         1          1.0      1.0      1.9          "multiply",
    35         1          1.0      1.0      1.9          "divide",
    36         1          1.0      1.0      1.9          "plas",
    37         1          1.0      1.0      1.9          "minos",
    38         1          2.0      2.0      3.7          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.7      length = len(elements)-1
    41                                               extraction = [
    42         1         18.0     18.0     33.3          elements[random.randint(0,length)],
    43         1          6.0      6.0     11.1          elements[random.randint(0,length)],
    44         1          5.0      5.0      9.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     44.4      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     22.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          2.0      0.7     22.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          1.0      0.3     11.1      if isinstance(obj, str):
    61         3          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00076 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        129.0    129.0     17.0      inputValue = inputPart()
    89         1         13.0     13.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         26.0     26.0      3.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        576.0    576.0     75.8      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

210回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minos', 'AAAd123482934', 543]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          1.0      1.0      2.6          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          2.0      2.0      5.3      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     39.5          elements[random.randint(0,length)],
    43         1          4.0      4.0     10.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         1          1.0      1.0     14.3          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000811 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0      8.9      inputValue = inputPart()
    89         1          8.0      8.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.5      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      2.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        701.0    701.0     86.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

211回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[100, 'AAAd123482934', 26182576726545671723454736273454323454327667827345432763478372L]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 8.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.2          1,
    16         1          1.0      1.0      1.2          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      1.2          44,
    20         1          1.0      1.0      1.2          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      1.2          0,
    26         1          1.0      1.0      1.2          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.2          0.134,
    28         1          1.0      1.0      1.2          "あいう",
    29         1          1.0      1.0      1.2          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1         40.0     40.0     48.2          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      1.2          "multiply",
    35         1          1.0      1.0      1.2          "divide",
    36         1          1.0      1.0      1.2          "plas",
    37         1          1.0      1.0      1.2          "minos",
    38         1          1.0      1.0      1.2          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     19.3          elements[random.randint(0,length)],
    43         1          6.0      6.0      7.2          elements[random.randint(0,length)],
    44         1          5.0      5.0      6.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     44.4      if isinstance(obj, int):
    52         1          1.0      1.0     11.1          return 1
    53                                           
    54         2          1.0      0.5     11.1      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     11.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     11.1      if isinstance(obj, str):
    61         1          1.0      1.0     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000687 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        115.0    115.0     16.7      inputValue = inputPart()
    89         1          5.0      5.0      0.7      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.2      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         19.0     19.0      2.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        531.0    531.0     77.3      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

212回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 111, 100]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      3.2          1,
    16         1          2.0      2.0      3.2          234,
    17         1          1.0      1.0      1.6          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      1.6          44,
    20         1          1.0      1.0      1.6          5,
    21         1          1.0      1.0      1.6          100,
    22         1          1.0      1.0      1.6          20,
    23         1          1.0      1.0      1.6          111,
    24         1          1.0      1.0      1.6          371,
    25         1          1.0      1.0      1.6          0,
    26         1          1.0      1.0      1.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.6          0.134,
    28         1          1.0      1.0      1.6          "あいう",
    29         1          1.0      1.0      1.6          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      1.6          "AAAd123482934",
    32         1          1.0      1.0      1.6          "minus",
    33         1          1.0      1.0      1.6          "devide",
    34         1          1.0      1.0      1.6          "multiply",
    35         1          1.0      1.0      1.6          "divide",
    36         1          1.0      1.0      1.6          "plas",
    37         1          1.0      1.0      1.6          "minos",
    38         1          2.0      2.0      3.2          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.2      length = len(elements)-1
    41                                               extraction = [
    42         1         25.0     25.0     39.7          elements[random.randint(0,length)],
    43         1          6.0      6.0      9.5          elements[random.randint(0,length)],
    44         1          5.0      5.0      7.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1.5e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          9.0      3.0     60.0      if isinstance(obj, int):
    52         2          2.0      1.0     13.3          return 1
    53                                           
    54         1          1.0      1.0      6.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0      6.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0      6.7      if isinstance(obj, str):
    61         1          1.0      1.0      6.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000877 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        151.0    151.0     17.2      inputValue = inputPart()
    89         1         21.0     21.0      2.4      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1         27.0     27.0      3.1      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         31.0     31.0      3.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        636.0    636.0     72.5      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

213回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 111, 20]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 5.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.8          1,
    16         1          1.0      1.0      1.8          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      1.8          100,
    22         1          1.0      1.0      1.8          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      1.8          "あいう",
    29         1          1.0      1.0      1.8          "saerf",
    30         1          1.0      1.0      1.8          "plus",
    31         1          1.0      1.0      1.8          "AAAd123482934",
    32         1          1.0      1.0      1.8          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      1.8          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.5      length = len(elements)-1
    41                                               extraction = [
    42         1         26.0     26.0     45.6          elements[random.randint(0,length)],
    43         1          6.0      6.0     10.5          elements[random.randint(0,length)],
    44         1         12.0     12.0     21.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.8      return extraction

Total time: 1e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          1.0      0.3    100.0      if isinstance(obj, int):
    52         3          0.0      0.0      0.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000794 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        105.0    105.0     13.2      inputValue = inputPart()
    89         1          7.0      7.0      0.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.5      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.4      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         21.0     21.0      2.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        650.0    650.0     81.9      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

214回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[1, 'plas', 'plus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.6          5,
    21         1          1.0      1.0      2.6          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     39.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         1          1.0      1.0     14.3          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000483 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     15.1      inputValue = inputPart()
    89         1          5.0      5.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        372.0    372.0     77.0      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

215回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[543, 100, 'multipy']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          1.0      1.0      2.5          543,
    18         1          1.0      1.0      2.5          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.5          100,
    22         1          1.0      1.0      2.5          20,
    23         1          1.0      1.0      2.5          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.5          "saerf",
    30         1          1.0      1.0      2.5          "plus",
    31         1          1.0      1.0      2.5          "AAAd123482934",
    32         1          1.0      1.0      2.5          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.5          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     40.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     50.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     12.5      if isinstance(obj, str):
    61         1          1.0      1.0     12.5          return 3

Total time: 2.5e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      4.0      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      4.0      def pr(x):
    68                                                   print x
    69         1         21.0     21.0     84.0      sep()
    70                                           
    71         1          1.0      1.0      4.0      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          0.0      0.0      0.0      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      4.0      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          0.0      0.0      0.0      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          0.0      0.0      0.0          result = "Operator is invalid."
    84         1          0.0      0.0      0.0      return result

Total time: 0.000784 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         75.0     75.0      9.6      inputValue = inputPart()
    89         1          6.0      6.0      0.8      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.5      judgeValue1 = judge(inputValue[1])
    91         1          9.0      9.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         37.0     37.0      4.7          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        647.0    647.0     82.5      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

216回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 'plas', 766]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.1          1,
    16         1          1.0      1.0      2.1          234,
    17         1          1.0      1.0      2.1          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.1          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.1          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.1          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.1          "あいう",
    29         1          1.0      1.0      2.1          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.1          "AAAd123482934",
    32         1          1.0      1.0      2.1          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.1          "multiply",
    35         1          1.0      1.0      2.1          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.1          "minos",
    38         1          1.0      1.0      2.1          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.3      length = len(elements)-1
    41                                               extraction = [
    42         1         18.0     18.0     38.3          elements[random.randint(0,length)],
    43         1          7.0      7.0     14.9          elements[random.randint(0,length)],
    44         1          6.0      6.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     62.5      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     12.5      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000574 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         89.0     89.0     15.5      inputValue = inputPart()
    89         1         11.0     11.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.4      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         24.0     24.0      4.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        433.0    433.0     75.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

217回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multipy', 0.134, 'divide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 0.00058 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1         48.0     48.0      8.3          1,
    16         1          2.0      2.0      0.3          234,
    17         1          1.0      1.0      0.2          543,
    18         1          1.0      1.0      0.2          766,
    19         1          1.0      1.0      0.2          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      0.2          100,
    22         1          1.0      1.0      0.2          20,
    23         1          1.0      1.0      0.2          111,
    24         1          1.0      1.0      0.2          371,
    25         1          1.0      1.0      0.2          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      0.2          0.134,
    28         1          1.0      1.0      0.2          "あいう",
    29         1          1.0      1.0      0.2          "saerf",
    30         1          1.0      1.0      0.2          "plus",
    31         1          1.0      1.0      0.2          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      0.2          "divide",
    36         1          1.0      1.0      0.2          "plas",
    37         1          1.0      1.0      0.2          "minos",
    38         1          2.0      2.0      0.3          "multipy"
    39                                                   ]
    40         1          3.0      3.0      0.5      length = len(elements)-1
    41                                               extraction = [
    42         1        486.0    486.0     83.8          elements[random.randint(0,length)],
    43         1         13.0     13.0      2.2          elements[random.randint(0,length)],
    44         1          9.0      9.0      1.6          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      0.2      return extraction

Total time: 1.5e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          7.0      2.3     46.7      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          3.0      1.0     20.0      if isinstance(obj, float):
    55         1          1.0      1.0      6.7          return 1
    56                                           
    57         2          2.0      1.0     13.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     13.3      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.001357 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        649.0    649.0     47.8      inputValue = inputPart()
    89         1         20.0     20.0      1.5      judgeValue0 = judge(inputValue[0])
    90         1         11.0     11.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      0.6      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         28.0     28.0      2.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        637.0    637.0     46.9      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

218回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[1, 0.134, 'multiply']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 9.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      2.2          1,
    16         1          2.0      2.0      2.2          234,
    17         1          1.0      1.0      1.1          543,
    18         1          1.0      1.0      1.1          766,
    19         1         13.0     13.0     14.1          44,
    20         1          1.0      1.0      1.1          5,
    21         1          1.0      1.0      1.1          100,
    22         1          1.0      1.0      1.1          20,
    23         1          1.0      1.0      1.1          111,
    24         1          1.0      1.0      1.1          371,
    25         1          1.0      1.0      1.1          0,
    26         1          1.0      1.0      1.1          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.1          0.134,
    28         1          1.0      1.0      1.1          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      1.1          "plus",
    31         1          1.0      1.0      1.1          "AAAd123482934",
    32         1          1.0      1.0      1.1          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      1.1          "multiply",
    35         1          1.0      1.0      1.1          "divide",
    36         1          1.0      1.0      1.1          "plas",
    37         1          1.0      1.0      1.1          "minos",
    38         1          2.0      2.0      2.2          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.2      length = len(elements)-1
    41                                               extraction = [
    42         1         30.0     30.0     32.6          elements[random.randint(0,length)],
    43         1         12.0     12.0     13.0          elements[random.randint(0,length)],
    44         1         10.0     10.0     10.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.1      return extraction

Total time: 1.4e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          7.0      2.3     50.0      if isinstance(obj, int):
    52         1          1.0      1.0      7.1          return 1
    53                                           
    54         2          2.0      1.0     14.3      if isinstance(obj, float):
    55         1          1.0      1.0      7.1          return 1
    56                                           
    57         1          1.0      1.0      7.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0      7.1      if isinstance(obj, str):
    61         1          1.0      1.0      7.1          return 3

Total time: 5.9e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          2.0      2.0      3.4      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      1.7      def pr(x):
    68                                                   print x
    69         1         49.0     49.0     83.1      sep()
    70                                           
    71         1          2.0      2.0      3.4      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      1.7      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      1.7      elif list[2] == "multiply":
    76         1          2.0      2.0      3.4          result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84         1          1.0      1.0      1.7      return result

Total time: 0.003463 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        253.0    253.0      7.3      inputValue = inputPart()
    89         1         13.0     13.0      0.4      judgeValue0 = judge(inputValue[0])
    90         1         13.0     13.0      0.4      judgeValue1 = judge(inputValue[1])
    91         1         16.0     16.0      0.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         79.0     79.0      2.3          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          4.0      4.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       3080.0   3080.0     88.9      print str(inputValue).decode("string-escape")
   102         1          4.0      4.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

219回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[543, 'multipy', 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          1.0      1.0      2.9          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     44.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.7          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     75.0      if isinstance(obj, int):
    52         1          1.0      1.0     25.0          return 1
    53                                           
    54         2          0.0      0.0      0.0      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000483 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     15.1      inputValue = inputPart()
    89         1          5.0      5.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      1.0      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         21.0     21.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        370.0    370.0     76.6      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

220回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plas', 'multipy', 100]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.3          1,
    16         1          2.0      2.0      2.7          234,
    17         1          1.0      1.0      1.3          543,
    18         1          1.0      1.0      1.3          766,
    19         1          1.0      1.0      1.3          44,
    20         1          1.0      1.0      1.3          5,
    21         1          1.0      1.0      1.3          100,
    22         1          1.0      1.0      1.3          20,
    23         1          1.0      1.0      1.3          111,
    24         1          1.0      1.0      1.3          371,
    25         1          1.0      1.0      1.3          0,
    26         1          1.0      1.0      1.3          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.3          0.134,
    28         1          1.0      1.0      1.3          "あいう",
    29         1          1.0      1.0      1.3          "saerf",
    30         1          1.0      1.0      1.3          "plus",
    31         1          1.0      1.0      1.3          "AAAd123482934",
    32         1          1.0      1.0      1.3          "minus",
    33         1          1.0      1.0      1.3          "devide",
    34         1          1.0      1.0      1.3          "multiply",
    35         1          1.0      1.0      1.3          "divide",
    36         1          1.0      1.0      1.3          "plas",
    37         1          1.0      1.0      1.3          "minos",
    38         1          1.0      1.0      1.3          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         27.0     27.0     36.0          elements[random.randint(0,length)],
    43         1         10.0     10.0     13.3          elements[random.randint(0,length)],
    44         1          9.0      9.0     12.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          2.0      2.0      2.7      return extraction

Total time: 0.003866 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3         10.0      3.3      0.3      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2       3842.0   1921.0     99.4      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          9.0      4.5      0.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          3.0      1.5      0.1      if isinstance(obj, str):
    61         2          2.0      1.0      0.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00504 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        139.0    139.0      2.8      inputValue = inputPart()
    89         1       3889.0   3889.0     77.2      judgeValue0 = judge(inputValue[0])
    90         1         24.0     24.0      0.5      judgeValue1 = judge(inputValue[1])
    91         1         14.0     14.0      0.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.0          output = "error"
    96                                               
    97         1         48.0     48.0      1.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        922.0    922.0     18.3      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

221回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[20, 'plas', 'minus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.5          1,
    16         1          1.0      1.0      1.5          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      1.5          766,
    19         1          1.0      1.0      1.5          44,
    20         1          1.0      1.0      1.5          5,
    21         1          1.0      1.0      1.5          100,
    22         1          1.0      1.0      1.5          20,
    23         1          1.0      1.0      1.5          111,
    24         1          1.0      1.0      1.5          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      1.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.5          0.134,
    28         1          1.0      1.0      1.5          "あいう",
    29         1          1.0      1.0      1.5          "saerf",
    30         1          1.0      1.0      1.5          "plus",
    31         1          1.0      1.0      1.5          "AAAd123482934",
    32         1          1.0      1.0      1.5          "minus",
    33         1          1.0      1.0      1.5          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      1.5          "minos",
    38         1          2.0      2.0      3.0          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.0      length = len(elements)-1
    41                                               extraction = [
    42         1         24.0     24.0     35.8          elements[random.randint(0,length)],
    43         1         11.0     11.0     16.4          elements[random.randint(0,length)],
    44         1          9.0      9.0     13.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.5      return extraction

Total time: 1.6e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     37.5      if isinstance(obj, int):
    52         1          1.0      1.0      6.2          return 1
    53                                           
    54         2          2.0      1.0     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          3.0      1.5     18.8      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     12.5      if isinstance(obj, str):
    61         2          2.0      1.0     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000883 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        128.0    128.0     14.5      inputValue = inputPart()
    89         1         11.0     11.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1         16.0     16.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1         14.0     14.0      1.6      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         33.0     33.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        677.0    677.0     76.7      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

222回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 0.134, 'plus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.4          100,
    22         1          1.0      1.0      2.4          20,
    23         1          1.0      1.0      2.4          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          1.0      1.0      2.4          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          2.0      2.0      4.8          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.8      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     40.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          4.0      4.0      9.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     57.1      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     28.6      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57         2          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000524 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         78.0     78.0     14.9      inputValue = inputPart()
    89         1         10.0     10.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         22.0     22.0      4.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        399.0    399.0     76.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

223回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 543, 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.5          1,
    16         1          2.0      2.0      3.1          234,
    17         1          1.0      1.0      1.5          543,
    18         1          1.0      1.0      1.5          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      1.5          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      1.5          20,
    23         1          1.0      1.0      1.5          111,
    24         1          1.0      1.0      1.5          371,
    25         1          1.0      1.0      1.5          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      1.5          "あいう",
    29         1          1.0      1.0      1.5          "saerf",
    30         1          1.0      1.0      1.5          "plus",
    31         1          1.0      1.0      1.5          "AAAd123482934",
    32         1          1.0      1.0      1.5          "minus",
    33         1          1.0      1.0      1.5          "devide",
    34         1          1.0      1.0      1.5          "multiply",
    35         1          1.0      1.0      1.5          "divide",
    36         1          1.0      1.0      1.5          "plas",
    37         1          1.0      1.0      1.5          "minos",
    38         1          1.0      1.0      1.5          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.1      length = len(elements)-1
    41                                               extraction = [
    42         1         23.0     23.0     35.4          elements[random.randint(0,length)],
    43         1          9.0      9.0     13.8          elements[random.randint(0,length)],
    44         1          9.0      9.0     13.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.5      return extraction

Total time: 1.3e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     38.5      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     15.4      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     15.4      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     15.4      if isinstance(obj, str):
    61         2          2.0      1.0     15.4          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000641 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        123.0    123.0     19.2      inputValue = inputPart()
    89         1         17.0     17.0      2.7      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1         13.0     13.0      2.0      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         33.0     33.0      5.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        445.0    445.0     69.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

224回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[5, 543, 111]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.6          1,
    16         1          2.0      2.0      3.1          234,
    17         1          1.0      1.0      1.6          543,
    18         1          1.0      1.0      1.6          766,
    19         1          1.0      1.0      1.6          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      1.6          100,
    22         1          1.0      1.0      1.6          20,
    23         1          1.0      1.0      1.6          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.6          0.134,
    28         1          2.0      2.0      3.1          "あいう",
    29         1          1.0      1.0      1.6          "saerf",
    30         1          1.0      1.0      1.6          "plus",
    31         1          1.0      1.0      1.6          "AAAd123482934",
    32         1          1.0      1.0      1.6          "minus",
    33         1          1.0      1.0      1.6          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      1.6          "divide",
    36         1          1.0      1.0      1.6          "plas",
    37         1          1.0      1.0      1.6          "minos",
    38         1          1.0      1.0      1.6          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.1      length = len(elements)-1
    41                                               extraction = [
    42         1         23.0     23.0     35.9          elements[random.randint(0,length)],
    43         1          9.0      9.0     14.1          elements[random.randint(0,length)],
    44         1          8.0      8.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.6      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     57.1      if isinstance(obj, int):
    52         3          3.0      1.0     42.9          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000798 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        125.0    125.0     15.7      inputValue = inputPart()
    89         1         10.0     10.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         42.0     42.0      5.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        605.0    605.0     75.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

225回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0.134, 0, 766]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.5          1,
    16         1          1.0      1.0      1.5          234,
    17         1          1.0      1.0      1.5          543,
    18         1          1.0      1.0      1.5          766,
    19         1          1.0      1.0      1.5          44,
    20         1          1.0      1.0      1.5          5,
    21         1          1.0      1.0      1.5          100,
    22         1          1.0      1.0      1.5          20,
    23         1          1.0      1.0      1.5          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      1.5          0,
    26         1          1.0      1.0      1.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.5          0.134,
    28         1          1.0      1.0      1.5          "あいう",
    29         1          1.0      1.0      1.5          "saerf",
    30         1          1.0      1.0      1.5          "plus",
    31         1          1.0      1.0      1.5          "AAAd123482934",
    32         1          1.0      1.0      1.5          "minus",
    33         1          1.0      1.0      1.5          "devide",
    34         1          1.0      1.0      1.5          "multiply",
    35         1          1.0      1.0      1.5          "divide",
    36         1          1.0      1.0      1.5          "plas",
    37         1          1.0      1.0      1.5          "minos",
    38         1          1.0      1.0      1.5          "multipy"
    39                                                   ]
    40         1          3.0      3.0      4.4      length = len(elements)-1
    41                                               extraction = [
    42         1         23.0     23.0     33.8          elements[random.randint(0,length)],
    43         1          9.0      9.0     13.2          elements[random.randint(0,length)],
    44         1          9.0      9.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.5      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     50.0      if isinstance(obj, int):
    52         2          2.0      1.0     25.0          return 1
    53                                           
    54         1          1.0      1.0     12.5      if isinstance(obj, float):
    55         1          1.0      1.0     12.5          return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000672 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        124.0    124.0     18.5      inputValue = inputPart()
    89         1         13.0     13.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.0      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          2.0      2.0      0.3      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         27.0     27.0      4.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        491.0    491.0     73.1      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

226回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['saerf', 'divide', 'あいう']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.3          1,
    16         1          2.0      2.0      2.6          234,
    17         1          1.0      1.0      1.3          543,
    18         1          1.0      1.0      1.3          766,
    19         1          1.0      1.0      1.3          44,
    20         1          1.0      1.0      1.3          5,
    21         1          1.0      1.0      1.3          100,
    22         1          1.0      1.0      1.3          20,
    23         1          1.0      1.0      1.3          111,
    24         1          1.0      1.0      1.3          371,
    25         1          1.0      1.0      1.3          0,
    26         1          1.0      1.0      1.3          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.3          0.134,
    28         1          1.0      1.0      1.3          "あいう",
    29         1          1.0      1.0      1.3          "saerf",
    30         1          1.0      1.0      1.3          "plus",
    31         1          2.0      2.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      1.3          "minus",
    33         1          1.0      1.0      1.3          "devide",
    34         1          1.0      1.0      1.3          "multiply",
    35         1          1.0      1.0      1.3          "divide",
    36         1          1.0      1.0      1.3          "plas",
    37         1          2.0      2.0      2.6          "minos",
    38         1          2.0      2.0      2.6          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         24.0     24.0     31.6          elements[random.randint(0,length)],
    43         1         11.0     11.0     14.5          elements[random.randint(0,length)],
    44         1         10.0     10.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.3      return extraction

Total time: 1.8e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     33.3      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          3.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          3.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          3.0      1.0     16.7      if isinstance(obj, str):
    61         3          3.0      1.0     16.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.001464 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        135.0    135.0      9.2      inputValue = inputPart()
    89         1         17.0     17.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1         12.0     12.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1         13.0     13.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         29.0     29.0      2.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       1255.0   1255.0     85.7      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

227回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multiply', 'multipy', 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.4          20,
    23         1          1.0      1.0      2.4          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     39.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          1.0      0.5     16.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000518 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         79.0     79.0     15.3      inputValue = inputPart()
    89         1         11.0     11.0      2.1      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.4      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         19.0     19.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        396.0    396.0     76.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

228回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minus', 'plus', 'saerf']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.4          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.4          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.8      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     38.1          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0      9.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          1.0      0.3     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          1.0      0.3     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          0.0      0.0      0.0      if isinstance(obj, str):
    61         3          2.0      0.7     28.6          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000733 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         79.0     79.0     10.8      inputValue = inputPart()
    89         1         11.0     11.0      1.5      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.0      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.0      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         23.0     23.0      3.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        603.0    603.0     82.3      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

229回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minus', 5, 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.3          1,
    16         1          1.0      1.0      2.3          234,
    17         1          1.0      1.0      2.3          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.3          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.3          111,
    24         1          1.0      1.0      2.3          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.3          0.134,
    28         1          1.0      1.0      2.3          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.3          "AAAd123482934",
    32         1          1.0      1.0      2.3          "minus",
    33         1          1.0      1.0      2.3          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.3          "plas",
    37         1          1.0      1.0      2.3          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.5      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     36.4          elements[random.randint(0,length)],
    43         1          6.0      6.0     13.6          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.3      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         2          2.0      1.0     28.6          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.002079 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         81.0     81.0      3.9      inputValue = inputPart()
    89         1         10.0     10.0      0.5      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.2      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.2      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         21.0     21.0      1.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       1956.0   1956.0     94.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

230回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['divide', 44, 26182576726545671723454736273454323454327667827345432763478372L]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      2.9          1,
    16         1          1.0      1.0      1.5          234,
    17         1          1.0      1.0      1.5          543,
    18         1          1.0      1.0      1.5          766,
    19         1          1.0      1.0      1.5          44,
    20         1          1.0      1.0      1.5          5,
    21         1          1.0      1.0      1.5          100,
    22         1          1.0      1.0      1.5          20,
    23         1          1.0      1.0      1.5          111,
    24         1          1.0      1.0      1.5          371,
    25         1          1.0      1.0      1.5          0,
    26         1          1.0      1.0      1.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.5          0.134,
    28         1          1.0      1.0      1.5          "あいう",
    29         1          1.0      1.0      1.5          "saerf",
    30         1          1.0      1.0      1.5          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      1.5          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      1.5          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      1.5          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      1.5          "multipy"
    39                                                   ]
    40         1          3.0      3.0      4.4      length = len(elements)-1
    41                                               extraction = [
    42         1         25.0     25.0     36.8          elements[random.randint(0,length)],
    43         1          9.0      9.0     13.2          elements[random.randint(0,length)],
    44         1          9.0      9.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.5      return extraction

Total time: 1.4e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     42.9      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          3.0      1.5     21.4      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     14.3      if isinstance(obj, str):
    61         1          1.0      1.0      7.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000938 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        250.0    250.0     26.7      inputValue = inputPart()
    89         1         16.0     16.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1         13.0     13.0      1.4      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         34.0     34.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        612.0    612.0     65.2      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

231回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0.134, 5, 'multipy']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.4          1,
    16         1          1.0      1.0      1.4          234,
    17         1          1.0      1.0      1.4          543,
    18         1          1.0      1.0      1.4          766,
    19         1          1.0      1.0      1.4          44,
    20         1          1.0      1.0      1.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      1.4          20,
    23         1          1.0      1.0      1.4          111,
    24         1          1.0      1.0      1.4          371,
    25         1          1.0      1.0      1.4          0,
    26         1          1.0      1.0      1.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          7.0      7.0      9.6          0.134,
    28         1          1.0      1.0      1.4          "あいう",
    29         1          1.0      1.0      1.4          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      1.4          "minus",
    33         1          1.0      1.0      1.4          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      1.4          "minos",
    38         1          2.0      2.0      2.7          "multipy"
    39                                                   ]
    40         1          3.0      3.0      4.1      length = len(elements)-1
    41                                               extraction = [
    42         1         26.0     26.0     35.6          elements[random.randint(0,length)],
    43         1         10.0     10.0     13.7          elements[random.randint(0,length)],
    44         1          8.0      8.0     11.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.4      return extraction

Total time: 1.4e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          8.0      2.7     57.1      if isinstance(obj, int):
    52         1          1.0      1.0      7.1          return 1
    53                                           
    54         2          2.0      1.0     14.3      if isinstance(obj, float):
    55         1          1.0      1.0      7.1          return 1
    56                                           
    57         1          1.0      1.0      7.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0      7.1      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 5.2e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      1.9      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      1.9      def pr(x):
    68                                                   print x
    69         1         44.0     44.0     84.6      sep()
    70                                           
    71         1          1.0      1.0      1.9      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      1.9      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      1.9      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      1.9      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          1.0      1.0      1.9          result = "Operator is invalid."
    84         1          1.0      1.0      1.9      return result

Total time: 0.000955 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        142.0    142.0     14.9      inputValue = inputPart()
    89         1         15.0     15.0      1.6      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      0.6      judgeValue1 = judge(inputValue[1])
    91         1         14.0     14.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         71.0     71.0      7.4          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          3.0      3.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        700.0    700.0     73.3      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

232回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['divide', 'devide', 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      2.6          1,
    16         1          1.0      1.0      1.3          234,
    17         1          1.0      1.0      1.3          543,
    18         1          1.0      1.0      1.3          766,
    19         1          2.0      2.0      2.6          44,
    20         1          1.0      1.0      1.3          5,
    21         1          1.0      1.0      1.3          100,
    22         1          1.0      1.0      1.3          20,
    23         1          1.0      1.0      1.3          111,
    24         1          2.0      2.0      2.6          371,
    25         1          1.0      1.0      1.3          0,
    26         1          1.0      1.0      1.3          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.3          0.134,
    28         1          1.0      1.0      1.3          "あいう",
    29         1          1.0      1.0      1.3          "saerf",
    30         1          1.0      1.0      1.3          "plus",
    31         1          2.0      2.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      1.3          "minus",
    33         1          1.0      1.0      1.3          "devide",
    34         1          1.0      1.0      1.3          "multiply",
    35         1          1.0      1.0      1.3          "divide",
    36         1          1.0      1.0      1.3          "plas",
    37         1          1.0      1.0      1.3          "minos",
    38         1          2.0      2.0      2.6          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         24.0     24.0     31.6          elements[random.randint(0,length)],
    43         1         10.0     10.0     13.2          elements[random.randint(0,length)],
    44         1         10.0     10.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.3      return extraction

Total time: 1.7e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     35.3      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          4.0      2.0     23.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          3.0      1.5     17.6      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          3.0      1.5     17.6      if isinstance(obj, str):
    61         2          1.0      0.5      5.9          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000853 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        140.0    140.0     16.4      inputValue = inputPart()
    89         1         17.0     17.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1         14.0     14.0      1.6      judgeValue1 = judge(inputValue[1])
    91         1          9.0      9.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         30.0     30.0      3.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        639.0    639.0     74.9      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

233回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multiply', 'saerf', 26182576726545671723454736273454323454327667827345432763478372L]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.5          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.5          766,
    19         1          1.0      1.0      2.5          44,
    20         1          1.0      1.0      2.5          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.5          20,
    23         1          1.0      1.0      2.5          111,
    24         1          1.0      1.0      2.5          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.5          "saerf",
    30         1          1.0      1.0      2.5          "plus",
    31         1          1.0      1.0      2.5          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          1.0      1.0      2.5          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     37.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1.2e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     33.3      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          3.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          2.0      0.7     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          2.0      0.7     16.7      if isinstance(obj, str):
    61         2          1.0      0.5      8.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000532 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         77.0     77.0     14.5      inputValue = inputPart()
    89         1         10.0     10.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        407.0    407.0     76.5      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

234回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plas', 234, 111]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      2.9          1,
    16         1          3.0      3.0      4.4          234,
    17         1          1.0      1.0      1.5          543,
    18         1          1.0      1.0      1.5          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      1.5          5,
    21         1          1.0      1.0      1.5          100,
    22         1          2.0      2.0      2.9          20,
    23         1          1.0      1.0      1.5          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      1.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.5          0.134,
    28         1          1.0      1.0      1.5          "あいう",
    29         1          1.0      1.0      1.5          "saerf",
    30         1          1.0      1.0      1.5          "plus",
    31         1          1.0      1.0      1.5          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      1.5          "multiply",
    35         1          1.0      1.0      1.5          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      1.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      1.5      length = len(elements)-1
    41                                               extraction = [
    42         1         19.0     19.0     27.9          elements[random.randint(0,length)],
    43         1         16.0     16.0     23.5          elements[random.randint(0,length)],
    44         1         10.0     10.0     14.7          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.5      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     50.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          2.0      2.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          2.0      2.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     10.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000882 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        155.0    155.0     17.6      inputValue = inputPart()
    89         1         16.0     16.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         48.0     48.0      5.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        644.0    644.0     73.0      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

235回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plus', 234, 234]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 8.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      2.4          1,
    16         1          2.0      2.0      2.4          234,
    17         1          2.0      2.0      2.4          543,
    18         1          1.0      1.0      1.2          766,
    19         1          1.0      1.0      1.2          44,
    20         1          1.0      1.0      1.2          5,
    21         1          1.0      1.0      1.2          100,
    22         1          1.0      1.0      1.2          20,
    23         1          1.0      1.0      1.2          111,
    24         1          1.0      1.0      1.2          371,
    25         1          1.0      1.0      1.2          0,
    26         1          1.0      1.0      1.2          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.2          0.134,
    28         1          1.0      1.0      1.2          "あいう",
    29         1          1.0      1.0      1.2          "saerf",
    30         1          1.0      1.0      1.2          "plus",
    31         1          1.0      1.0      1.2          "AAAd123482934",
    32         1          1.0      1.0      1.2          "minus",
    33         1          1.0      1.0      1.2          "devide",
    34         1          1.0      1.0      1.2          "multiply",
    35         1          1.0      1.0      1.2          "divide",
    36         1          1.0      1.0      1.2          "plas",
    37         1          1.0      1.0      1.2          "minos",
    38         1          2.0      2.0      2.4          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         28.0     28.0     34.1          elements[random.randint(0,length)],
    43         1         12.0     12.0     14.6          elements[random.randint(0,length)],
    44         1         11.0     11.0     13.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.2      return extraction

Total time: 1.7e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3         10.0      3.3     58.8      if isinstance(obj, int):
    52         2          1.0      0.5      5.9          return 1
    53                                           
    54         1          3.0      3.0     17.6      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0      5.9      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0      5.9      if isinstance(obj, str):
    61         1          1.0      1.0      5.9          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.002528 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        154.0    154.0      6.1      inputValue = inputPart()
    89         1        921.0    921.0     36.4      judgeValue0 = judge(inputValue[0])
    90         1         13.0     13.0      0.5      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      0.3      judgeValue2 = judge(inputValue[2])
    92         1          2.0      2.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.0          output = "error"
    96                                               
    97         1         46.0     46.0      1.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       1379.0   1379.0     54.5      print str(inputValue).decode("string-escape")
   102         1          4.0      4.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

236回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minos', 'multiply', 'minus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      3.0          1,
    16         1          1.0      1.0      1.5          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      1.5          766,
    19         1          1.0      1.0      1.5          44,
    20         1          1.0      1.0      1.5          5,
    21         1          1.0      1.0      1.5          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      1.5          111,
    24         1          1.0      1.0      1.5          371,
    25         1          1.0      1.0      1.5          0,
    26         1          1.0      1.0      1.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.5          0.134,
    28         1          1.0      1.0      1.5          "あいう",
    29         1          1.0      1.0      1.5          "saerf",
    30         1          1.0      1.0      1.5          "plus",
    31         1          1.0      1.0      1.5          "AAAd123482934",
    32         1          1.0      1.0      1.5          "minus",
    33         1          1.0      1.0      1.5          "devide",
    34         1          1.0      1.0      1.5          "multiply",
    35         1          1.0      1.0      1.5          "divide",
    36         1          1.0      1.0      1.5          "plas",
    37         1          1.0      1.0      1.5          "minos",
    38         1          2.0      2.0      3.0          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.0      length = len(elements)-1
    41                                               extraction = [
    42         1         23.0     23.0     34.3          elements[random.randint(0,length)],
    43         1          9.0      9.0     13.4          elements[random.randint(0,length)],
    44         1          8.0      8.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.5      return extraction

Total time: 1.9e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          7.0      2.3     36.8      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          3.0      1.0     15.8      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          3.0      1.0     15.8      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          3.0      1.0     15.8      if isinstance(obj, str):
    61         3          3.0      1.0     15.8          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000991 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        122.0    122.0     12.3      inputValue = inputPart()
    89         1         17.0     17.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1         12.0     12.0      1.2      judgeValue1 = judge(inputValue[1])
    91         1         12.0     12.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1         45.0     45.0      4.5      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         35.0     35.0      3.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        744.0    744.0     75.1      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

237回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0, 1, 'minos']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 0.000101 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.0          1,
    16         1         26.0     26.0     25.7          234,
    17         1          2.0      2.0      2.0          543,
    18         1          1.0      1.0      1.0          766,
    19         1          1.0      1.0      1.0          44,
    20         1          1.0      1.0      1.0          5,
    21         1          1.0      1.0      1.0          100,
    22         1          1.0      1.0      1.0          20,
    23         1          1.0      1.0      1.0          111,
    24         1          1.0      1.0      1.0          371,
    25         1          1.0      1.0      1.0          0,
    26         1          1.0      1.0      1.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.0          0.134,
    28         1          1.0      1.0      1.0          "あいう",
    29         1          1.0      1.0      1.0          "saerf",
    30         1          1.0      1.0      1.0          "plus",
    31         1          1.0      1.0      1.0          "AAAd123482934",
    32         1          1.0      1.0      1.0          "minus",
    33         1          1.0      1.0      1.0          "devide",
    34         1          1.0      1.0      1.0          "multiply",
    35         1          1.0      1.0      1.0          "divide",
    36         1          1.0      1.0      1.0          "plas",
    37         1          1.0      1.0      1.0          "minos",
    38         1          2.0      2.0      2.0          "multipy"
    39                                                   ]
    40         1          3.0      3.0      3.0      length = len(elements)-1
    41                                               extraction = [
    42         1         26.0     26.0     25.7          elements[random.randint(0,length)],
    43         1         11.0     11.0     10.9          elements[random.randint(0,length)],
    44         1          9.0      9.0      8.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.0      return extraction

Total time: 1.1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     54.5      if isinstance(obj, int):
    52         2          1.0      0.5      9.1          return 1
    53                                           
    54         1          1.0      1.0      9.1      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0      9.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0      9.1      if isinstance(obj, str):
    61         1          1.0      1.0      9.1          return 3

Total time: 5.3e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      1.9      def sep():
    66                                                   print "--------------------------------------"
    67         1          2.0      2.0      3.8      def pr(x):
    68                                                   print x
    69         1         39.0     39.0     73.6      sep()
    70                                           
    71         1          4.0      4.0      7.5      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      1.9      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      1.9      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          2.0      2.0      3.8      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          1.0      1.0      1.9          result = "Operator is invalid."
    84         1          2.0      2.0      3.8      return result

Total time: 0.0024 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        164.0    164.0      6.8      inputValue = inputPart()
    89         1         11.0     11.0      0.5      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      0.3      judgeValue1 = judge(inputValue[1])
    91         1         16.0     16.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         88.0     88.0      3.7          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          5.0      5.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       2105.0   2105.0     87.7      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

238回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 5, 'minos']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.4          1,
    16         1          1.0      1.0      1.4          234,
    17         1          1.0      1.0      1.4          543,
    18         1          1.0      1.0      1.4          766,
    19         1          1.0      1.0      1.4          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      1.4          100,
    22         1          1.0      1.0      1.4          20,
    23         1          1.0      1.0      1.4          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.4          0.134,
    28         1          1.0      1.0      1.4          "あいう",
    29         1          1.0      1.0      1.4          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      1.4          "minus",
    33         1          1.0      1.0      1.4          "devide",
    34         1          1.0      1.0      1.4          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      1.4          "minos",
    38         1          1.0      1.0      1.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      1.4      length = len(elements)-1
    41                                               extraction = [
    42         1         30.0     30.0     42.3          elements[random.randint(0,length)],
    43         1         13.0     13.0     18.3          elements[random.randint(0,length)],
    44         1         10.0     10.0     14.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.4      return extraction

Total time: 1.4e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     28.6      if isinstance(obj, int):
    52         1          1.0      1.0      7.1          return 1
    53                                           
    54         2          3.0      1.5     21.4      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          3.0      1.5     21.4      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     14.3      if isinstance(obj, str):
    61         2          1.0      0.5      7.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00149 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        111.0    111.0      7.4      inputValue = inputPart()
    89         1         17.0     17.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      0.5      judgeValue1 = judge(inputValue[1])
    91         1         11.0     11.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         35.0     35.0      2.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       1305.0   1305.0     87.6      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

239回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0, 'devide', 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 0.000966 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      0.1          1,
    16         1          2.0      2.0      0.2          234,
    17         1          1.0      1.0      0.1          543,
    18         1          1.0      1.0      0.1          766,
    19         1          1.0      1.0      0.1          44,
    20         1          1.0      1.0      0.1          5,
    21         1          1.0      1.0      0.1          100,
    22         1          1.0      1.0      0.1          20,
    23         1          1.0      1.0      0.1          111,
    24         1          1.0      1.0      0.1          371,
    25         1          1.0      1.0      0.1          0,
    26         1          1.0      1.0      0.1          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      0.1          0.134,
    28         1          1.0      1.0      0.1          "あいう",
    29         1          1.0      1.0      0.1          "saerf",
    30         1          1.0      1.0      0.1          "plus",
    31         1          1.0      1.0      0.1          "AAAd123482934",
    32         1          1.0      1.0      0.1          "minus",
    33         1          1.0      1.0      0.1          "devide",
    34         1          1.0      1.0      0.1          "multiply",
    35         1          1.0      1.0      0.1          "divide",
    36         1          1.0      1.0      0.1          "plas",
    37         1          1.0      1.0      0.1          "minos",
    38         1          2.0      2.0      0.2          "multipy"
    39                                                   ]
    40         1          3.0      3.0      0.3      length = len(elements)-1
    41                                               extraction = [
    42         1         28.0     28.0      2.9          elements[random.randint(0,length)],
    43         1        855.0    855.0     88.5          elements[random.randint(0,length)],
    44         1         53.0     53.0      5.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      0.1      return extraction

Total time: 2e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3         12.0      4.0     60.0      if isinstance(obj, int):
    52         1          1.0      1.0      5.0          return 1
    53                                           
    54         2          3.0      1.5     15.0      if isinstance(obj, float):
    55         1          1.0      1.0      5.0          return 1
    56                                           
    57         1          2.0      2.0     10.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0      5.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.001847 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1       1119.0   1119.0     60.6      inputValue = inputPart()
    89         1         18.0     18.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1         21.0     21.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1         14.0     14.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         58.0     58.0      3.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        613.0    613.0     33.2      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

240回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plas', 1, 'multipy']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.4          100,
    22         1          1.0      1.0      2.4          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     35.7          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0      9.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     50.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     12.5      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000554 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         81.0     81.0     14.6      inputValue = inputPart()
    89         1         11.0     11.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         24.0     24.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        423.0    423.0     76.4      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

241回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plus', 'plus', 44]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.4          100,
    22         1          1.0      1.0      2.4          20,
    23         1          1.0      1.0      2.4          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          1.0      1.0      2.4          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     40.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          4.0      4.0      9.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     50.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     12.5      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000544 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         80.0     80.0     14.7      inputValue = inputPart()
    89         1         10.0     10.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         22.0     22.0      4.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        418.0    418.0     76.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

242回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multipy', 0, 'minus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.2          1,
    16         1          1.0      1.0      2.2          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.2          766,
    19         1          1.0      1.0      2.2          44,
    20         1          1.0      1.0      2.2          5,
    21         1          1.0      1.0      2.2          100,
    22         1          1.0      1.0      2.2          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.2          0,
    26         1          1.0      1.0      2.2          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.2          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.2          "plus",
    31         1          1.0      1.0      2.2          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.2          "multiply",
    35         1          1.0      1.0      2.2          "divide",
    36         1          1.0      1.0      2.2          "plas",
    37         1          1.0      1.0      2.2          "minos",
    38         1          1.0      1.0      2.2          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.3      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     34.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     10.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     10.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.2      return extraction

Total time: 1.1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     27.3      if isinstance(obj, int):
    52         1          1.0      1.0      9.1          return 1
    53                                           
    54         2          2.0      1.0     18.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     18.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     18.2      if isinstance(obj, str):
    61         2          1.0      0.5      9.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00053 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         79.0     79.0     14.9      inputValue = inputPart()
    89         1         10.0     10.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         22.0     22.0      4.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        405.0    405.0     76.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

243回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[111, 234, 'minos']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.3          1,
    16         1          1.0      1.0      2.3          234,
    17         1          1.0      1.0      2.3          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.3          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.3          111,
    24         1          1.0      1.0      2.3          371,
    25         1          1.0      1.0      2.3          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.3          "あいう",
    29         1          1.0      1.0      2.3          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.3          "minus",
    33         1          1.0      1.0      2.3          "devide",
    34         1          1.0      1.0      2.3          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.3          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.3      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     39.5          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.0          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.6          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61         1          1.0      1.0     14.3          return 3

Total time: 2.5e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          0.0      0.0      0.0      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      4.0      def pr(x):
    68                                                   print x
    69         1         20.0     20.0     80.0      sep()
    70                                           
    71         1          1.0      1.0      4.0      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          0.0      0.0      0.0      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      4.0      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          0.0      0.0      0.0      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          1.0      1.0      4.0          result = "Operator is invalid."
    84         1          1.0      1.0      4.0      return result

Total time: 0.000558 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         81.0     81.0     14.5      inputValue = inputPart()
    89         1          6.0      6.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.7      judgeValue1 = judge(inputValue[1])
    91         1          9.0      9.0      1.6      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         37.0     37.0      6.6          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        418.0    418.0     74.9      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

244回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[371, 1, 234]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.2          1,
    16         1          1.0      1.0      2.2          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.2          44,
    20         1          1.0      1.0      2.2          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.2          20,
    23         1          1.0      1.0      2.2          111,
    24         1          1.0      1.0      2.2          371,
    25         1          1.0      1.0      2.2          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.2          "saerf",
    30         1          1.0      1.0      2.2          "plus",
    31         1          1.0      1.0      2.2          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.2          "multiply",
    35         1          1.0      1.0      2.2          "divide",
    36         1          1.0      1.0      2.2          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.2          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.2      length = len(elements)-1
    41                                               extraction = [
    42         1         19.0     19.0     41.3          elements[random.randint(0,length)],
    43         1          6.0      6.0     13.0          elements[random.randint(0,length)],
    44         1          4.0      4.0      8.7          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.2      return extraction

Total time: 2e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7    100.0      if isinstance(obj, int):
    52         3          0.0      0.0      0.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000582 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         84.0     84.0     14.4      inputValue = inputPart()
    89         1          6.0      6.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.7      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         25.0     25.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        456.0    456.0     78.4      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

245回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[766, 'あいう', 26182576726545671723454736273454323454327667827345432763478372L]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.2          1,
    16         1          1.0      1.0      2.2          234,
    17         1          1.0      1.0      2.2          543,
    18         1          1.0      1.0      2.2          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.2          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.2          371,
    25         1          1.0      1.0      2.2          0,
    26         1          1.0      1.0      2.2          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.2          "saerf",
    30         1          1.0      1.0      2.2          "plus",
    31         1          1.0      1.0      2.2          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.2          "multiply",
    35         1          1.0      1.0      2.2          "divide",
    36         1          1.0      1.0      2.2          "plas",
    37         1          1.0      1.0      2.2          "minos",
    38         1          1.0      1.0      2.2          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.3      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     37.0          elements[random.randint(0,length)],
    43         1          6.0      6.0     13.0          elements[random.randint(0,length)],
    44         1          5.0      5.0     10.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         1          1.0      1.0     12.5          return 1
    53                                           
    54         2          2.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     12.5      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.002537 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         80.0     80.0      3.2      inputValue = inputPart()
    89         1          6.0      6.0      0.2      judgeValue0 = judge(inputValue[0])
    90         1          9.0      9.0      0.4      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      0.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      0.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       2406.0   2406.0     94.8      print str(inputValue).decode("string-escape")
   102         1          9.0      9.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

246回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[766, 0.134, 'divide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.6          5,
    21         1          1.0      1.0      2.6          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         1          1.0      1.0     14.3          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55         1          1.0      1.0     14.3          return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          1.0      1.0     14.3          return 3

Total time: 2.5e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      4.0      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      4.0      def pr(x):
    68                                                   print x
    69         1         19.0     19.0     76.0      sep()
    70                                           
    71         1          1.0      1.0      4.0      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      4.0      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          0.0      0.0      0.0      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      4.0      elif list[2] == "divide":
    78         1          0.0      0.0      0.0          if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81         1          1.0      1.0      4.0              result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84         1          0.0      0.0      0.0      return result

Total time: 0.001045 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         75.0     75.0      7.2      inputValue = inputPart()
    89         1          5.0      5.0      0.5      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      0.6      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         37.0     37.0      3.5          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        912.0    912.0     87.3      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

247回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[766, 0.134, 0]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.8      length = len(elements)-1
    41                                               extraction = [
    42         1         18.0     18.0     42.9          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.3          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     60.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     20.0      if isinstance(obj, float):
    55         1          1.0      1.0     20.0          return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000534 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         80.0     80.0     15.0      inputValue = inputPart()
    89         1          6.0      6.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.6      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         21.0     21.0      3.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        416.0    416.0     77.9      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

248回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multipy', 'AAAd123482934', 'plas']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.4          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.4          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     38.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          4.0      4.0      9.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     50.0      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          1.0      0.3     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          0.0      0.0      0.0      if isinstance(obj, str):
    61         3          1.0      0.3     25.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000503 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         77.0     77.0     15.3      inputValue = inputPart()
    89         1         10.0     10.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.4      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         18.0     18.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        383.0    383.0     76.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

249回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[111, 26182576726545671723454736273454323454327667827345432763478372L, 'multiply']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.3          234,
    17         1          1.0      1.0      2.3          543,
    18         1          1.0      1.0      2.3          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.3          100,
    22         1          1.0      1.0      2.3          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.3          0,
    26         1          1.0      1.0      2.3          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.3          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.3          "plus",
    31         1          1.0      1.0      2.3          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.3          "multiply",
    35         1          1.0      1.0      2.3          "divide",
    36         1          1.0      1.0      2.3          "plas",
    37         1          1.0      1.0      2.3          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.5      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     38.6          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.4          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1.3e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     30.8      if isinstance(obj, int):
    52         1          1.0      1.0      7.7          return 1
    53                                           
    54         2          2.0      1.0     15.4      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          3.0      1.5     23.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     15.4      if isinstance(obj, str):
    61         1          1.0      1.0      7.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000526 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         80.0     80.0     15.2      inputValue = inputPart()
    89         1          6.0      6.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         19.0     19.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        402.0    402.0     76.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

250回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plus', 'minos', 0]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.4          1,
    16         1          2.0      2.0      2.7          234,
    17         1          1.0      1.0      1.4          543,
    18         1          1.0      1.0      1.4          766,
    19         1          1.0      1.0      1.4          44,
    20         1          1.0      1.0      1.4          5,
    21         1          1.0      1.0      1.4          100,
    22         1          1.0      1.0      1.4          20,
    23         1          1.0      1.0      1.4          111,
    24         1          1.0      1.0      1.4          371,
    25         1          1.0      1.0      1.4          0,
    26         1          1.0      1.0      1.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.4          0.134,
    28         1          1.0      1.0      1.4          "あいう",
    29         1          1.0      1.0      1.4          "saerf",
    30         1          1.0      1.0      1.4          "plus",
    31         1          1.0      1.0      1.4          "AAAd123482934",
    32         1          1.0      1.0      1.4          "minus",
    33         1          1.0      1.0      1.4          "devide",
    34         1          1.0      1.0      1.4          "multiply",
    35         1          1.0      1.0      1.4          "divide",
    36         1          1.0      1.0      1.4          "plas",
    37         1          1.0      1.0      1.4          "minos",
    38         1          2.0      2.0      2.7          "multipy"
    39                                                   ]
    40         1          3.0      3.0      4.1      length = len(elements)-1
    41                                               extraction = [
    42         1         25.0     25.0     33.8          elements[random.randint(0,length)],
    43         1         10.0     10.0     13.5          elements[random.randint(0,length)],
    44         1          9.0      9.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.4      return extraction

Total time: 1.5e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     40.0      if isinstance(obj, int):
    52         1          1.0      1.0      6.7          return 1
    53                                           
    54         2          2.0      1.0     13.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     13.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     13.3      if isinstance(obj, str):
    61         2          2.0      1.0     13.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00088 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        135.0    135.0     15.3      inputValue = inputPart()
    89         1         18.0     18.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1         13.0     13.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         36.0     36.0      4.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        666.0    666.0     75.7      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

251回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 0.134, 'minus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.3          1,
    16         1          1.0      1.0      2.3          234,
    17         1          1.0      1.0      2.3          543,
    18         1          1.0      1.0      2.3          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.3          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.3          111,
    24         1          1.0      1.0      2.3          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.3          0.134,
    28         1          1.0      1.0      2.3          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.3          "plus",
    31         1          1.0      1.0      2.3          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.3          "multiply",
    35         1          1.0      1.0      2.3          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.3      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     37.2          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.0          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.6          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.3      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     57.1      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     28.6      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57         2          1.0      0.5     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000556 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         84.0     84.0     15.1      inputValue = inputPart()
    89         1         10.0     10.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.4      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        426.0    426.0     76.6      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

252回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[234, 111, 'saerf']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.2          1,
    16         1          2.0      2.0      4.4          234,
    17         1          1.0      1.0      2.2          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.2          44,
    20         1          1.0      1.0      2.2          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.2          20,
    23         1          1.0      1.0      2.2          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.2          0,
    26         1          1.0      1.0      2.2          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.2          "saerf",
    30         1          1.0      1.0      2.2          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.2          "minus",
    33         1          1.0      1.0      2.2          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.2          "plas",
    37         1          1.0      1.0      2.2          "minos",
    38         1          1.0      1.0      2.2          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.2      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     33.3          elements[random.randint(0,length)],
    43         1          6.0      6.0     13.3          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.2      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         2          1.0      0.5     16.7          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     16.7      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 2.5e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          0.0      0.0      0.0      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      4.0      def pr(x):
    68                                                   print x
    69         1         20.0     20.0     80.0      sep()
    70                                           
    71         1          1.0      1.0      4.0      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          0.0      0.0      0.0      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      4.0      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          0.0      0.0      0.0      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          1.0      1.0      4.0          result = "Operator is invalid."
    84         1          1.0      1.0      4.0      return result

Total time: 0.000544 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         81.0     81.0     14.9      inputValue = inputPart()
    89         1          6.0      6.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1         10.0     10.0      1.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         38.0     38.0      7.0          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        400.0    400.0     73.5      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

253回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multipy', 'multipy', 543]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.2          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.2          766,
    19         1          1.0      1.0      2.2          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.2          100,
    22         1          1.0      1.0      2.2          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.2          371,
    25         1          1.0      1.0      2.2          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.2          "あいう",
    29         1          1.0      1.0      2.2          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.2          "minus",
    33         1          1.0      1.0      2.2          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.2          "divide",
    36         1          1.0      1.0      2.2          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.2          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.2      length = len(elements)-1
    41                                               extraction = [
    42         1         18.0     18.0     40.0          elements[random.randint(0,length)],
    43         1          6.0      6.0     13.3          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.2      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     66.7      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     16.7      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000606 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         87.0     87.0     14.4      inputValue = inputPart()
    89         1         11.0     11.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.2      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         27.0     27.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        466.0    466.0     76.9      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

254回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plus', 'multipy', 'saerf']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.1          1,
    16         1          1.0      1.0      2.1          234,
    17         1          1.0      1.0      2.1          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.1          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.1          20,
    23         1          1.0      1.0      2.1          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.1          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.1          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.1          "saerf",
    30         1          1.0      1.0      2.1          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.1          "devide",
    34         1          1.0      1.0      2.1          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.1          "minos",
    38         1          1.0      1.0      2.1          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.3      length = len(elements)-1
    41                                               extraction = [
    42         1         18.0     18.0     38.3          elements[random.randint(0,length)],
    43         1          6.0      6.0     12.8          elements[random.randint(0,length)],
    44         1          6.0      6.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.1      return extraction

Total time: 1.1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     36.4      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     18.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          2.0      0.7     18.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          2.0      0.7     18.2      if isinstance(obj, str):
    61         3          1.0      0.3      9.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.002745 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         87.0     87.0      3.2      inputValue = inputPart()
    89         1         11.0     11.0      0.4      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      0.3      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      0.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.0          output = "error"
    96                                               
    97         1         26.0     26.0      0.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       2601.0   2601.0     94.8      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

255回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 'saerf', 'saerf']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.1          1,
    16         1          1.0      1.0      2.1          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.1          44,
    20         1          1.0      1.0      2.1          5,
    21         1          1.0      1.0      2.1          100,
    22         1          1.0      1.0      2.1          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.1          371,
    25         1          1.0      1.0      2.1          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.1          "あいう",
    29         1          1.0      1.0      2.1          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.1          "minus",
    33         1          1.0      1.0      2.1          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.1          "divide",
    36         1          1.0      1.0      2.1          "plas",
    37         1          1.0      1.0      2.1          "minos",
    38         1          1.0      1.0      2.1          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.3      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     36.2          elements[random.randint(0,length)],
    43         1          6.0      6.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     10.6          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.1      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     30.0      if isinstance(obj, int):
    52         1          1.0      1.0     10.0          return 1
    53                                           
    54         2          2.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     10.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     20.0      if isinstance(obj, str):
    61         2          1.0      0.5     10.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000868 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         83.0     83.0      9.6      inputValue = inputPart()
    89         1          6.0      6.0      0.7      judgeValue0 = judge(inputValue[0])
    90         1          9.0      9.0      1.0      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         23.0     23.0      2.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        736.0    736.0     84.8      print str(inputValue).decode("string-escape")
   102         1          4.0      4.0      0.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

256回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 371, 'saerf']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 0.000109 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          6.0      6.0      5.5          1,
    16         1          4.0      4.0      3.7          234,
    17         1          1.0      1.0      0.9          543,
    18         1          1.0      1.0      0.9          766,
    19         1          2.0      2.0      1.8          44,
    20         1          1.0      1.0      0.9          5,
    21         1          1.0      1.0      0.9          100,
    22         1          1.0      1.0      0.9          20,
    23         1          1.0      1.0      0.9          111,
    24         1          1.0      1.0      0.9          371,
    25         1          1.0      1.0      0.9          0,
    26         1          1.0      1.0      0.9          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      0.9          0.134,
    28         1          1.0      1.0      0.9          "あいう",
    29         1          1.0      1.0      0.9          "saerf",
    30         1          1.0      1.0      0.9          "plus",
    31         1          1.0      1.0      0.9          "AAAd123482934",
    32         1          1.0      1.0      0.9          "minus",
    33         1          1.0      1.0      0.9          "devide",
    34         1          1.0      1.0      0.9          "multiply",
    35         1          1.0      1.0      0.9          "divide",
    36         1          1.0      1.0      0.9          "plas",
    37         1          1.0      1.0      0.9          "minos",
    38         1          5.0      5.0      4.6          "multipy"
    39                                                   ]
    40         1          4.0      4.0      3.7      length = len(elements)-1
    41                                               extraction = [
    42         1         40.0     40.0     36.7          elements[random.randint(0,length)],
    43         1         15.0     15.0     13.8          elements[random.randint(0,length)],
    44         1         12.0     12.0     11.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      0.9      return extraction

Total time: 2.4e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3         11.0      3.7     45.8      if isinstance(obj, int):
    52         1          1.0      1.0      4.2          return 1
    53                                           
    54         2          4.0      2.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          4.0      2.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0      8.3      if isinstance(obj, str):
    61         2          2.0      1.0      8.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.005173 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1       4182.0   4182.0     80.8      inputValue = inputPart()
    89         1         30.0     30.0      0.6      judgeValue0 = judge(inputValue[0])
    90         1         13.0     13.0      0.3      judgeValue1 = judge(inputValue[1])
    91         1         17.0     17.0      0.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.0          output = "error"
    96                                               
    97         1         56.0     56.0      1.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        869.0    869.0     16.8      print str(inputValue).decode("string-escape")
   102         1          4.0      4.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

257回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[371, 1, 0]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.2          1,
    16         1          1.0      1.0      2.2          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.2          766,
    19         1          1.0      1.0      2.2          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.2          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.2          371,
    25         1          1.0      1.0      2.2          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.2          0.134,
    28         1          1.0      1.0      2.2          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.2          "AAAd123482934",
    32         1          1.0      1.0      2.2          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.2          "multiply",
    35         1          1.0      1.0      2.2          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.2          "minos",
    38         1          1.0      1.0      2.2          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.2      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     37.8          elements[random.randint(0,length)],
    43         1          6.0      6.0     13.3          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.2      return extraction

Total time: 2e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          1.0      0.3     50.0      if isinstance(obj, int):
    52         3          1.0      0.3     50.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000556 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         85.0     85.0     15.3      inputValue = inputPart()
    89         1          7.0      7.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        430.0    430.0     77.3      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

258回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[20, 'minus', 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.1          234,
    17         1          1.0      1.0      2.1          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.1          44,
    20         1          1.0      1.0      2.1          5,
    21         1          1.0      1.0      2.1          100,
    22         1          1.0      1.0      2.1          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.1          0,
    26         1          1.0      1.0      2.1          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.1          "あいう",
    29         1          1.0      1.0      2.1          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.1          "minus",
    33         1          1.0      1.0      2.1          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.1          "divide",
    36         1          1.0      1.0      2.1          "plas",
    37         1          1.0      1.0      2.1          "minos",
    38         1          1.0      1.0      2.1          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.1      length = len(elements)-1
    41                                               extraction = [
    42         1         18.0     18.0     38.3          elements[random.randint(0,length)],
    43         1          6.0      6.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     10.6          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.1      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     25.0      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57         1          1.0      1.0     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     12.5      if isinstance(obj, str):
    61         1          1.0      1.0     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00058 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         86.0     86.0     14.8      inputValue = inputPart()
    89         1          7.0      7.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1         10.0     10.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.0      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         26.0     26.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        443.0    443.0     76.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

259回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['divide', 371, 'AAAd123482934']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.4          1,
    16         1          1.0      1.0      1.4          234,
    17         1          1.0      1.0      1.4          543,
    18         1          1.0      1.0      1.4          766,
    19         1          1.0      1.0      1.4          44,
    20         1          1.0      1.0      1.4          5,
    21         1          1.0      1.0      1.4          100,
    22         1          1.0      1.0      1.4          20,
    23         1          1.0      1.0      1.4          111,
    24         1          1.0      1.0      1.4          371,
    25         1          1.0      1.0      1.4          0,
    26         1          1.0      1.0      1.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.4          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      1.4          "saerf",
    30         1          1.0      1.0      1.4          "plus",
    31         1          1.0      1.0      1.4          "AAAd123482934",
    32         1          1.0      1.0      1.4          "minus",
    33         1          1.0      1.0      1.4          "devide",
    34         1          1.0      1.0      1.4          "multiply",
    35         1          1.0      1.0      1.4          "divide",
    36         1          1.0      1.0      1.4          "plas",
    37         1          1.0      1.0      1.4          "minos",
    38         1          2.0      2.0      2.7          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         26.0     26.0     35.6          elements[random.randint(0,length)],
    43         1         11.0     11.0     15.1          elements[random.randint(0,length)],
    44         1          9.0      9.0     12.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.4      return extraction

Total time: 1.5e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     33.3      if isinstance(obj, int):
    52         1          1.0      1.0      6.7          return 1
    53                                           
    54         2          4.0      2.0     26.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     13.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     13.3      if isinstance(obj, str):
    61         2          1.0      0.5      6.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000796 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        138.0    138.0     17.3      inputValue = inputPart()
    89         1         16.0     16.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.0      judgeValue1 = judge(inputValue[1])
    91         1         13.0     13.0      1.6      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         28.0     28.0      3.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        590.0    590.0     74.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

260回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 'minus', 'plas']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.5          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.5          766,
    19         1          1.0      1.0      2.5          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.5          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.5          371,
    25         1          1.0      1.0      2.5          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.5          0.134,
    28         1          1.0      1.0      2.5          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.5          "AAAd123482934",
    32         1          1.0      1.0      2.5          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     42.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1.2e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     33.3      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          3.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          3.0      1.0     25.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          1.0      0.3      8.3      if isinstance(obj, str):
    61         3          1.0      0.3      8.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000854 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         85.0     85.0     10.0      inputValue = inputPart()
    89         1         11.0     11.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         24.0     24.0      2.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        716.0    716.0     83.8      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

261回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['AAAd123482934', 'plas', 'AAAd123482934']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.3          1,
    16         1          1.0      1.0      2.3          234,
    17         1          1.0      1.0      2.3          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.3          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.3          111,
    24         1          1.0      1.0      2.3          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.3          0.134,
    28         1          1.0      1.0      2.3          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.3          "plus",
    31         1          1.0      1.0      2.3          "AAAd123482934",
    32         1          1.0      1.0      2.3          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.3          "multiply",
    35         1          1.0      1.0      2.3          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.3      length = len(elements)-1
    41                                               extraction = [
    42         1         19.0     19.0     43.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.4          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1.1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     36.4      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     18.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          2.0      0.7     18.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          2.0      0.7     18.2      if isinstance(obj, str):
    61         3          1.0      0.3      9.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000583 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         86.0     86.0     14.8      inputValue = inputPart()
    89         1         11.0     11.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.2      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         23.0     23.0      3.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        445.0    445.0     76.3      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

262回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[111, 0.134, 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.6          1,
    16         1          1.0      1.0      1.6          234,
    17         1          1.0      1.0      1.6          543,
    18         1          1.0      1.0      1.6          766,
    19         1          1.0      1.0      1.6          44,
    20         1          1.0      1.0      1.6          5,
    21         1          1.0      1.0      1.6          100,
    22         1          1.0      1.0      1.6          20,
    23         1          1.0      1.0      1.6          111,
    24         1          1.0      1.0      1.6          371,
    25         1          1.0      1.0      1.6          0,
    26         1          2.0      2.0      3.2          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.6          0.134,
    28         1          1.0      1.0      1.6          "あいう",
    29         1          1.0      1.0      1.6          "saerf",
    30         1          1.0      1.0      1.6          "plus",
    31         1          1.0      1.0      1.6          "AAAd123482934",
    32         1          1.0      1.0      1.6          "minus",
    33         1          1.0      1.0      1.6          "devide",
    34         1          1.0      1.0      1.6          "multiply",
    35         1          1.0      1.0      1.6          "divide",
    36         1          2.0      2.0      3.2          "plas",
    37         1          1.0      1.0      1.6          "minos",
    38         1          2.0      2.0      3.2          "multipy"
    39                                                   ]
    40         1          3.0      3.0      4.8      length = len(elements)-1
    41                                               extraction = [
    42         1         21.0     21.0     33.3          elements[random.randint(0,length)],
    43         1          6.0      6.0      9.5          elements[random.randint(0,length)],
    44         1          6.0      6.0      9.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     57.1      if isinstance(obj, int):
    52         1          1.0      1.0     14.3          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55         2          1.0      0.5     14.3          return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000605 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        120.0    120.0     19.8      inputValue = inputPart()
    89         1          7.0      7.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         22.0     22.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        441.0    441.0     72.9      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

263回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[234, 'minus', 26182576726545671723454736273454323454327667827345432763478372L]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 5.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.8          1,
    16         1          1.0      1.0      1.8          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      1.8          766,
    19         1          1.0      1.0      1.8          44,
    20         1          1.0      1.0      1.8          5,
    21         1          2.0      2.0      3.6          100,
    22         1          1.0      1.0      1.8          20,
    23         1          1.0      1.0      1.8          111,
    24         1          1.0      1.0      1.8          371,
    25         1          1.0      1.0      1.8          0,
    26         1          2.0      2.0      3.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.8          0.134,
    28         1          1.0      1.0      1.8          "あいう",
    29         1          1.0      1.0      1.8          "saerf",
    30         1          1.0      1.0      1.8          "plus",
    31         1          1.0      1.0      1.8          "AAAd123482934",
    32         1          1.0      1.0      1.8          "minus",
    33         1          1.0      1.0      1.8          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      1.8          "divide",
    36         1          1.0      1.0      1.8          "plas",
    37         1          1.0      1.0      1.8          "minos",
    38         1          1.0      1.0      1.8          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.6      length = len(elements)-1
    41                                               extraction = [
    42         1         19.0     19.0     33.9          elements[random.randint(0,length)],
    43         1          6.0      6.0     10.7          elements[random.randint(0,length)],
    44         1          5.0      5.0      8.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     33.3      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     11.1      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     22.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     22.2      if isinstance(obj, str):
    61         1          1.0      1.0     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000592 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        110.0    110.0     18.6      inputValue = inputPart()
    89         1          6.0      6.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1         10.0     10.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         22.0     22.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        436.0    436.0     73.6      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

264回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['AAAd123482934', 'devide', 'あいう']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.4          1,
    16         1          2.0      2.0      2.7          234,
    17         1          1.0      1.0      1.4          543,
    18         1          1.0      1.0      1.4          766,
    19         1          1.0      1.0      1.4          44,
    20         1          1.0      1.0      1.4          5,
    21         1          1.0      1.0      1.4          100,
    22         1          1.0      1.0      1.4          20,
    23         1          1.0      1.0      1.4          111,
    24         1          1.0      1.0      1.4          371,
    25         1          1.0      1.0      1.4          0,
    26         1          2.0      2.0      2.7          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.4          0.134,
    28         1          1.0      1.0      1.4          "あいう",
    29         1          1.0      1.0      1.4          "saerf",
    30         1          1.0      1.0      1.4          "plus",
    31         1          1.0      1.0      1.4          "AAAd123482934",
    32         1          1.0      1.0      1.4          "minus",
    33         1          1.0      1.0      1.4          "devide",
    34         1          1.0      1.0      1.4          "multiply",
    35         1          1.0      1.0      1.4          "divide",
    36         1          2.0      2.0      2.7          "plas",
    37         1          1.0      1.0      1.4          "minos",
    38         1          2.0      2.0      2.7          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         24.0     24.0     32.4          elements[random.randint(0,length)],
    43         1         10.0     10.0     13.5          elements[random.randint(0,length)],
    44         1          9.0      9.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.4      return extraction

Total time: 1.8e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     33.3      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          4.0      1.3     22.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          3.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          3.0      1.0     16.7      if isinstance(obj, str):
    61         3          2.0      0.7     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000849 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        140.0    140.0     16.5      inputValue = inputPart()
    89         1         18.0     18.0      2.1      judgeValue0 = judge(inputValue[0])
    90         1         14.0     14.0      1.6      judgeValue1 = judge(inputValue[1])
    91         1         14.0     14.0      1.6      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         36.0     36.0      4.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        618.0    618.0     72.8      print str(inputValue).decode("string-escape")
   102         1          7.0      7.0      0.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

265回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0.134, 20, 26182576726545671723454736273454323454327667827345432763478372L]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.4          1,
    16         1          1.0      1.0      1.4          234,
    17         1          1.0      1.0      1.4          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      1.4          44,
    20         1          1.0      1.0      1.4          5,
    21         1          1.0      1.0      1.4          100,
    22         1          1.0      1.0      1.4          20,
    23         1          1.0      1.0      1.4          111,
    24         1          1.0      1.0      1.4          371,
    25         1          1.0      1.0      1.4          0,
    26         1          1.0      1.0      1.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.4          0.134,
    28         1          1.0      1.0      1.4          "あいう",
    29         1          1.0      1.0      1.4          "saerf",
    30         1          1.0      1.0      1.4          "plus",
    31         1          1.0      1.0      1.4          "AAAd123482934",
    32         1          1.0      1.0      1.4          "minus",
    33         1          1.0      1.0      1.4          "devide",
    34         1          1.0      1.0      1.4          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      1.4          "plas",
    37         1          1.0      1.0      1.4          "minos",
    38         1          2.0      2.0      2.7          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         27.0     27.0     37.0          elements[random.randint(0,length)],
    43         1         11.0     11.0     15.1          elements[random.randint(0,length)],
    44         1          9.0      9.0     12.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.4      return extraction

Total time: 1.4e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          7.0      2.3     50.0      if isinstance(obj, int):
    52         1          1.0      1.0      7.1          return 1
    53                                           
    54         2          3.0      1.5     21.4      if isinstance(obj, float):
    55         1          1.0      1.0      7.1          return 1
    56                                           
    57         1          1.0      1.0      7.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0      7.1      if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.001051 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        142.0    142.0     13.5      inputValue = inputPart()
    89         1         15.0     15.0      1.4      judgeValue0 = judge(inputValue[0])
    90         1          9.0      9.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1         14.0     14.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         43.0     43.0      4.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        823.0    823.0     78.3      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

266回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['AAAd123482934', 234, 234]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.7          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.7          371,
    25         1          1.0      1.0      2.7          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.7          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.7          "devide",
    34         1          1.0      1.0      2.7          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     40.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     66.7      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     33.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000501 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         79.0     79.0     15.8      inputValue = inputPart()
    89         1         10.0     10.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      1.0      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         19.0     19.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        380.0    380.0     75.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

267回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minos', 766, 44]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.3          1,
    16         1          1.0      1.0      2.3          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.3          766,
    19         1          1.0      1.0      2.3          44,
    20         1          1.0      1.0      2.3          5,
    21         1          1.0      1.0      2.3          100,
    22         1          1.0      1.0      2.3          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.3          0,
    26         1          1.0      1.0      2.3          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.3          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.3          "plus",
    31         1          1.0      1.0      2.3          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.3          "multiply",
    35         1          1.0      1.0      2.3          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.3          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.3      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     36.4          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.4          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.3      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     28.6      if isinstance(obj, int):
    52         2          2.0      1.0     28.6          return 1
    53                                           
    54         1          1.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000596 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         83.0     83.0     13.9      inputValue = inputPart()
    89         1         10.0     10.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         18.0     18.0      3.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        473.0    473.0     79.4      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

268回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['divide', 'multipy', 543]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.3          234,
    17         1          1.0      1.0      2.3          543,
    18         1          1.0      1.0      2.3          766,
    19         1          1.0      1.0      2.3          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.3          100,
    22         1          1.0      1.0      2.3          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.3          0,
    26         1          1.0      1.0      2.3          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.3          "saerf",
    30         1          1.0      1.0      2.3          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.3          "devide",
    34         1          1.0      1.0      2.3          "multiply",
    35         1          1.0      1.0      2.3          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.3      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     38.6          elements[random.randint(0,length)],
    43         1          6.0      6.0     13.6          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.3      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          1.0      0.3     14.3      if isinstance(obj, int):
    52         1          1.0      1.0     14.3          return 1
    53                                           
    54         2          2.0      1.0     28.6      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         2          1.0      0.5     14.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000534 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         80.0     80.0     15.0      inputValue = inputPart()
    89         1         11.0     11.0      2.1      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      3.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        406.0    406.0     76.0      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

269回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 44, 'multiply']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          1.0      1.0      2.5          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.5          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.5          111,
    24         1          1.0      1.0      2.5          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.5          "あいう",
    29         1          1.0      1.0      2.5          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.5          "minus",
    33         1          1.0      1.0      2.5          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.5          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     40.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     28.6      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     28.6      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     28.6      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00056 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         79.0     79.0     14.1      inputValue = inputPart()
    89         1         10.0     10.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         25.0     25.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        431.0    431.0     77.0      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

270回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 'plas', 'AAAd123482934']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.4          100,
    22         1          1.0      1.0      2.4          20,
    23         1          1.0      1.0      2.4          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          2.0      2.0      4.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     35.7          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          1.0      0.3     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          1.0      0.3     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          2.0      0.7     25.0      if isinstance(obj, str):
    61         3          1.0      0.3     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000505 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         78.0     78.0     15.4      inputValue = inputPart()
    89         1         10.0     10.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.4      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.4      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         18.0     18.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        383.0    383.0     75.8      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

271回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0.134, 0.134, 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.2          1,
    16         1          1.0      1.0      2.2          234,
    17         1          1.0      1.0      2.2          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.2          44,
    20         1          1.0      1.0      2.2          5,
    21         1          1.0      1.0      2.2          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.2          111,
    24         1          1.0      1.0      2.2          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.2          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.2          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.2          "saerf",
    30         1          1.0      1.0      2.2          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.2          "minus",
    33         1          1.0      1.0      2.2          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.2          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.2          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.2      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     37.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.1          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.2      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     25.0      if isinstance(obj, float):
    55         2          1.0      0.5     12.5          return 1
    56                                           
    57         1          1.0      1.0     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     12.5      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 3.3e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          0.0      0.0      0.0      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      3.0      def pr(x):
    68                                                   print x
    69         1         28.0     28.0     84.8      sep()
    70                                           
    71         1          1.0      1.0      3.0      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      3.0      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          0.0      0.0      0.0      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      3.0      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          0.0      0.0      0.0          result = "Operator is invalid."
    84         1          1.0      1.0      3.0      return result

Total time: 0.000609 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         84.0     84.0     13.8      inputValue = inputPart()
    89         1          8.0      8.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         44.0     44.0      7.2          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        455.0    455.0     74.7      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

272回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plus', 100, 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.4          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     35.7          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     44.4      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     11.1      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     22.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     22.2      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000527 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         77.0     77.0     14.6      inputValue = inputPart()
    89         1         10.0     10.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        405.0    405.0     76.9      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

273回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[20, 0.134, 'saerf']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 0.000132 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      1.5          1,
    16         1          2.0      2.0      1.5          234,
    17         1          1.0      1.0      0.8          543,
    18         1          1.0      1.0      0.8          766,
    19         1          1.0      1.0      0.8          44,
    20         1          1.0      1.0      0.8          5,
    21         1          2.0      2.0      1.5          100,
    22         1          1.0      1.0      0.8          20,
    23         1          1.0      1.0      0.8          111,
    24         1          1.0      1.0      0.8          371,
    25         1          1.0      1.0      0.8          0,
    26         1          1.0      1.0      0.8          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      0.8          0.134,
    28         1          1.0      1.0      0.8          "あいう",
    29         1          1.0      1.0      0.8          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      0.8          "minus",
    33         1          1.0      1.0      0.8          "devide",
    34         1          1.0      1.0      0.8          "multiply",
    35         1          1.0      1.0      0.8          "divide",
    36         1          1.0      1.0      0.8          "plas",
    37         1          1.0      1.0      0.8          "minos",
    38         1          2.0      2.0      1.5          "multipy"
    39                                                   ]
    40         1          2.0      2.0      1.5      length = len(elements)-1
    41                                               extraction = [
    42         1         30.0     30.0     22.7          elements[random.randint(0,length)],
    43         1         12.0     12.0      9.1          elements[random.randint(0,length)],
    44         1         60.0     60.0     45.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          2.0      2.0      1.5      return extraction

Total time: 1.6e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          8.0      2.7     50.0      if isinstance(obj, int):
    52         1          1.0      1.0      6.2          return 1
    53                                           
    54         2          3.0      1.5     18.8      if isinstance(obj, float):
    55         1          1.0      1.0      6.2          return 1
    56                                           
    57         1          1.0      1.0      6.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0      6.2      if isinstance(obj, str):
    61         1          1.0      1.0      6.2          return 3

Total time: 7.1e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      1.4      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      1.4      def pr(x):
    68                                                   print x
    69         1         62.0     62.0     87.3      sep()
    70                                           
    71         1          2.0      2.0      2.8      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      1.4      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      1.4      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      1.4      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          1.0      1.0      1.4          result = "Operator is invalid."
    84         1          1.0      1.0      1.4      return result

Total time: 0.001221 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        217.0    217.0     17.8      inputValue = inputPart()
    89         1         14.0     14.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1         33.0     33.0      2.7      judgeValue1 = judge(inputValue[1])
    91         1         17.0     17.0      1.4      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         93.0     93.0      7.6          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          3.0      3.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        840.0    840.0     68.8      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

274回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[766, 20, 0]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 0.002986 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      0.0          1,
    16         1          2.0      2.0      0.1          234,
    17         1          1.0      1.0      0.0          543,
    18         1          1.0      1.0      0.0          766,
    19         1          1.0      1.0      0.0          44,
    20         1          1.0      1.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      0.0          20,
    23         1          1.0      1.0      0.0          111,
    24         1          1.0      1.0      0.0          371,
    25         1          1.0      1.0      0.0          0,
    26         1          1.0      1.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      0.0          0.134,
    28         1          1.0      1.0      0.0          "あいう",
    29         1          1.0      1.0      0.0          "saerf",
    30         1          1.0      1.0      0.0          "plus",
    31         1          1.0      1.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      0.0          "minus",
    33         1          1.0      1.0      0.0          "devide",
    34         1          1.0      1.0      0.0          "multiply",
    35         1          1.0      1.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      0.0          "minos",
    38         1          2.0      2.0      0.1          "multipy"
    39                                                   ]
    40         1          3.0      3.0      0.1      length = len(elements)-1
    41                                               extraction = [
    42         1         23.0     23.0      0.8          elements[random.randint(0,length)],
    43         1          8.0      8.0      0.3          elements[random.randint(0,length)],
    44         1       2924.0   2924.0     97.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          4.0      4.0      0.1      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     75.0      if isinstance(obj, int):
    52         3          2.0      0.7     25.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00377 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1       3065.0   3065.0     81.3      inputValue = inputPart()
    89         1         16.0     16.0      0.4      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      0.2      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      0.2      judgeValue2 = judge(inputValue[2])
    92         1          2.0      2.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.0          output = "error"
    96                                               
    97         1         51.0     51.0      1.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        617.0    617.0     16.4      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

275回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0.134, 371, 'plus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.3          1,
    16         1          1.0      1.0      2.3          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.3          766,
    19         1          1.0      1.0      2.3          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.3          100,
    22         1          1.0      1.0      2.3          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.3          371,
    25         1          1.0      1.0      2.3          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.3          "あいう",
    29         1          1.0      1.0      2.3          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.3          "AAAd123482934",
    32         1          1.0      1.0      2.3          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.3          "multiply",
    35         1          1.0      1.0      2.3          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.3      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     37.2          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.0          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.6          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     44.4      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     22.2      if isinstance(obj, float):
    55         1          1.0      1.0     11.1          return 1
    56                                           
    57         1          1.0      1.0     11.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     11.1      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 2.7e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      3.7      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      3.7      def pr(x):
    68                                                   print x
    69         1         22.0     22.0     81.5      sep()
    70                                           
    71         1          1.0      1.0      3.7      if list[2] == "plus":
    72         1          1.0      1.0      3.7          result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84         1          1.0      1.0      3.7      return result

Total time: 0.000568 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         84.0     84.0     14.8      inputValue = inputPart()
    89         1          9.0      9.0      1.6      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          9.0      9.0      1.6      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         36.0     36.0      6.3          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        422.0    422.0     74.3      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

276回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 'multipy', 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.2          234,
    17         1          1.0      1.0      2.2          543,
    18         1          1.0      1.0      2.2          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.2          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.2          111,
    24         1          1.0      1.0      2.2          371,
    25         1          1.0      1.0      2.2          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.2          0.134,
    28         1          1.0      1.0      2.2          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.2          "AAAd123482934",
    32         1          1.0      1.0      2.2          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.2          "divide",
    36         1          1.0      1.0      2.2          "plas",
    37         1          1.0      1.0      2.2          "minos",
    38         1          1.0      1.0      2.2          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.3      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     37.0          elements[random.randint(0,length)],
    43         1          6.0      6.0     13.0          elements[random.randint(0,length)],
    44         1          5.0      5.0     10.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.2      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     44.4      if isinstance(obj, int):
    52         2          1.0      0.5     11.1          return 1
    53                                           
    54         1          1.0      1.0     11.1      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     11.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     11.1      if isinstance(obj, str):
    61         1          1.0      1.0     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000524 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         81.0     81.0     15.5      inputValue = inputPart()
    89         1          6.0      6.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         19.0     19.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        403.0    403.0     76.9      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

277回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 111, 5]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 0.000141 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      1.4          1,
    16         1          2.0      2.0      1.4          234,
    17         1          1.0      1.0      0.7          543,
    18         1          2.0      2.0      1.4          766,
    19         1          1.0      1.0      0.7          44,
    20         1          2.0      2.0      1.4          5,
    21         1          2.0      2.0      1.4          100,
    22         1          1.0      1.0      0.7          20,
    23         1          2.0      2.0      1.4          111,
    24         1          1.0      1.0      0.7          371,
    25         1          1.0      1.0      0.7          0,
    26         1          1.0      1.0      0.7          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      0.7          0.134,
    28         1          1.0      1.0      0.7          "あいう",
    29         1          1.0      1.0      0.7          "saerf",
    30         1          1.0      1.0      0.7          "plus",
    31         1          1.0      1.0      0.7          "AAAd123482934",
    32         1          1.0      1.0      0.7          "minus",
    33         1          1.0      1.0      0.7          "devide",
    34         1          1.0      1.0      0.7          "multiply",
    35         1          1.0      1.0      0.7          "divide",
    36         1          2.0      2.0      1.4          "plas",
    37         1          1.0      1.0      0.7          "minos",
    38         1          2.0      2.0      1.4          "multipy"
    39                                                   ]
    40         1          2.0      2.0      1.4      length = len(elements)-1
    41                                               extraction = [
    42         1         84.0     84.0     59.6          elements[random.randint(0,length)],
    43         1         12.0     12.0      8.5          elements[random.randint(0,length)],
    44         1         10.0     10.0      7.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      0.7      return extraction

Total time: 1.2e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     50.0      if isinstance(obj, int):
    52         2          2.0      1.0     16.7          return 1
    53                                           
    54         1          1.0      1.0      8.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0      8.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0      8.3      if isinstance(obj, str):
    61         1          1.0      1.0      8.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00092 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        204.0    204.0     22.2      inputValue = inputPart()
    89         1         18.0     18.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         31.0     31.0      3.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        647.0    647.0     70.3      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

278回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[111, 'plus', 'plus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.5          1,
    16         1          1.0      1.0      1.5          234,
    17         1          1.0      1.0      1.5          543,
    18         1          1.0      1.0      1.5          766,
    19         1          1.0      1.0      1.5          44,
    20         1          1.0      1.0      1.5          5,
    21         1          1.0      1.0      1.5          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      1.5          111,
    24         1          1.0      1.0      1.5          371,
    25         1          1.0      1.0      1.5          0,
    26         1          1.0      1.0      1.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.5          0.134,
    28         1          1.0      1.0      1.5          "あいう",
    29         1          1.0      1.0      1.5          "saerf",
    30         1          1.0      1.0      1.5          "plus",
    31         1          1.0      1.0      1.5          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      1.5          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      1.5          "divide",
    36         1          1.0      1.0      1.5          "plas",
    37         1          1.0      1.0      1.5          "minos",
    38         1          1.0      1.0      1.5          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.1      length = len(elements)-1
    41                                               extraction = [
    42         1         23.0     23.0     35.4          elements[random.randint(0,length)],
    43         1         10.0     10.0     15.4          elements[random.randint(0,length)],
    44         1          8.0      8.0     12.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.5      return extraction

Total time: 1.4e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     35.7      if isinstance(obj, int):
    52         1          1.0      1.0      7.1          return 1
    53                                           
    54         2          2.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     14.3      if isinstance(obj, str):
    61         2          2.0      1.0     14.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000722 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        128.0    128.0     17.7      inputValue = inputPart()
    89         1          9.0      9.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1         15.0     15.0      2.1      judgeValue1 = judge(inputValue[1])
    91         1         12.0     12.0      1.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         26.0     26.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        528.0    528.0     73.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

279回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['AAAd123482934', 'plas', 'あいう']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.3          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.3          44,
    20         1          1.0      1.0      2.3          5,
    21         1          1.0      1.0      2.3          100,
    22         1          1.0      1.0      2.3          20,
    23         1          1.0      1.0      2.3          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.3          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.3          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.3          "plus",
    31         1          1.0      1.0      2.3          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.3          "multiply",
    35         1          1.0      1.0      2.3          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.7      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     37.2          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.0          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.6          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.3      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     33.3      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     22.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          2.0      0.7     22.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          1.0      0.3     11.1      if isinstance(obj, str):
    61         3          1.0      0.3     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000573 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         82.0     82.0     14.3      inputValue = inputPart()
    89         1         11.0     11.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.4      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         25.0     25.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        438.0    438.0     76.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

280回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['AAAd123482934', 'minos', 100]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 0.000141 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      0.7          1,
    16         1          3.0      3.0      2.1          234,
    17         1          1.0      1.0      0.7          543,
    18         1          1.0      1.0      0.7          766,
    19         1          1.0      1.0      0.7          44,
    20         1          1.0      1.0      0.7          5,
    21         1          1.0      1.0      0.7          100,
    22         1          1.0      1.0      0.7          20,
    23         1          1.0      1.0      0.7          111,
    24         1          1.0      1.0      0.7          371,
    25         1          1.0      1.0      0.7          0,
    26         1          1.0      1.0      0.7          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      0.7          0.134,
    28         1          1.0      1.0      0.7          "あいう",
    29         1          1.0      1.0      0.7          "saerf",
    30         1          1.0      1.0      0.7          "plus",
    31         1          1.0      1.0      0.7          "AAAd123482934",
    32         1          1.0      1.0      0.7          "minus",
    33         1          1.0      1.0      0.7          "devide",
    34         1          1.0      1.0      0.7          "multiply",
    35         1          1.0      1.0      0.7          "divide",
    36         1          1.0      1.0      0.7          "plas",
    37         1          1.0      1.0      0.7          "minos",
    38         1          2.0      2.0      1.4          "multipy"
    39                                                   ]
    40         1          2.0      2.0      1.4      length = len(elements)-1
    41                                               extraction = [
    42         1         65.0     65.0     46.1          elements[random.randint(0,length)],
    43         1         32.0     32.0     22.7          elements[random.randint(0,length)],
    44         1         14.0     14.0      9.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      0.7      return extraction

Total time: 1.6e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     37.5      if isinstance(obj, int):
    52         1          1.0      1.0      6.2          return 1
    53                                           
    54         2          4.0      2.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     12.5      if isinstance(obj, str):
    61         2          1.0      0.5      6.2          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.001291 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        704.0    704.0     54.5      inputValue = inputPart()
    89         1         22.0     22.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1         14.0     14.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          9.0      9.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         53.0     53.0      4.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        485.0    485.0     37.6      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

281回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 5, 5]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          1.0      1.0      2.5          543,
    18         1          1.0      1.0      2.5          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.5          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.5          371,
    25         1          1.0      1.0      2.5          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.5          "saerf",
    30         1          1.0      1.0      2.5          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.5          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     40.0          elements[random.randint(0,length)],
    43         1          6.0      6.0     15.0          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     40.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          1.0      1.0     20.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.001156 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         80.0     80.0      6.9      inputValue = inputPart()
    89         1         10.0     10.0      0.9      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.4      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         19.0     19.0      1.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       1036.0   1036.0     89.6      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

282回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[234, 234, 111]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          1.0      1.0      2.4          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     38.1          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.3          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     66.7      if isinstance(obj, int):
    52         3          1.0      0.3     33.3          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000492 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         80.0     80.0     16.3      inputValue = inputPart()
    89         1          6.0      6.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      1.0      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         18.0     18.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        377.0    377.0     76.6      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

283回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['saerf', 234, 'plas']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      2.9          1,
    16         1          2.0      2.0      2.9          234,
    17         1          1.0      1.0      1.4          543,
    18         1          1.0      1.0      1.4          766,
    19         1          1.0      1.0      1.4          44,
    20         1          1.0      1.0      1.4          5,
    21         1          1.0      1.0      1.4          100,
    22         1          1.0      1.0      1.4          20,
    23         1          1.0      1.0      1.4          111,
    24         1          1.0      1.0      1.4          371,
    25         1          1.0      1.0      1.4          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.4          0.134,
    28         1          1.0      1.0      1.4          "あいう",
    29         1          1.0      1.0      1.4          "saerf",
    30         1          1.0      1.0      1.4          "plus",
    31         1          1.0      1.0      1.4          "AAAd123482934",
    32         1          1.0      1.0      1.4          "minus",
    33         1          1.0      1.0      1.4          "devide",
    34         1          1.0      1.0      1.4          "multiply",
    35         1          1.0      1.0      1.4          "divide",
    36         1          1.0      1.0      1.4          "plas",
    37         1          1.0      1.0      1.4          "minos",
    38         1          2.0      2.0      2.9          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         24.0     24.0     34.3          elements[random.randint(0,length)],
    43         1          9.0      9.0     12.9          elements[random.randint(0,length)],
    44         1          8.0      8.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.4      return extraction

Total time: 1.6e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     31.2      if isinstance(obj, int):
    52         1          1.0      1.0      6.2          return 1
    53                                           
    54         2          3.0      1.5     18.8      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          3.0      1.5     18.8      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     12.5      if isinstance(obj, str):
    61         2          2.0      1.0     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.0008 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        132.0    132.0     16.5      inputValue = inputPart()
    89         1         17.0     17.0      2.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.0      judgeValue1 = judge(inputValue[1])
    91         1         11.0     11.0      1.4      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         32.0     32.0      4.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        597.0    597.0     74.6      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

284回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 100, 'plas']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.3          1,
    16         1          1.0      1.0      2.3          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.3          766,
    19         1          1.0      1.0      2.3          44,
    20         1          1.0      1.0      2.3          5,
    21         1          1.0      1.0      2.3          100,
    22         1          1.0      1.0      2.3          20,
    23         1          1.0      1.0      2.3          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.3          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.3          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.3          "plus",
    31         1          1.0      1.0      2.3          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.3          "multiply",
    35         1          1.0      1.0      2.3          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.3      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     38.6          elements[random.randint(0,length)],
    43         1          6.0      6.0     13.6          elements[random.randint(0,length)],
    44         1          4.0      4.0      9.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.3      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     40.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          1.0      0.5     20.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000535 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         80.0     80.0     15.0      inputValue = inputPart()
    89         1         10.0     10.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         19.0     19.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        412.0    412.0     77.0      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

285回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 0, 100]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.4          100,
    22         1          1.0      1.0      2.4          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     39.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          1.0      0.3     20.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     20.0      if isinstance(obj, str):
    61         1          1.0      1.0     20.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000524 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         81.0     81.0     15.5      inputValue = inputPart()
    89         1         10.0     10.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      1.0      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         19.0     19.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        402.0    402.0     76.7      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

286回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[100, 0, 'multipy']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.4          20,
    23         1          1.0      1.0      2.4          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     36.6          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     60.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 2.7e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      3.7      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      3.7      def pr(x):
    68                                                   print x
    69         1         22.0     22.0     81.5      sep()
    70                                           
    71         1          1.0      1.0      3.7      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      3.7      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          0.0      0.0      0.0      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      3.7      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          0.0      0.0      0.0          result = "Operator is invalid."
    84         1          0.0      0.0      0.0      return result

Total time: 0.000533 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         80.0     80.0     15.0      inputValue = inputPart()
    89         1          6.0      6.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          9.0      9.0      1.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         38.0     38.0      7.1          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        393.0    393.0     73.7      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

287回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[766, 'multipy', 234]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.5          1,
    16         1          1.0      1.0      1.5          234,
    17         1          1.0      1.0      1.5          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      1.5          44,
    20         1          1.0      1.0      1.5          5,
    21         1          1.0      1.0      1.5          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      1.5          111,
    24         1          1.0      1.0      1.5          371,
    25         1          1.0      1.0      1.5          0,
    26         1          1.0      1.0      1.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.5          0.134,
    28         1          1.0      1.0      1.5          "あいう",
    29         1          1.0      1.0      1.5          "saerf",
    30         1          1.0      1.0      1.5          "plus",
    31         1          1.0      1.0      1.5          "AAAd123482934",
    32         1          1.0      1.0      1.5          "minus",
    33         1          1.0      1.0      1.5          "devide",
    34         1          1.0      1.0      1.5          "multiply",
    35         1          1.0      1.0      1.5          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      1.5          "minos",
    38         1          2.0      2.0      2.9          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         24.0     24.0     35.3          elements[random.randint(0,length)],
    43         1         10.0     10.0     14.7          elements[random.randint(0,length)],
    44         1          9.0      9.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.5      return extraction

Total time: 1.2e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     41.7      if isinstance(obj, int):
    52         2          2.0      1.0     16.7          return 1
    53                                           
    54         1          2.0      2.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0      8.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0      8.3      if isinstance(obj, str):
    61         1          1.0      1.0      8.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000847 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        131.0    131.0     15.5      inputValue = inputPart()
    89         1          9.0      9.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1         18.0     18.0      2.1      judgeValue1 = judge(inputValue[1])
    91         1          9.0      9.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         47.0     47.0      5.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        628.0    628.0     74.1      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

288回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0, 5, 5]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.3          1,
    16         1          2.0      2.0      2.5          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      1.3          766,
    19         1          1.0      1.0      1.3          44,
    20         1          1.0      1.0      1.3          5,
    21         1          1.0      1.0      1.3          100,
    22         1          1.0      1.0      1.3          20,
    23         1          1.0      1.0      1.3          111,
    24         1          1.0      1.0      1.3          371,
    25         1          1.0      1.0      1.3          0,
    26         1          1.0      1.0      1.3          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.3          0.134,
    28         1          1.0      1.0      1.3          "あいう",
    29         1          1.0      1.0      1.3          "saerf",
    30         1          1.0      1.0      1.3          "plus",
    31         1          1.0      1.0      1.3          "AAAd123482934",
    32         1          1.0      1.0      1.3          "minus",
    33         1          1.0      1.0      1.3          "devide",
    34         1          1.0      1.0      1.3          "multiply",
    35         1          1.0      1.0      1.3          "divide",
    36         1          1.0      1.0      1.3          "plas",
    37         1          1.0      1.0      1.3          "minos",
    38         1          2.0      2.0      2.5          "multipy"
    39                                                   ]
    40         1          3.0      3.0      3.8      length = len(elements)-1
    41                                               extraction = [
    42         1         28.0     28.0     35.4          elements[random.randint(0,length)],
    43         1         11.0     11.0     13.9          elements[random.randint(0,length)],
    44         1         10.0     10.0     12.7          elements[random.randint(0,length)]
    45                                                   ]
    46         1          2.0      2.0      2.5      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     62.5      if isinstance(obj, int):
    52         3          3.0      1.0     37.5          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000882 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        147.0    147.0     16.7      inputValue = inputPart()
    89         1         10.0     10.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         35.0     35.0      4.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        669.0    669.0     75.9      print str(inputValue).decode("string-escape")
   102         1          4.0      4.0      0.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

289回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minos', 44, 'plus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.4          1,
    16         1          2.0      2.0      2.8          234,
    17         1          1.0      1.0      1.4          543,
    18         1          1.0      1.0      1.4          766,
    19         1          1.0      1.0      1.4          44,
    20         1          1.0      1.0      1.4          5,
    21         1          1.0      1.0      1.4          100,
    22         1          1.0      1.0      1.4          20,
    23         1          1.0      1.0      1.4          111,
    24         1          1.0      1.0      1.4          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      1.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.4          0.134,
    28         1          1.0      1.0      1.4          "あいう",
    29         1          1.0      1.0      1.4          "saerf",
    30         1          1.0      1.0      1.4          "plus",
    31         1          1.0      1.0      1.4          "AAAd123482934",
    32         1          1.0      1.0      1.4          "minus",
    33         1          1.0      1.0      1.4          "devide",
    34         1          1.0      1.0      1.4          "multiply",
    35         1          1.0      1.0      1.4          "divide",
    36         1          1.0      1.0      1.4          "plas",
    37         1          1.0      1.0      1.4          "minos",
    38         1          2.0      2.0      2.8          "multipy"
    39                                                   ]
    40         1          3.0      3.0      4.2      length = len(elements)-1
    41                                               extraction = [
    42         1         25.0     25.0     34.7          elements[random.randint(0,length)],
    43         1         10.0     10.0     13.9          elements[random.randint(0,length)],
    44         1          9.0      9.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1.3e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     46.2      if isinstance(obj, int):
    52         1          1.0      1.0      7.7          return 1
    53                                           
    54         2          2.0      1.0     15.4      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     15.4      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5      7.7      if isinstance(obj, str):
    61         2          1.0      0.5      7.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000671 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        136.0    136.0     20.3      inputValue = inputPart()
    89         1         18.0     18.0      2.7      judgeValue0 = judge(inputValue[0])
    90         1          9.0      9.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1         11.0     11.0      1.6      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         31.0     31.0      4.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        463.0    463.0     69.0      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

290回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 'AAAd123482934', 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.6          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     39.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         1          1.0      1.0     12.5          return 1
    53                                           
    54         2          2.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     12.5      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000509 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         77.0     77.0     15.1      inputValue = inputPart()
    89         1          9.0      9.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.4      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      1.0      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      3.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        388.0    388.0     76.2      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

291回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plas', 'AAAd123482934', 'multipy']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     38.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     44.4      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     22.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          2.0      0.7     22.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          1.0      0.3     11.1      if isinstance(obj, str):
    61         3          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000537 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         80.0     80.0     14.9      inputValue = inputPart()
    89         1         10.0     10.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         22.0     22.0      4.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        409.0    409.0     76.2      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

292回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multiply', 234, 'AAAd123482934']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.2          1,
    16         1          1.0      1.0      2.2          234,
    17         1          1.0      1.0      2.2          543,
    18         1          1.0      1.0      2.2          766,
    19         1          1.0      1.0      2.2          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.2          100,
    22         1          1.0      1.0      2.2          20,
    23         1          1.0      1.0      2.2          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.2          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.2          0.134,
    28         1          1.0      1.0      2.2          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.2          "AAAd123482934",
    32         1          1.0      1.0      2.2          "minus",
    33         1          1.0      1.0      2.2          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.2          "plas",
    37         1          1.0      1.0      2.2          "minos",
    38         1          1.0      1.0      2.2          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.4      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     33.3          elements[random.randint(0,length)],
    43         1          6.0      6.0     13.3          elements[random.randint(0,length)],
    44         1          4.0      4.0      8.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.2      return extraction

Total time: 1.1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     27.3      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     18.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     18.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     18.2      if isinstance(obj, str):
    61         2          2.0      1.0     18.2          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000508 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         81.0     81.0     15.9      inputValue = inputPart()
    89         1          9.0      9.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      1.0      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.4      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         19.0     19.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        384.0    384.0     75.6      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

293回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[371, 'AAAd123482934', 766]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.3          1,
    16         1          1.0      1.0      2.3          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.3          766,
    19         1          1.0      1.0      2.3          44,
    20         1          1.0      1.0      2.3          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.3          20,
    23         1          1.0      1.0      2.3          111,
    24         1          1.0      1.0      2.3          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.3          "あいう",
    29         1          1.0      1.0      2.3          "saerf",
    30         1          1.0      1.0      2.3          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.3          "devide",
    34         1          1.0      1.0      2.3          "multiply",
    35         1          1.0      1.0      2.3          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.5      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     38.6          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.4          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     40.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     20.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000869 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         80.0     80.0      9.2      inputValue = inputPart()
    89         1          5.0      5.0      0.6      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         19.0     19.0      2.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        749.0    749.0     86.2      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

294回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[234, 'saerf', 'multipy']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          1.0      1.0      2.6          20,
    23         1          1.0      1.0      2.6          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          2.0      2.0      5.1      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     38.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     28.6      if isinstance(obj, int):
    52         1          1.0      1.0     14.3          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         2          1.0      0.5     14.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000483 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0     15.7      inputValue = inputPart()
    89         1          5.0      5.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         18.0     18.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        368.0    368.0     76.2      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

295回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[234, 111, 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.3          1,
    16         1          1.0      1.0      2.3          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.3          766,
    19         1          1.0      1.0      2.3          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.3          100,
    22         1          1.0      1.0      2.3          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.3          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.3          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.3          "plus",
    31         1          1.0      1.0      2.3          "AAAd123482934",
    32         1          1.0      1.0      2.3          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.3          "divide",
    36         1          1.0      1.0      2.3          "plas",
    37         1          1.0      1.0      2.3          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.5      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     36.4          elements[random.randint(0,length)],
    43         1          6.0      6.0     13.6          elements[random.randint(0,length)],
    44         1          4.0      4.0      9.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.3      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     60.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 2.6e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      3.8      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      3.8      def pr(x):
    68                                                   print x
    69         1         20.0     20.0     76.9      sep()
    70                                           
    71         1          0.0      0.0      0.0      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      3.8      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      3.8      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      3.8      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          1.0      1.0      3.8          result = "Operator is invalid."
    84         1          0.0      0.0      0.0      return result

Total time: 0.000536 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         80.0     80.0     14.9      inputValue = inputPart()
    89         1          6.0      6.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          9.0      9.0      1.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         36.0     36.0      6.7          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        397.0    397.0     74.1      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

296回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0.134, 766, 'saerf']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.4          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     39.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     44.4      if isinstance(obj, int):
    52         1          1.0      1.0     11.1          return 1
    53                                           
    54         2          2.0      1.0     22.2      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57         1          1.0      1.0     11.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     11.1      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 2.5e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      4.0      def sep():
    66                                                   print "--------------------------------------"
    67         1          0.0      0.0      0.0      def pr(x):
    68                                                   print x
    69         1         20.0     20.0     80.0      sep()
    70                                           
    71         1          1.0      1.0      4.0      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      4.0      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          0.0      0.0      0.0      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      4.0      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          0.0      0.0      0.0          result = "Operator is invalid."
    84         1          1.0      1.0      4.0      return result

Total time: 0.000544 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         80.0     80.0     14.7      inputValue = inputPart()
    89         1          8.0      8.0      1.5      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.7      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         36.0     36.0      6.6          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        404.0    404.0     74.3      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

297回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multiply', 371, 'あいう']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.3          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.3          44,
    20         1          1.0      1.0      2.3          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.3          20,
    23         1          1.0      1.0      2.3          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.3          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.3          0.134,
    28         1          1.0      1.0      2.3          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.3          "AAAd123482934",
    32         1          1.0      1.0      2.3          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.3          "divide",
    36         1          1.0      1.0      2.3          "plas",
    37         1          1.0      1.0      2.3          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.7      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     39.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.6          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.6          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     50.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     12.5      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000541 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         81.0     81.0     15.0      inputValue = inputPart()
    89         1         10.0     10.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         19.0     19.0      3.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        417.0    417.0     77.1      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

298回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[111, 'divide', 'divide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.3          1,
    16         1          1.0      1.0      2.3          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.3          44,
    20         1          1.0      1.0      2.3          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.3          20,
    23         1          1.0      1.0      2.3          111,
    24         1          1.0      1.0      2.3          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.3          0.134,
    28         1          1.0      1.0      2.3          "あいう",
    29         1          1.0      1.0      2.3          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.3          "minus",
    33         1          1.0      1.0      2.3          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.3          "plas",
    37         1          1.0      1.0      2.3          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.3      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     37.2          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.0          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.6          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     66.7      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     33.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000513 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         78.0     78.0     15.2      inputValue = inputPart()
    89         1          6.0      6.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1          9.0      9.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.4      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         23.0     23.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        387.0    387.0     75.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

299回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[100, 'あいう', 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 0.00014 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      1.4          1,
    16         1          2.0      2.0      1.4          234,
    17         1          1.0      1.0      0.7          543,
    18         1          1.0      1.0      0.7          766,
    19         1          1.0      1.0      0.7          44,
    20         1          1.0      1.0      0.7          5,
    21         1          1.0      1.0      0.7          100,
    22         1          1.0      1.0      0.7          20,
    23         1          1.0      1.0      0.7          111,
    24         1          1.0      1.0      0.7          371,
    25         1          1.0      1.0      0.7          0,
    26         1          1.0      1.0      0.7          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      0.7          0.134,
    28         1          1.0      1.0      0.7          "あいう",
    29         1          1.0      1.0      0.7          "saerf",
    30         1          1.0      1.0      0.7          "plus",
    31         1          1.0      1.0      0.7          "AAAd123482934",
    32         1          1.0      1.0      0.7          "minus",
    33         1          1.0      1.0      0.7          "devide",
    34         1          1.0      1.0      0.7          "multiply",
    35         1          2.0      2.0      1.4          "divide",
    36         1          1.0      1.0      0.7          "plas",
    37         1          1.0      1.0      0.7          "minos",
    38         1          2.0      2.0      1.4          "multipy"
    39                                                   ]
    40         1          2.0      2.0      1.4      length = len(elements)-1
    41                                               extraction = [
    42         1         49.0     49.0     35.0          elements[random.randint(0,length)],
    43         1         14.0     14.0     10.0          elements[random.randint(0,length)],
    44         1         46.0     46.0     32.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      0.7      return extraction

Total time: 1.2e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          6.0      2.0     50.0      if isinstance(obj, int):
    52         2          2.0      1.0     16.7          return 1
    53                                           
    54         1          1.0      1.0      8.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0      8.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0      8.3      if isinstance(obj, str):
    61         1          1.0      1.0      8.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000818 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        209.0    209.0     25.6      inputValue = inputPart()
    89         1         11.0     11.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1         17.0     17.0      2.1      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.0      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         54.0     54.0      6.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        515.0    515.0     63.0      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

300回目のループです
