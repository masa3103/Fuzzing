-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['AAAd123482934', 'あいう', 'multiply']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.9          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.9          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     40.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.9      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     33.3      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     22.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          3.0      1.0     33.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          1.0      0.3     11.1      if isinstance(obj, str):
    61         3          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00193 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0      3.6      inputValue = inputPart()
    89         1          9.0      9.0      0.5      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      0.4      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      0.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         16.0     16.0      0.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       1819.0   1819.0     94.2      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

1回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 'plus', 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          1.0      1.0      2.6          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     33.3          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     44.4      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     22.2      if isinstance(obj, float):
    55         1          1.0      1.0     11.1          return 1
    56                                           
    57         2          1.0      0.5     11.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          1.0      0.5     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000466 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.0      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         16.0     16.0      3.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        358.0    358.0     76.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

2回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[234, 100, 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          0.0      0.0      0.0      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     66.7      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          1.0      1.0     33.3          return 3

Total time: 2.5e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      4.0      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      4.0      def pr(x):
    68                                                   print x
    69         1         20.0     20.0     80.0      sep()
    70                                           
    71         1          1.0      1.0      4.0      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          0.0      0.0      0.0      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          0.0      0.0      0.0      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      4.0      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          1.0      1.0      4.0          result = "Operator is invalid."
    84         1          0.0      0.0      0.0      return result

Total time: 0.000479 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     14.6      inputValue = inputPart()
    89         1          5.0      5.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          3.0      3.0      0.6      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         36.0     36.0      7.5          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        352.0    352.0     73.5      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

3回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minus', 'minus', 'あいう']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.9          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.9          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.9          "multiply",
    35         1          1.0      1.0      2.9          "divide",
    36         1          1.0      1.0      2.9          "plas",
    37         1          1.0      1.0      2.9          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     37.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1.1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     36.4      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     18.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          2.0      0.7     18.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          1.0      0.3      9.1      if isinstance(obj, str):
    61         3          2.0      0.7     18.2          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000455 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.4      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        344.0    344.0     75.6      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

4回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plus', 543, 'saerf']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     34.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     28.6      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     28.6      if isinstance(obj, str):
    61         2          1.0      0.5     14.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000446 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.7      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.6      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        336.0    336.0     75.3      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

5回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['divide', 'plus', 543]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          1.0      1.0      2.6          20,
    23         1          1.0      1.0      2.6          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     39.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          1.0      0.3     20.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     20.0      if isinstance(obj, str):
    61         2          1.0      0.5     20.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000452 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     15.9      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        337.0    337.0     74.6      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

6回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[20, 'saerf', 100]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          1.0      1.0      2.9          20,
    23         1          1.0      1.0      2.9          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          1.0      1.0      2.9          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     40.0          elements[random.randint(0,length)],
    43         1          4.0      4.0     11.4          elements[random.randint(0,length)],
    44         1          5.0      5.0     14.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.9      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          1.0      0.3     20.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     20.0      if isinstance(obj, str):
    61         1          1.0      1.0     20.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000454 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.4      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        350.0    350.0     77.1      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

7回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 0, 'あいう']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.9          543,
    18         1          1.0      1.0      2.9          766,
    19         1          1.0      1.0      2.9          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.9          20,
    23         1          1.0      1.0      2.9          111,
    24         1          1.0      1.0      2.9          371,
    25         1          1.0      1.0      2.9          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          1.0      1.0      2.9          "minus",
    33         1          1.0      1.0      2.9          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     37.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     33.3      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     22.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     22.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     22.2      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000458 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.3      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        349.0    349.0     76.2      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

8回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[234, 'divide', 'minos']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          1.0      1.0      2.6          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     28.6      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000469 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     14.9      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         21.0     21.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        357.0    357.0     76.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

9回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 'multiply', 'あいう']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.9          234,
    17         1          1.0      1.0      2.9          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          1.0      1.0      2.9          20,
    23         1          1.0      1.0      2.9          111,
    24         1          1.0      1.0      2.9          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          1.0      1.0      2.9          "minus",
    33         1          1.0      1.0      2.9          "devide",
    34         1          1.0      1.0      2.9          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.9          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     38.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.7          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     40.0      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          2.0      0.7     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          1.0      0.3     10.0      if isinstance(obj, str):
    61         3          1.0      0.3     10.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000458 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.3      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      4.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        343.0    343.0     74.9      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

10回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multiply', 234, 'plus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.7          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.7          0,
    26         1          1.0      1.0      2.7          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.7          0.134,
    28         1          1.0      1.0      2.7          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.7          "devide",
    34         1          1.0      1.0      2.7          "multiply",
    35         1          1.0      1.0      2.7          "divide",
    36         1          1.0      1.0      2.7          "plas",
    37         1          1.0      1.0      2.7          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     37.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     33.3      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     22.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     22.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     22.2      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000466 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         74.0     74.0     15.9      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        350.0    350.0     75.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

11回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 111, 'plas']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      3.0          1,
    16         1          1.0      1.0      3.0          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      3.0          5,
    21         1          1.0      1.0      3.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      3.0          0.134,
    28         1          1.0      1.0      3.0          "あいう",
    29         1          1.0      1.0      3.0          "saerf",
    30         1          1.0      1.0      3.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      3.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      3.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      3.0      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     39.4          elements[random.randint(0,length)],
    43         1          5.0      5.0     15.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     12.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     57.1      if isinstance(obj, int):
    52         1          1.0      1.0     14.3          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          1.0      0.5     14.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000455 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.4      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      4.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        342.0    342.0     75.2      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

12回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 'saerf', 5]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          1.0      1.0      2.5          543,
    18         1          1.0      1.0      2.5          766,
    19         1          1.0      1.0      2.5          44,
    20         1          1.0      1.0      2.5          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.5          111,
    24         1          1.0      1.0      2.5          371,
    25         1          1.0      1.0      2.5          0,
    26         1          1.0      1.0      2.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.5          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.5          "minus",
    33         1          1.0      1.0      2.5          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     32.5          elements[random.randint(0,length)],
    43         1          4.0      4.0     10.0          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          1.0      0.3     20.0      if isinstance(obj, int):
    52         1          1.0      1.0     20.0          return 1
    53                                           
    54         2          1.0      0.5     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          1.0      0.5     20.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000457 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         69.0     69.0     15.1      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        349.0    349.0     76.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

13回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multipy', 543, 'minus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          1.0      1.0      2.9          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.9          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     40.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.9      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     28.6      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     28.6      if isinstance(obj, str):
    61         2          2.0      1.0     28.6          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000474 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.0      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         23.0     23.0      4.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        357.0    357.0     75.3      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

14回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[20, 'あいう', 20]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     33.3          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         2          1.0      0.5     14.3          return 1
    53                                           
    54         1          1.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000454 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.4      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        349.0    349.0     76.9      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

15回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plus', 'plas', 'saerf']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.7          44,
    20         1          1.0      1.0      2.7          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.7          0,
    26         1          1.0      1.0      2.7          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.7          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.7          "devide",
    34         1          1.0      1.0      2.7          "multiply",
    35         1          1.0      1.0      2.7          "divide",
    36         1          1.0      1.0      2.7          "plas",
    37         1          1.0      1.0      2.7          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     37.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     25.0      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          1.0      0.3     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          2.0      0.7     25.0      if isinstance(obj, str):
    61         3          1.0      0.3     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000464 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     15.5      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         21.0     21.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        347.0    347.0     74.8      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

16回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[100, 111, 100]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          1.0      1.0      2.5          543,
    18         1          1.0      1.0      2.5          766,
    19         1          1.0      1.0      2.5          44,
    20         1          1.0      1.0      2.5          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.5          111,
    24         1          1.0      1.0      2.5          371,
    25         1          1.0      1.0      2.5          0,
    26         1          1.0      1.0      2.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.5          "minus",
    33         1          1.0      1.0      2.5          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     32.5          elements[random.randint(0,length)],
    43         1          6.0      6.0     15.0          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     50.0      if isinstance(obj, int):
    52         3          2.0      0.7     50.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000459 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     15.7      inputValue = inputPart()
    89         1          6.0      6.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      4.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        349.0    349.0     76.0      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

17回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[543, 'minos', 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.7          766,
    19         1          1.0      1.0      2.7          44,
    20         1          1.0      1.0      2.7          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.7          371,
    25         1          1.0      1.0      2.7          0,
    26         1          1.0      1.0      2.7          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.7          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.7          "devide",
    34         1          1.0      1.0      2.7          "multiply",
    35         1          1.0      1.0      2.7          "divide",
    36         1          1.0      1.0      2.7          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     35.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         2          2.0      1.0     33.3          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00045 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.8      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      4.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        338.0    338.0     75.1      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

18回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 'plus', 20]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.6          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     33.3          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         2          2.0      1.0     28.6          return 1
    53                                           
    54         1          1.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000448 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         69.0     69.0     15.4      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        341.0    341.0     76.1      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

19回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minus', 0.134, 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     33.3          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     25.0      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57         2          1.0      0.5     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     12.5      if isinstance(obj, str):
    61         2          1.0      0.5     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000477 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     14.9      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        361.0    361.0     75.7      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

20回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 1, 20]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     31.7          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 2e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7    100.0      if isinstance(obj, int):
    52         3          0.0      0.0      0.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000451 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.7      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          3.0      3.0      0.7      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        350.0    350.0     77.6      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

21回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minus', 20, 'divide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.8          1,
    16         1          1.0      1.0      2.8          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.8          100,
    22         1          1.0      1.0      2.8          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          1.0      1.0      2.8          "AAAd123482934",
    32         1          1.0      1.0      2.8          "minus",
    33         1          1.0      1.0      2.8          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.8          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     36.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.8      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     40.0      if isinstance(obj, int):
    52         1          1.0      1.0     20.0          return 1
    53                                           
    54         2          1.0      0.5     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000461 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     15.6      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        349.0    349.0     75.7      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

22回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 'saerf', 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      4.3          1,
    16         1          2.0      2.0      4.3          234,
    17         1          1.0      1.0      2.1          543,
    18         1          1.0      1.0      2.1          766,
    19         1          1.0      1.0      2.1          44,
    20         1          1.0      1.0      2.1          5,
    21         1          1.0      1.0      2.1          100,
    22         1          1.0      1.0      2.1          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.1          0,
    26         1          1.0      1.0      2.1          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.1          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.1          "AAAd123482934",
    32         1          1.0      1.0      2.1          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.1          "plas",
    37         1          1.0      1.0      2.1          "minos",
    38         1          1.0      1.0      2.1          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.3      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     34.0          elements[random.randint(0,length)],
    43         1          6.0      6.0     12.8          elements[random.randint(0,length)],
    44         1          4.0      4.0      8.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.1      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     44.4      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     11.1      if isinstance(obj, float):
    55         1          1.0      1.0     11.1          return 1
    56                                           
    57         1          1.0      1.0     11.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     11.1      if isinstance(obj, str):
    61         1          1.0      1.0     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000581 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         94.0     94.0     16.2      inputValue = inputPart()
    89         1          6.0      6.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.4      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         24.0     24.0      4.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        442.0    442.0     76.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

23回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multiply', 0, 26182576726545671723454736273454323454327667827345432763478372L]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.7          543,
    18         1          1.0      1.0      2.7          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          1.0      1.0      2.7          20,
    23         1          1.0      1.0      2.7          111,
    24         1          1.0      1.0      2.7          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.7          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     37.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.7      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         1          1.0      1.0     16.7          return 1
    53                                           
    54         2          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     16.7      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00046 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.4      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        348.0    348.0     75.7      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

24回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multiply', 543, 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.8          543,
    18         1          1.0      1.0      2.8          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.8          100,
    22         1          1.0      1.0      2.8          20,
    23         1          1.0      1.0      2.8          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          1.0      1.0      2.8          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.8          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     38.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.8      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     66.7      if isinstance(obj, int):
    52         2          1.0      0.5     33.3          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000457 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.3      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        350.0    350.0     76.6      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

25回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multipy', 371, 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     34.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         2          1.0      0.5     14.3          return 1
    53                                           
    54         1          1.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000464 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.3      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        353.0    353.0     76.1      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

26回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 'multiply', 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     34.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     40.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     20.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00046 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.4      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        352.0    352.0     76.5      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

27回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[100, 0, 'minus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          2.0      2.0      4.8          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     33.3          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          4.0      4.0      9.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     33.3      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     16.7      if isinstance(obj, str):
    61         1          1.0      1.0     16.7          return 3

Total time: 2.8e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      3.6      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      3.6      def pr(x):
    68                                                   print x
    69         1         24.0     24.0     85.7      sep()
    70                                           
    71         1          0.0      0.0      0.0      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      3.6      elif list[2] == "minus":
    74         1          1.0      1.0      3.6          result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84         1          0.0      0.0      0.0      return result

Total time: 0.000499 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     14.4      inputValue = inputPart()
    89         1          6.0      6.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.4      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         36.0     36.0      7.2          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        371.0    371.0     74.3      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

28回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['saerf', 'divide', 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.3          1,
    16         1          1.0      1.0      2.3          234,
    17         1          1.0      1.0      2.3          543,
    18         1          1.0      1.0      2.3          766,
    19         1          1.0      1.0      2.3          44,
    20         1          1.0      1.0      2.3          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.3          111,
    24         1          1.0      1.0      2.3          371,
    25         1          1.0      1.0      2.3          0,
    26         1          1.0      1.0      2.3          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.3          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.3          "minus",
    33         1          1.0      1.0      2.3          "devide",
    34         1          1.0      1.0      2.3          "multiply",
    35         1          1.0      1.0      2.3          "divide",
    36         1          1.0      1.0      2.3          "plas",
    37         1          1.0      1.0      2.3          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.3      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     34.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.6          elements[random.randint(0,length)],
    44         1          4.0      4.0      9.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          1.0      0.3     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          1.0      0.3     12.5      if isinstance(obj, str):
    61         3          1.0      0.3     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000471 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     15.3      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         18.0     18.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        356.0    356.0     75.6      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

29回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 'multiply', 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          1.0      1.0      2.7          543,
    18         1          1.0      1.0      2.7          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.7          20,
    23         1          1.0      1.0      2.7          111,
    24         1          1.0      1.0      2.7          371,
    25         1          1.0      1.0      2.7          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          1.0      1.0      2.7          "minus",
    33         1          1.0      1.0      2.7          "devide",
    34         1          1.0      1.0      2.7          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.7          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     35.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         2          1.0      0.5     14.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000466 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     15.5      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         21.0     21.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        351.0    351.0     75.3      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

30回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[1, 543, 44]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          1.0      1.0      2.6          20,
    23         1          1.0      1.0      2.6          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     36.8          elements[random.randint(0,length)],
    43         1          6.0      6.0     15.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     75.0      if isinstance(obj, int):
    52         3          1.0      0.3     25.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000451 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.5      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        344.0    344.0     76.3      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

31回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[1, 'multipy', 543]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     34.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     40.0      if isinstance(obj, int):
    52         2          1.0      0.5     20.0          return 1
    53                                           
    54         1          1.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000446 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         69.0     69.0     15.5      inputValue = inputPart()
    89         1          6.0      6.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        337.0    337.0     75.6      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

32回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[543, 'saerf', 'AAAd123482934']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     33.3          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     33.3      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     11.1      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     22.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     22.2      if isinstance(obj, str):
    61         2          1.0      0.5     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000459 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         68.0     68.0     14.8      inputValue = inputPart()
    89         1          6.0      6.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         18.0     18.0      3.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        348.0    348.0     75.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

33回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minos', 'devide', 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.7          44,
    20         1          1.0      1.0      2.7          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.7          0,
    26         1          1.0      1.0      2.7          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.7          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.7          "minus",
    33         1          1.0      1.0      2.7          "devide",
    34         1          1.0      1.0      2.7          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     40.5          elements[random.randint(0,length)],
    43         1          6.0      6.0     16.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     33.3      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     33.3      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000528 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         77.0     77.0     14.6      inputValue = inputPart()
    89         1         10.0     10.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        406.0    406.0     76.9      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

34回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0.134, 371, 766]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     31.7          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     75.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     25.0      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000468 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.0      inputValue = inputPart()
    89         1          7.0      7.0      1.5      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.6      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        359.0    359.0     76.7      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

35回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 44, 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     34.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     28.6      if isinstance(obj, int):
    52         2          1.0      0.5     14.3          return 1
    53                                           
    54         1          1.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61         1          1.0      1.0     14.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000468 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.2      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        358.0    358.0     76.5      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

36回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[1, 111, 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     34.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          1.0      0.3     20.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     20.0      if isinstance(obj, str):
    61         1          1.0      1.0     20.0          return 3

Total time: 2.2e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      4.5      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      4.5      def pr(x):
    68                                                   print x
    69         1         18.0     18.0     81.8      sep()
    70                                           
    71         1          1.0      1.0      4.5      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          0.0      0.0      0.0      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          0.0      0.0      0.0      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      4.5      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          0.0      0.0      0.0          result = "Operator is invalid."
    84         1          0.0      0.0      0.0      return result

Total time: 0.000469 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     14.9      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         33.0     33.0      7.0          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        345.0    345.0     73.6      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

37回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[5, 1, 100]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.7          543,
    18         1          1.0      1.0      2.7          766,
    19         1          1.0      1.0      2.7          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.7          20,
    23         1          1.0      1.0      2.7          111,
    24         1          1.0      1.0      2.7          371,
    25         1          1.0      1.0      2.7          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          1.0      1.0      2.7          "minus",
    33         1          1.0      1.0      2.7          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     35.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0    100.0      if isinstance(obj, int):
    52         3          0.0      0.0      0.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000459 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.5      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      4.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        350.0    350.0     76.3      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

38回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[543, 766, 'AAAd123482934']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.8          1,
    16         1          1.0      1.0      2.8          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.8          5,
    21         1          1.0      1.0      2.8          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.8          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.8          0.134,
    28         1          1.0      1.0      2.8          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.8          "divide",
    36         1          1.0      1.0      2.8          "plas",
    37         1          1.0      1.0      2.8          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     38.9          elements[random.randint(0,length)],
    43         1          4.0      4.0     11.1          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.8      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     40.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     20.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 2.3e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          0.0      0.0      0.0      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      4.3      def pr(x):
    68                                                   print x
    69         1         18.0     18.0     78.3      sep()
    70                                           
    71         1          1.0      1.0      4.3      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      4.3      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          0.0      0.0      0.0      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      4.3      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          1.0      1.0      4.3          result = "Operator is invalid."
    84         1          0.0      0.0      0.0      return result

Total time: 0.00047 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     14.9      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         32.0     32.0      6.8          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        350.0    350.0     74.5      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

39回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[371, 'saerf', 111]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.6          5,
    21         1          1.0      1.0      2.6          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     40.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     20.0      if isinstance(obj, str):
    61         1          1.0      1.0     20.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00046 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         69.0     69.0     15.0      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        353.0    353.0     76.7      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

40回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['AAAd123482934', 'plas', 543]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          1.0      1.0      2.6          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     28.6      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     28.6      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         2          1.0      0.5     14.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000468 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     15.6      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         19.0     19.0      4.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        355.0    355.0     75.9      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

41回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[20, 20, 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     33.3          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     60.0      if isinstance(obj, int):
    52         3          2.0      0.7     40.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00046 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.2      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        353.0    353.0     76.7      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

42回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 'minus', 0]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     33.3          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     16.7      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000455 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.4      inputValue = inputPart()
    89         1          6.0      6.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        349.0    349.0     76.7      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

43回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[111, 'minus', 'multiply']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          1.0      1.0      2.6          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     36.8          elements[random.randint(0,length)],
    43         1          6.0      6.0     15.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         1          1.0      1.0     14.3          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000453 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     15.9      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        344.0    344.0     75.9      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

44回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[234, 766, 'saerf']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 5.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      1.7          234,
    17         1          1.0      1.0      1.7          543,
    18         1          1.0      1.0      1.7          766,
    19         1          1.0      1.0      1.7          44,
    20         1          1.0      1.0      1.7          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      1.7          20,
    23         1          1.0      1.0      1.7          111,
    24         1          1.0      1.0      1.7          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      1.7          "あいう",
    29         1          1.0      1.0      1.7          "saerf",
    30         1          1.0      1.0      1.7          "plus",
    31         1          1.0      1.0      1.7          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      1.7          "divide",
    36         1          1.0      1.0      1.7          "plas",
    37         1          1.0      1.0      1.7          "minos",
    38         1          1.0      1.0      1.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      1.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     23.7          elements[random.randint(0,length)],
    43         1         20.0     20.0     33.9          elements[random.randint(0,length)],
    44         1          7.0      7.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.7      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     33.3      if isinstance(obj, int):
    52         2          2.0      1.0     22.2          return 1
    53                                           
    54         1          1.0      1.0     11.1      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     11.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     11.1      if isinstance(obj, str):
    61         1          1.0      1.0     11.1          return 3

Total time: 2.8e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      3.6      def sep():
    66                                                   print "--------------------------------------"
    67         1          0.0      0.0      0.0      def pr(x):
    68                                                   print x
    69         1         21.0     21.0     75.0      sep()
    70                                           
    71         1          1.0      1.0      3.6      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      3.6      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      3.6      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      3.6      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          1.0      1.0      3.6          result = "Operator is invalid."
    84         1          1.0      1.0      3.6      return result

Total time: 0.000567 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         92.0     92.0     16.2      inputValue = inputPart()
    89         1          5.0      5.0      0.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.7      judgeValue1 = judge(inputValue[1])
    91         1          9.0      9.0      1.6      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         36.0     36.0      6.3          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        418.0    418.0     73.7      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

45回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[100, 'minos', 111]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.9          5,
    21         1          1.0      1.0      2.9          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.9          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.9          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     38.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.7          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61         1          1.0      1.0     14.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000454 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.4      inputValue = inputPart()
    89         1          6.0      6.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        346.0    346.0     76.2      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

46回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[111, 'plas', 'minos']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.9          234,
    17         1          1.0      1.0      2.9          543,
    18         1          1.0      1.0      2.9          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          1.0      1.0      2.9          20,
    23         1          1.0      1.0      2.9          111,
    24         1          1.0      1.0      2.9          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          1.0      1.0      2.9          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     37.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.9      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     28.6      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         2          2.0      1.0     28.6          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000455 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.4      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         18.0     18.0      4.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        345.0    345.0     75.8      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

47回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[1, 'divide', 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      3.0          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      3.0          100,
    22         1          1.0      1.0      3.0          20,
    23         1          1.0      1.0      3.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      3.0          "saerf",
    30         1          1.0      1.0      3.0          "plus",
    31         1          1.0      1.0      3.0          "AAAd123482934",
    32         1          1.0      1.0      3.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      3.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      3.0      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     42.4          elements[random.randint(0,length)],
    43         1          5.0      5.0     15.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     12.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61         1          1.0      1.0     14.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000454 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.6      inputValue = inputPart()
    89         1          6.0      6.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        345.0    345.0     76.0      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

48回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multipy', 'minos', 'multipy']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.3          1,
    16         1          1.0      1.0      2.3          234,
    17         1          1.0      1.0      2.3          543,
    18         1          1.0      1.0      2.3          766,
    19         1          1.0      1.0      2.3          44,
    20         1          1.0      1.0      2.3          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.3          20,
    23         1          1.0      1.0      2.3          111,
    24         1          1.0      1.0      2.3          371,
    25         1          1.0      1.0      2.3          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.3          "AAAd123482934",
    32         1          1.0      1.0      2.3          "minus",
    33         1          1.0      1.0      2.3          "devide",
    34         1          1.0      1.0      2.3          "multiply",
    35         1          1.0      1.0      2.3          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.3      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     32.6          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.0          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.6          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.3      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     30.0      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          3.0      1.0     30.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          3.0      1.0     30.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          1.0      0.3     10.0      if isinstance(obj, str):
    61         3          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000461 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.4      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        350.0    350.0     75.9      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

49回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[234, 'あいう', 44]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      3.0          1,
    16         1          1.0      1.0      3.0          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      3.0          5,
    21         1          1.0      1.0      3.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      3.0          0.134,
    28         1          1.0      1.0      3.0          "あいう",
    29         1          1.0      1.0      3.0          "saerf",
    30         1          1.0      1.0      3.0          "plus",
    31         1          1.0      1.0      3.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      3.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      3.0      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     39.4          elements[random.randint(0,length)],
    43         1          5.0      5.0     15.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     12.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         2          1.0      0.5     16.7          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000457 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.3      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        352.0    352.0     77.0      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

50回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minus', 766, 44]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.7          766,
    19         1          1.0      1.0      2.7          44,
    20         1          1.0      1.0      2.7          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.7          0,
    26         1          1.0      1.0      2.7          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.7          0.134,
    28         1          1.0      1.0      2.7          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.7          "divide",
    36         1          1.0      1.0      2.7          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     37.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     16.7      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000456 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.4      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        346.0    346.0     75.9      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

51回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multiply', 'saerf', 'あいう']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.6          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     34.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     33.3      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          1.0      0.3     11.1      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          2.0      0.7     22.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          2.0      0.7     22.2      if isinstance(obj, str):
    61         3          1.0      0.3     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00046 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.4      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        349.0    349.0     75.9      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

52回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multipy', 5, 100]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.8          234,
    17         1          1.0      1.0      2.8          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.8          100,
    22         1          1.0      1.0      2.8          20,
    23         1          1.0      1.0      2.8          111,
    24         1          1.0      1.0      2.8          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          1.0      1.0      2.8          "AAAd123482934",
    32         1          1.0      1.0      2.8          "minus",
    33         1          1.0      1.0      2.8          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     36.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.8      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     50.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     25.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000452 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         69.0     69.0     15.3      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        347.0    347.0     76.8      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

53回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 111, 5]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     34.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         2          1.0      0.5     12.5          return 1
    53                                           
    54         1          1.0      1.0     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     12.5      if isinstance(obj, str):
    61         1          1.0      1.0     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000444 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     16.0      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        339.0    339.0     76.4      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

54回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['divide', 'multipy', 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.8          1,
    16         1          1.0      1.0      2.8          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.8          766,
    19         1          1.0      1.0      2.8          44,
    20         1          1.0      1.0      2.8          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.8          0,
    26         1          1.0      1.0      2.8          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.8          0.134,
    28         1          1.0      1.0      2.8          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.8          "multiply",
    35         1          1.0      1.0      2.8          "divide",
    36         1          1.0      1.0      2.8          "plas",
    37         1          1.0      1.0      2.8          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     36.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     40.0      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          3.0      1.0     30.0      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57         2          1.0      0.5     10.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     10.0      if isinstance(obj, str):
    61         2          1.0      0.5     10.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000498 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     14.7      inputValue = inputPart()
    89         1          9.0      9.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.2      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      1.0      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        384.0    384.0     77.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

55回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 44, 111]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          1.0      1.0      2.4          100,
    22         1          1.0      1.0      2.4          20,
    23         1          1.0      1.0      2.4          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          1.0      1.0      2.4          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     35.7          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.3          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 2e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7    100.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000528 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         77.0     77.0     14.6      inputValue = inputPart()
    89         1         10.0     10.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         21.0     21.0      4.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        408.0    408.0     77.3      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

56回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[5, 234, 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          1.0      1.0      2.9          20,
    23         1          1.0      1.0      2.9          111,
    24         1          1.0      1.0      2.9          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          1.0      1.0      2.9          "minus",
    33         1          1.0      1.0      2.9          "devide",
    34         1          1.0      1.0      2.9          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     40.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     40.0      if isinstance(obj, int):
    52         3          3.0      1.0     60.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00045 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.8      inputValue = inputPart()
    89         1          6.0      6.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        344.0    344.0     76.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

57回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multiply', 20, 543]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.4          1,
    16         1          1.0      1.0      1.4          234,
    17         1          3.0      3.0      4.1          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      1.4          5,
    21         1          1.0      1.0      1.4          100,
    22         1          1.0      1.0      1.4          20,
    23         1          1.0      1.0      1.4          111,
    24         1          1.0      1.0      1.4          371,
    25         1          1.0      1.0      1.4          0,
    26         1          1.0      1.0      1.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.4          0.134,
    28         1          1.0      1.0      1.4          "あいう",
    29         1          1.0      1.0      1.4          "saerf",
    30         1          1.0      1.0      1.4          "plus",
    31         1          1.0      1.0      1.4          "AAAd123482934",
    32         1          1.0      1.0      1.4          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      1.4          "multiply",
    35         1          1.0      1.0      1.4          "divide",
    36         1          1.0      1.0      1.4          "plas",
    37         1          3.0      3.0      4.1          "minos",
    38         1          2.0      2.0      2.7          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         25.0     25.0     33.8          elements[random.randint(0,length)],
    43         1         11.0     11.0     14.9          elements[random.randint(0,length)],
    44         1          9.0      9.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.4      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     50.0      if isinstance(obj, int):
    52         2          1.0      0.5     12.5          return 1
    53                                           
    54         1          1.0      1.0     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     12.5      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000766 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        182.0    182.0     23.8      inputValue = inputPart()
    89         1         18.0     18.0      2.3      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.0      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         40.0     40.0      5.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        508.0    508.0     66.3      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

58回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[111, 'minus', 234]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.5          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.5          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.5          5,
    21         1          1.0      1.0      2.5          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.5          111,
    24         1          1.0      1.0      2.5          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.5          0.134,
    28         1          1.0      1.0      2.5          "あいう",
    29         1          1.0      1.0      2.5          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.5          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.5          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.0          elements[random.randint(0,length)],
    43         1          6.0      6.0     15.0          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     40.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     20.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000467 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         77.0     77.0     16.5      inputValue = inputPart()
    89         1          6.0      6.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          9.0      9.0      1.9      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        346.0    346.0     74.1      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

59回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[100, 'あいう', 'multiply']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.2          1,
    16         1          2.0      2.0      4.3          234,
    17         1          1.0      1.0      2.2          543,
    18         1          1.0      1.0      2.2          766,
    19         1          1.0      1.0      2.2          44,
    20         1          1.0      1.0      2.2          5,
    21         1          1.0      1.0      2.2          100,
    22         1          1.0      1.0      2.2          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.2          0,
    26         1          1.0      1.0      2.2          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.2          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.2          "AAAd123482934",
    32         1          1.0      1.0      2.2          "minus",
    33         1          1.0      1.0      2.2          "devide",
    34         1          1.0      1.0      2.2          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.2          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.2      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     34.8          elements[random.randint(0,length)],
    43         1          6.0      6.0     13.0          elements[random.randint(0,length)],
    44         1          5.0      5.0     10.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.2      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     50.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     25.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     12.5      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000557 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         91.0     91.0     16.3      inputValue = inputPart()
    89         1          6.0      6.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.4      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         21.0     21.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        424.0    424.0     76.1      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

60回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 'divide', 'multiply']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     36.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          1.0      0.3     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          0.0      0.0      0.0      if isinstance(obj, str):
    61         3          2.0      0.7     25.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000451 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.5      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        340.0    340.0     75.4      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

61回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[1, 100, 100]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          1.0      1.0      2.7          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          1.0      1.0      2.7          20,
    23         1          1.0      1.0      2.7          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.7          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     37.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.7      return extraction

Total time: 0 s
File: profile.py
Function: judge at line 48
62回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[100, 'plas', 'plas']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.5          766,
    19         1          1.0      1.0      2.5          44,
    20         1          1.0      1.0      2.5          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.5          0.134,
    28         1          1.0      1.0      2.5          "あいう",
    29         1          1.0      1.0      2.5          "saerf",
    30         1          1.0      1.0      2.5          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          1.0      1.0      2.5          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     25.0      if isinstance(obj, int):
    52         1          1.0      1.0     12.5          return 1
    53                                           
    54         2          1.0      0.5     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     25.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     12.5      if isinstance(obj, str):
    61         2          1.0      0.5     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000457 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.3      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         22.0     22.0      4.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        341.0    341.0     74.6      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

63回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['divide', 'divide', 'multipy']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.3          234,
    17         1          1.0      1.0      2.3          543,
    18         1          1.0      1.0      2.3          766,
    19         1          1.0      1.0      2.3          44,
    20         1          1.0      1.0      2.3          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.3          371,
    25         1          1.0      1.0      2.3          0,
    26         1          1.0      1.0      2.3          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.3          0.134,
    28         1          1.0      1.0      2.3          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.3          "devide",
    34         1          1.0      1.0      2.3          "multiply",
    35         1          1.0      1.0      2.3          "divide",
    36         1          1.0      1.0      2.3          "plas",
    37         1          1.0      1.0      2.3          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.3      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     34.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.6          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.6          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.3      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     28.6      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          1.0      0.3     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          2.0      0.7     28.6      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          1.0      0.3     14.3      if isinstance(obj, str):
    61         3          1.0      0.3     14.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000469 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.1      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         21.0     21.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        353.0    353.0     75.3      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

64回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[1, 0, 111]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          1.0      1.0      2.9          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.9          "plas",
    37         1          1.0      1.0      2.9          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     40.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          1.0      0.3    100.0      if isinstance(obj, int):
    52         3          0.0      0.0      0.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00046 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.4      inputValue = inputPart()
    89         1          6.0      6.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        354.0    354.0     77.0      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

65回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['saerf', 371, 111]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     33.3          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     16.7      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000464 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.3      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         22.0     22.0      4.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        349.0    349.0     75.2      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

66回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[234, 'multipy', 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     34.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          1.0      0.5     16.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000464 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.3      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        349.0    349.0     75.2      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

67回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[234, 543, 234]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.9          5,
    21         1          1.0      1.0      2.9          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.9          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.9          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.9          "divide",
    36         1          1.0      1.0      2.9          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     37.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     50.0      if isinstance(obj, int):
    52         3          2.0      0.7     50.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000451 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.5      inputValue = inputPart()
    89         1          6.0      6.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      4.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        342.0    342.0     75.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

68回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multiply', 'AAAd123482934', 'minus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.7          766,
    19         1          1.0      1.0      2.7          44,
    20         1          1.0      1.0      2.7          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.7          0,
    26         1          1.0      1.0      2.7          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.7          0.134,
    28         1          1.0      1.0      2.7          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.7          "devide",
    34         1          1.0      1.0      2.7          "multiply",
    35         1          1.0      1.0      2.7          "divide",
    36         1          1.0      1.0      2.7          "plas",
    37         1          1.0      1.0      2.7          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     35.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          1.0      0.3     14.3      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     28.6      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          2.0      0.7     28.6      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          2.0      0.7     28.6      if isinstance(obj, str):
    61         3          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000457 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         69.0     69.0     15.1      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         22.0     22.0      4.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        343.0    343.0     75.1      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

69回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 'divide', 20]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     36.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1.1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     36.4      if isinstance(obj, int):
    52         1          1.0      1.0      9.1          return 1
    53                                           
    54         2          2.0      1.0     18.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     18.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     18.2      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000457 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.3      inputValue = inputPart()
    89         1          8.0      8.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         18.0     18.0      3.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        348.0    348.0     76.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

70回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[20, 371, 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     38.5          elements[random.randint(0,length)],
    43         1          6.0      6.0     15.4          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     33.3      if isinstance(obj, int):
    52         2          2.0      1.0     22.2          return 1
    53                                           
    54         1          1.0      1.0     11.1      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     11.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     11.1      if isinstance(obj, str):
    61         1          1.0      1.0     11.1          return 3

Total time: 3.3e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      3.0      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      3.0      def pr(x):
    68                                                   print x
    69         1         26.0     26.0     78.8      sep()
    70                                           
    71         1          1.0      1.0      3.0      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      3.0      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      3.0      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          0.0      0.0      0.0      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          1.0      1.0      3.0          result = "Operator is invalid."
    84         1          1.0      1.0      3.0      return result

Total time: 0.000544 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0     14.0      inputValue = inputPart()
    89         1          6.0      6.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.7      judgeValue1 = judge(inputValue[1])
    91         1          9.0      9.0      1.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         42.0     42.0      7.7          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        403.0    403.0     74.1      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

71回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minos', 'plas', 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.5          234,
    17         1          1.0      1.0      2.5          543,
    18         1          1.0      1.0      2.5          766,
    19         1          1.0      1.0      2.5          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.5          111,
    24         1          1.0      1.0      2.5          371,
    25         1          1.0      1.0      2.5          0,
    26         1          1.0      1.0      2.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.5          0.134,
    28         1          1.0      1.0      2.5          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          1.0      1.0      2.5          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     32.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          2.0      0.7     25.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          1.0      0.3     12.5      if isinstance(obj, str):
    61         3          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00045 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         68.0     68.0     15.1      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        343.0    343.0     76.2      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

72回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 44, 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          1.0      1.0      2.7          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          1.0      1.0      2.7          20,
    23         1          1.0      1.0      2.7          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.7          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.7          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     40.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     33.3      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     22.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     22.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     22.2      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000463 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     15.6      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         18.0     18.0      3.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        352.0    352.0     76.0      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

73回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 'minos', 'saerf']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.4          100,
    22         1          1.0      1.0      2.4          20,
    23         1          1.0      1.0      2.4          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          1.0      1.0      2.4          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     36.6          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.6          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     33.3      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     22.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          1.0      0.3     11.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          2.0      0.7     22.2      if isinstance(obj, str):
    61         3          1.0      0.3     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000478 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0     15.9      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         18.0     18.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        359.0    359.0     75.1      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

74回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[20, 0.134, 'minos']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.7          234,
    17         1          1.0      1.0      2.7          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          1.0      1.0      2.7          20,
    23         1          1.0      1.0      2.7          111,
    24         1          1.0      1.0      2.7          371,
    25         1          1.0      1.0      2.7          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          1.0      1.0      2.7          "minus",
    33         1          1.0      1.0      2.7          "devide",
    34         1          1.0      1.0      2.7          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.7          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     37.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     75.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     25.0      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 2.7e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      3.7      def sep():
    66                                                   print "--------------------------------------"
    67         1          0.0      0.0      0.0      def pr(x):
    68                                                   print x
    69         1         21.0     21.0     77.8      sep()
    70                                           
    71         1          1.0      1.0      3.7      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      3.7      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      3.7      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          0.0      0.0      0.0      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          1.0      1.0      3.7          result = "Operator is invalid."
    84         1          1.0      1.0      3.7      return result

Total time: 0.000496 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     14.7      inputValue = inputPart()
    89         1          6.0      6.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.2      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.4      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         36.0     36.0      7.3          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        364.0    364.0     73.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

75回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 766, 'plus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.9          5,
    21         1          1.0      1.0      2.9          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.9          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.9          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     41.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.7          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         2          1.0      0.5     16.7          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 2.1e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      4.8      def sep():
    66                                                   print "--------------------------------------"
    67         1          0.0      0.0      0.0      def pr(x):
    68                                                   print x
    69         1         18.0     18.0     85.7      sep()
    70                                           
    71         1          0.0      0.0      0.0      if list[2] == "plus":
    72         1          1.0      1.0      4.8          result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84         1          1.0      1.0      4.8      return result

Total time: 0.000468 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.0      inputValue = inputPart()
    89         1          6.0      6.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         29.0     29.0      6.2          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        349.0    349.0     74.6      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

76回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0, 'AAAd123482934', 44]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          1.0      1.0      2.6          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     60.0      if isinstance(obj, int):
    52         2          2.0      1.0     40.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000462 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     15.8      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        350.0    350.0     75.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

77回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 1, 26182576726545671723454736273454323454327667827345432763478372L]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          1.0      1.0      2.5          543,
    18         1          1.0      1.0      2.5          766,
    19         1          1.0      1.0      2.5          44,
    20         1          1.0      1.0      2.5          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.5          371,
    25         1          1.0      1.0      2.5          0,
    26         1          1.0      1.0      2.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.5          0.134,
    28         1          1.0      1.0      2.5          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          1.0      1.0      2.5          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     33.3      if isinstance(obj, int):
    52         1          1.0      1.0     16.7          return 1
    53                                           
    54         2          1.0      0.5     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     16.7      if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000463 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.1      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         21.0     21.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        352.0    352.0     76.0      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

78回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multiply', 111, 'minus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.7          234,
    17         1          1.0      1.0      2.7          543,
    18         1          1.0      1.0      2.7          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          1.0      1.0      2.7          20,
    23         1          1.0      1.0      2.7          111,
    24         1          1.0      1.0      2.7          371,
    25         1          1.0      1.0      2.7          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          1.0      1.0      2.7          "minus",
    33         1          1.0      1.0      2.7          "devide",
    34         1          1.0      1.0      2.7          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.7          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     35.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         2          1.0      0.5     14.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000451 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.5      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.6      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        340.0    340.0     75.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

79回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 5, 26182576726545671723454736273454323454327667827345432763478372L]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.7          543,
    18         1          1.0      1.0      2.7          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.7          20,
    23         1          1.0      1.0      2.7          111,
    24         1          1.0      1.0      2.7          371,
    25         1          1.0      1.0      2.7          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          1.0      1.0      2.7          "minus",
    33         1          1.0      1.0      2.7          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     37.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.7      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         1          1.0      1.0     12.5          return 1
    53                                           
    54         2          1.0      0.5     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     12.5      if isinstance(obj, str):
    61         1          1.0      1.0     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000462 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.2      inputValue = inputPart()
    89         1          8.0      8.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         16.0     16.0      3.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        356.0    356.0     77.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

80回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['AAAd123482934', 'multiply', 100]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          1.0      1.0      2.7          543,
    18         1          1.0      1.0      2.7          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          1.0      1.0      2.7          20,
    23         1          1.0      1.0      2.7          111,
    24         1          1.0      1.0      2.7          371,
    25         1          1.0      1.0      2.7          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          1.0      1.0      2.7          "minus",
    33         1          1.0      1.0      2.7          "devide",
    34         1          1.0      1.0      2.7          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     35.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     28.6      if isinstance(obj, int):
    52         1          1.0      1.0     14.3          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     28.6      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000454 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.4      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        346.0    346.0     76.2      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

81回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0, 111, 44]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.5          5,
    21         1          1.0      1.0      2.5          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.5          0,
    26         1          1.0      1.0      2.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.5          0.134,
    28         1          1.0      1.0      2.5          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.5          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     40.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     50.0      if isinstance(obj, int):
    52         3          2.0      0.7     50.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000511 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         77.0     77.0     15.1      inputValue = inputPart()
    89         1          7.0      7.0      1.4      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.6      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         24.0     24.0      4.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        394.0    394.0     77.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

82回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minus', 'multipy', 'あいう']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.8          234,
    17         1          1.0      1.0      2.8          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.8          100,
    22         1          1.0      1.0      2.8          20,
    23         1          1.0      1.0      2.8          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          1.0      1.0      2.8          "AAAd123482934",
    32         1          1.0      1.0      2.8          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     38.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.8      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          1.0      0.3     12.5      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          2.0      0.7     25.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          3.0      1.0     37.5      if isinstance(obj, str):
    61         3          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00046 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.2      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        349.0    349.0     75.9      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

83回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0.134, 111, 'AAAd123482934']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.9          44,
    20         1          1.0      1.0      2.9          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.9          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.9          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          2.0      2.0      5.7      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     37.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     44.4      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     11.1      if isinstance(obj, float):
    55         1          1.0      1.0     11.1          return 1
    56                                           
    57         1          1.0      1.0     11.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     11.1      if isinstance(obj, str):
    61         1          1.0      1.0     11.1          return 3

Total time: 2.8e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      3.6      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      3.6      def pr(x):
    68                                                   print x
    69         1         21.0     21.0     75.0      sep()
    70                                           
    71         1          1.0      1.0      3.6      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      3.6      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          0.0      0.0      0.0      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      3.6      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          1.0      1.0      3.6          result = "Operator is invalid."
    84         1          1.0      1.0      3.6      return result

Total time: 0.000486 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     14.4      inputValue = inputPart()
    89         1          7.0      7.0      1.4      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.4      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         35.0     35.0      7.2          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        361.0    361.0     74.3      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

84回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 0.134, 'plas']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.6          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     34.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     25.0      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          3.0      1.0     37.5      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57         2          2.0      1.0     25.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     12.5      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000463 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         69.0     69.0     14.9      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        351.0    351.0     75.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

85回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minus', 1, 'divide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 6.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.5          1,
    16         1          2.0      2.0      3.0          234,
    17         1          1.0      1.0      1.5          543,
    18         1          1.0      1.0      1.5          766,
    19         1          1.0      1.0      1.5          44,
    20         1          1.0      1.0      1.5          5,
    21         1          1.0      1.0      1.5          100,
    22         1          1.0      1.0      1.5          20,
    23         1          1.0      1.0      1.5          111,
    24         1          1.0      1.0      1.5          371,
    25         1          1.0      1.0      1.5          0,
    26         1          1.0      1.0      1.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.5          0.134,
    28         1          1.0      1.0      1.5          "あいう",
    29         1          1.0      1.0      1.5          "saerf",
    30         1          1.0      1.0      1.5          "plus",
    31         1          1.0      1.0      1.5          "AAAd123482934",
    32         1          1.0      1.0      1.5          "minus",
    33         1          1.0      1.0      1.5          "devide",
    34         1          1.0      1.0      1.5          "multiply",
    35         1          1.0      1.0      1.5          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      1.5          "minos",
    38         1          2.0      2.0      3.0          "multipy"
    39                                                   ]
    40         1          2.0      2.0      3.0      length = len(elements)-1
    41                                               extraction = [
    42         1         22.0     22.0     32.8          elements[random.randint(0,length)],
    43         1          9.0      9.0     13.4          elements[random.randint(0,length)],
    44         1          8.0      8.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.5      return extraction

Total time: 1.3e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     38.5      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     15.4      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     15.4      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     15.4      if isinstance(obj, str):
    61         2          2.0      1.0     15.4          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000854 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        128.0    128.0     15.0      inputValue = inputPart()
    89         1         18.0     18.0      2.1      judgeValue0 = judge(inputValue[0])
    90         1         10.0     10.0      1.2      judgeValue1 = judge(inputValue[1])
    91         1         15.0     15.0      1.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         33.0     33.0      3.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        645.0    645.0     75.5      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

86回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0.134, 371, 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     33.3          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         2          2.0      1.0     28.6          return 1
    53                                           
    54         1          1.0      1.0     14.3      if isinstance(obj, float):
    55         1          1.0      1.0     14.3          return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00047 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     14.9      inputValue = inputPart()
    89         1          7.0      7.0      1.5      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        361.0    361.0     76.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

87回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['divide', 44, 'minos']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          1.0      1.0      2.4          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          1.0      1.0      2.4          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     36.6          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     40.0      if isinstance(obj, int):
    52         1          1.0      1.0     20.0          return 1
    53                                           
    54         2          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          2.0      1.0     40.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000464 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.3      inputValue = inputPart()
    89         1          8.0      8.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         18.0     18.0      3.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        353.0    353.0     76.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

88回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minos', 'AAAd123482934', 'divide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     30.0      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          1.0      0.3     10.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          2.0      0.7     20.0      if isinstance(obj, str):
    61         3          2.0      0.7     20.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000478 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     14.9      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        355.0    355.0     74.3      print str(inputValue).decode("string-escape")
   102         1         12.0     12.0      2.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

89回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[1, 234, 26182576726545671723454736273454323454327667827345432763478372L]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.9          5,
    21         1          1.0      1.0      2.9          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.9          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.9          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     38.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.7          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.9      return extraction

Total time: 2e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7    100.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000492 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     14.2      inputValue = inputPart()
    89         1          5.0      5.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          3.0      3.0      0.6      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.4      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        387.0    387.0     78.7      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

90回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minus', 26182576726545671723454736273454323454327667827345432763478372L, 100]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.8          1,
    16         1          1.0      1.0      2.8          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.8          766,
    19         1          1.0      1.0      2.8          44,
    20         1          1.0      1.0      2.8          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.8          0.134,
    28         1          1.0      1.0      2.8          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          1.0      1.0      2.8          "AAAd123482934",
    32         1          1.0      1.0      2.8          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     38.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     30.0      if isinstance(obj, int):
    52         1          1.0      1.0     10.0          return 1
    53                                           
    54         2          2.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     20.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000452 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.7      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        343.0    343.0     75.9      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

91回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[543, 'multipy', 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     36.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         2          1.0      0.5     14.3          return 1
    53                                           
    54         1          1.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000445 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.7      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        336.0    336.0     75.5      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

92回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0, 'minus', 'multiply']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.4          100,
    22         1          1.0      1.0      2.4          20,
    23         1          1.0      1.0      2.4          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          1.0      1.0      2.4          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     34.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         2          1.0      0.5     14.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000509 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         74.0     74.0     14.5      inputValue = inputPart()
    89         1          6.0      6.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.6      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         19.0     19.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        394.0    394.0     77.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

93回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 543, 543]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.7          543,
    18         1          1.0      1.0      2.7          766,
    19         1          1.0      1.0      2.7          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.7          20,
    23         1          1.0      1.0      2.7          111,
    24         1          1.0      1.0      2.7          371,
    25         1          1.0      1.0      2.7          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          1.0      1.0      2.7          "minus",
    33         1          1.0      1.0      2.7          "devide",
    34         1          1.0      1.0      2.7          "multiply",
    35         1          1.0      1.0      2.7          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.7          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     35.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         3          3.0      1.0     50.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000448 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.8      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        344.0    344.0     76.8      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

94回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[100, 'あいう', 'plus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.6          5,
    21         1          1.0      1.0      2.6          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     38.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         1          1.0      1.0     16.7          return 1
    53                                           
    54         2          1.0      0.5     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000474 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     15.2      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        366.0    366.0     77.2      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

95回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 100, 'saerf']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          2.0      2.0      5.1          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     25.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     12.5      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000463 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.3      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        348.0    348.0     75.2      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

96回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multipy', 'multiply', 'divide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     39.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 1.2e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     33.3      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          3.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          3.0      1.0     25.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          1.0      0.3      8.3      if isinstance(obj, str):
    61         3          1.0      0.3      8.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000524 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         78.0     78.0     14.9      inputValue = inputPart()
    89         1         10.0     10.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         23.0     23.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        400.0    400.0     76.3      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

97回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[371, 0.134, 'AAAd123482934']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          1.0      1.0      2.9          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          1.0      1.0      2.9          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.9          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     40.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         1          1.0      1.0     14.3          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 2.5e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      4.0      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      4.0      def pr(x):
    68                                                   print x
    69         1         18.0     18.0     72.0      sep()
    70                                           
    71         1          1.0      1.0      4.0      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      4.0      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          0.0      0.0      0.0      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      4.0      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          1.0      1.0      4.0          result = "Operator is invalid."
    84         1          1.0      1.0      4.0      return result

Total time: 0.00048 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     14.6      inputValue = inputPart()
    89         1          5.0      5.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.2      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         33.0     33.0      6.9          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        355.0    355.0     74.0      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

98回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[766, 'plus', 5]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.5          766,
    19         1          1.0      1.0      2.5          44,
    20         1          1.0      1.0      2.5          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.5          371,
    25         1          1.0      1.0      2.5          0,
    26         1          1.0      1.0      2.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.5          0.134,
    28         1          1.0      1.0      2.5          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          1.0      1.0      2.5          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     37.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         2          1.0      0.5     16.7          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000461 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     15.6      inputValue = inputPart()
    89         1          6.0      6.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         16.0     16.0      3.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        353.0    353.0     76.6      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

99回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 'devide', 44]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          1.0      1.0      2.6          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     33.3          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         2          1.0      0.5     16.7          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000466 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.0      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        355.0    355.0     76.2      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

100回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minus', 'multiply', 'multiply']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.8          1,
    16         1          1.0      1.0      2.8          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.8          44,
    20         1          1.0      1.0      2.8          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.8          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.8          0.134,
    28         1          1.0      1.0      2.8          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.8          "divide",
    36         1          1.0      1.0      2.8          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     36.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.8      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     33.3      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     22.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          1.0      0.3     11.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          2.0      0.7     22.2      if isinstance(obj, str):
    61         3          1.0      0.3     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000461 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         69.0     69.0     15.0      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         22.0     22.0      4.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        344.0    344.0     74.6      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

101回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 26182576726545671723454736273454323454327667827345432763478372L, 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     66.7      if isinstance(obj, int):
    52         1          1.0      1.0     16.7          return 1
    53                                           
    54         2          1.0      0.5     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000451 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         69.0     69.0     15.3      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         18.0     18.0      4.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        342.0    342.0     75.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

102回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['saerf', 5, 'AAAd123482934']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          1.0      1.0      2.6          20,
    23         1          1.0      1.0      2.6          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     36.8          elements[random.randint(0,length)],
    43         1          6.0      6.0     15.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     25.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     25.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     25.0      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000455 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.4      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        343.0    343.0     75.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

103回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[543, 0.134, 'multipy']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.7          234,
    17         1          1.0      1.0      2.7          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          1.0      1.0      2.7          20,
    23         1          1.0      1.0      2.7          111,
    24         1          1.0      1.0      2.7          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          1.0      1.0      2.7          "minus",
    33         1          1.0      1.0      2.7          "devide",
    34         1          1.0      1.0      2.7          "multiply",
    35         1          1.0      1.0      2.7          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.7          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     37.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61         1          1.0      1.0     14.3          return 3

Total time: 2.8e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      3.6      def sep():
    66                                                   print "--------------------------------------"
    67         1          0.0      0.0      0.0      def pr(x):
    68                                                   print x
    69         1         21.0     21.0     75.0      sep()
    70                                           
    71         1          1.0      1.0      3.6      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      3.6      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      3.6      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      3.6      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          1.0      1.0      3.6          result = "Operator is invalid."
    84         1          1.0      1.0      3.6      return result

Total time: 0.000473 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         69.0     69.0     14.6      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         35.0     35.0      7.4          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        349.0    349.0     73.8      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

104回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[5, 5, 234]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     34.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0    100.0      if isinstance(obj, int):
    52         3          0.0      0.0      0.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000456 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.6      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        354.0    354.0     77.6      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

105回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[371, 'devide', 'plas']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.9          234,
    17         1          1.0      1.0      2.9          543,
    18         1          1.0      1.0      2.9          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          1.0      1.0      2.9          20,
    23         1          1.0      1.0      2.9          111,
    24         1          1.0      1.0      2.9          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          1.0      1.0      2.9          "minus",
    33         1          1.0      1.0      2.9          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     37.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     25.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     25.0      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000464 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.3      inputValue = inputPart()
    89         1          6.0      6.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        351.0    351.0     75.6      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

106回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[766, 'AAAd123482934', 26182576726545671723454736273454323454327667827345432763478372L]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     33.3          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 1.1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     27.3      if isinstance(obj, int):
    52         1          1.0      1.0      9.1          return 1
    53                                           
    54         2          2.0      1.0     18.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     18.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     18.2      if isinstance(obj, str):
    61         1          1.0      1.0      9.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000458 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.3      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         19.0     19.0      4.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        349.0    349.0     76.2      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

107回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minos', 1, 'AAAd123482934']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     39.5          elements[random.randint(0,length)],
    43         1          6.0      6.0     15.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     25.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     25.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     25.0      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000531 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         75.0     75.0     14.1      inputValue = inputPart()
    89         1         10.0     10.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        410.0    410.0     77.2      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

108回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[766, 'minus', 543]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.8          543,
    18         1          1.0      1.0      2.8          766,
    19         1          1.0      1.0      2.8          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.8          20,
    23         1          1.0      1.0      2.8          111,
    24         1          1.0      1.0      2.8          371,
    25         1          1.0      1.0      2.8          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.8          "AAAd123482934",
    32         1          1.0      1.0      2.8          "minus",
    33         1          1.0      1.0      2.8          "devide",
    34         1          1.0      1.0      2.8          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.8          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     38.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         2          1.0      0.5     14.3          return 1
    53                                           
    54         1          1.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000452 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.7      inputValue = inputPart()
    89         1          6.0      6.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         16.0     16.0      3.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        347.0    347.0     76.8      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

109回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 'multiply', 'あいう']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     31.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 1.1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     36.4      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     18.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          3.0      1.0     27.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          2.0      0.7     18.2      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00046 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.2      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        347.0    347.0     75.4      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

110回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[234, 'minus', 20]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     31.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         2          1.0      0.5     12.5          return 1
    53                                           
    54         1          1.0      1.0     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     12.5      if isinstance(obj, str):
    61         1          1.0      1.0     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000457 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.3      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        350.0    350.0     76.6      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

111回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[100, 111, 5]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          1.0      1.0      2.6          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     34.2          elements[random.randint(0,length)],
    43         1          6.0      6.0     15.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0    100.0      if isinstance(obj, int):
    52         3          0.0      0.0      0.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000445 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     16.2      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          3.0      3.0      0.7      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        340.0    340.0     76.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

112回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0, 'minos', 'divide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          1.0      1.0      2.7          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.7          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.7          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     37.8          elements[random.randint(0,length)],
    43         1          6.0      6.0     16.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.7      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     33.3      if isinstance(obj, int):
    52         1          1.0      1.0     11.1          return 1
    53                                           
    54         2          2.0      1.0     22.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     22.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     11.1      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000455 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.6      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        344.0    344.0     75.6      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

113回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['AAAd123482934', 'multipy', 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.5          766,
    19         1          1.0      1.0      2.5          44,
    20         1          1.0      1.0      2.5          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.5          371,
    25         1          1.0      1.0      2.5          0,
    26         1          1.0      1.0      2.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.5          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.5          "minus",
    33         1          1.0      1.0      2.5          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     37.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1.2e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     41.7      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          3.0      1.0     25.0      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57         2          2.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5      8.3      if isinstance(obj, str):
    61         2          1.0      0.5      8.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000484 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     15.1      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.2      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         22.0     22.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        365.0    365.0     75.4      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

114回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minus', 100, 'multiply']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.8          234,
    17         1          1.0      1.0      2.8          543,
    18         1          1.0      1.0      2.8          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.8          100,
    22         1          1.0      1.0      2.8          20,
    23         1          1.0      1.0      2.8          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          1.0      1.0      2.8          "AAAd123482934",
    32         1          1.0      1.0      2.8          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     38.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.8      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     22.2      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     11.1      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     22.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     22.2      if isinstance(obj, str):
    61         2          2.0      1.0     22.2          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00046 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.4      inputValue = inputPart()
    89         1          8.0      8.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        348.0    348.0     75.7      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

115回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plus', 1, 5]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.9          5,
    21         1          1.0      1.0      2.9          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.9          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.9          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     40.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.9      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     50.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          1.0      1.0     25.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000455 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.4      inputValue = inputPart()
    89         1          8.0      8.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        352.0    352.0     77.4      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

116回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 'devide', 'plas']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.6          5,
    21         1          1.0      1.0      2.6          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     33.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000454 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.4      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        344.0    344.0     75.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

117回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['divide', 1, 'divide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.3          1,
    16         1          1.0      1.0      2.3          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.3          766,
    19         1          1.0      1.0      2.3          44,
    20         1          1.0      1.0      2.3          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.3          371,
    25         1          1.0      1.0      2.3          0,
    26         1          1.0      1.0      2.3          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.3          0.134,
    28         1          1.0      1.0      2.3          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.3          "devide",
    34         1          1.0      1.0      2.3          "multiply",
    35         1          1.0      1.0      2.3          "divide",
    36         1          1.0      1.0      2.3          "plas",
    37         1          1.0      1.0      2.3          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.3      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     36.4          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.4          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.3      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     60.0      if isinstance(obj, int):
    52         1          1.0      1.0     20.0          return 1
    53                                           
    54         2          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          1.0      0.5     20.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000463 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.3      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        349.0    349.0     75.4      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

118回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0, 'multipy', 'plas']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.4          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     35.7          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 1.1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     36.4      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     18.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     18.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     18.2      if isinstance(obj, str):
    61         2          1.0      0.5      9.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00057 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         77.0     77.0     13.5      inputValue = inputPart()
    89         1          6.0      6.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1         10.0     10.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1         13.0     13.0      2.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         27.0     27.0      4.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        434.0    434.0     76.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

119回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 20, 'AAAd123482934']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.5          543,
    18         1          1.0      1.0      2.5          766,
    19         1          1.0      1.0      2.5          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.5          20,
    23         1          1.0      1.0      2.5          111,
    24         1          1.0      1.0      2.5          371,
    25         1          1.0      1.0      2.5          0,
    26         1          1.0      1.0      2.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.5          "AAAd123482934",
    32         1          1.0      1.0      2.5          "minus",
    33         1          1.0      1.0      2.5          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.0          elements[random.randint(0,length)],
    43         1          6.0      6.0     15.0          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     28.6      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     28.6      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     28.6      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000473 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     15.2      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         21.0     21.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        357.0    357.0     75.5      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

120回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minus', 5, 234]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.8          1,
    16         1          1.0      1.0      2.8          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.8          100,
    22         1          1.0      1.0      2.8          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.8          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          1.0      1.0      2.8          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.8          "plas",
    37         1          1.0      1.0      2.8          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     38.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.8      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         2          1.0      0.5     12.5          return 1
    53                                           
    54         1          1.0      1.0     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     12.5      if isinstance(obj, str):
    61         1          1.0      1.0     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000455 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         74.0     74.0     16.3      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         19.0     19.0      4.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        344.0    344.0     75.6      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

121回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 1, 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.5          766,
    19         1          1.0      1.0      2.5          44,
    20         1          1.0      1.0      2.5          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.5          0,
    26         1          1.0      1.0      2.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.5          0.134,
    28         1          1.0      1.0      2.5          "あいう",
    29         1          1.0      1.0      2.5          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          1.0      1.0      2.5          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         2          1.0      0.5     14.3          return 1
    53                                           
    54         1          1.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00045 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.6      inputValue = inputPart()
    89         1          8.0      8.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        342.0    342.0     76.0      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

122回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[5, 'あいう', 543]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     33.3          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         2          1.0      0.5     12.5          return 1
    53                                           
    54         1          1.0      1.0     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     12.5      if isinstance(obj, str):
    61         1          1.0      1.0     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000485 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         75.0     75.0     15.5      inputValue = inputPart()
    89         1          5.0      5.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.6      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.6      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        373.0    373.0     76.9      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

123回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 0, 766]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          1.0      1.0      2.7          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          1.0      1.0      2.7          20,
    23         1          1.0      1.0      2.7          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          1.0      1.0      2.7          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.7          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     35.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.7      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     50.0      if isinstance(obj, int):
    52         2          1.0      0.5     25.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          1.0      1.0     25.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000454 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     15.9      inputValue = inputPart()
    89         1          8.0      8.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         16.0     16.0      3.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        350.0    350.0     77.1      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

124回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 'あいう', 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     35.7          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     28.6      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     28.6      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          2.0      0.7     28.6      if isinstance(obj, str):
    61         3          1.0      0.3     14.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000482 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     15.1      inputValue = inputPart()
    89         1          8.0      8.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.2      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        364.0    364.0     75.5      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

125回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[20, 111, 26182576726545671723454736273454323454327667827345432763478372L]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     34.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     50.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     25.0      if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000454 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.6      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        348.0    348.0     76.7      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

126回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[100, 543, 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.5          766,
    19         1          1.0      1.0      2.5          44,
    20         1          1.0      1.0      2.5          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.5          0,
    26         1          1.0      1.0      2.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.5          0.134,
    28         1          1.0      1.0      2.5          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.5          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          1.0      1.0      2.5          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     32.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     60.0      if isinstance(obj, int):
    52         3          2.0      0.7     40.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000454 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.4      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         18.0     18.0      4.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        350.0    350.0     77.1      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

127回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[100, 'saerf', 'minus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.5          543,
    18         1          1.0      1.0      2.5          766,
    19         1          1.0      1.0      2.5          44,
    20         1          1.0      1.0      2.5          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.5          111,
    24         1          1.0      1.0      2.5          371,
    25         1          1.0      1.0      2.5          0,
    26         1          1.0      1.0      2.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.5          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.5          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          1.0      1.0      2.5          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         1          1.0      1.0     14.3          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000467 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         69.0     69.0     14.8      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         21.0     21.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        355.0    355.0     76.0      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

128回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[20, 1, 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.4          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     34.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     75.0      if isinstance(obj, int):
    52         2          1.0      0.5     25.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000478 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     14.9      inputValue = inputPart()
    89         1          6.0      6.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      1.0      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         19.0     19.0      4.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        371.0    371.0     77.6      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

129回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[5, 'minos', 'saerf']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.5          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.5          766,
    19         1          1.0      1.0      2.5          44,
    20         1          1.0      1.0      2.5          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.5          111,
    24         1          1.0      1.0      2.5          371,
    25         1          1.0      1.0      2.5          0,
    26         1          1.0      1.0      2.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.5          "AAAd123482934",
    32         1          1.0      1.0      2.5          "minus",
    33         1          1.0      1.0      2.5          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          2.0      2.0      5.0      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     37.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     25.0      if isinstance(obj, int):
    52         1          1.0      1.0     12.5          return 1
    53                                           
    54         2          1.0      0.5     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     25.0      if isinstance(obj, str):
    61         2          1.0      0.5     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000559 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         75.0     75.0     13.4      inputValue = inputPart()
    89         1          5.0      5.0      0.9      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.4      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         23.0     23.0      4.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        437.0    437.0     78.2      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

130回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 'minos', 0]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     31.7          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          1.0      0.3     25.0      if isinstance(obj, int):
    52         1          1.0      1.0     25.0          return 1
    53                                           
    54         2          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     25.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     25.0      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000465 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.1      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        354.0    354.0     76.1      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

131回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multipy', 'devide', 766]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.9          44,
    20         1          1.0      1.0      2.9          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.9          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.9          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.9          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     38.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.7          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     25.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     12.5      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000451 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         69.0     69.0     15.3      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         18.0     18.0      4.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        342.0    342.0     75.8      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

132回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[20, 0, 'divide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      2.9          1,
    16         1          2.0      2.0      2.9          234,
    17         1          1.0      1.0      1.4          543,
    18         1          1.0      1.0      1.4          766,
    19         1          1.0      1.0      1.4          44,
    20         1          1.0      1.0      1.4          5,
    21         1          1.0      1.0      1.4          100,
    22         1          1.0      1.0      1.4          20,
    23         1          1.0      1.0      1.4          111,
    24         1          1.0      1.0      1.4          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      1.4          0.134,
    28         1          1.0      1.0      1.4          "あいう",
    29         1          1.0      1.0      1.4          "saerf",
    30         1          1.0      1.0      1.4          "plus",
    31         1          1.0      1.0      1.4          "AAAd123482934",
    32         1          1.0      1.0      1.4          "minus",
    33         1          1.0      1.0      1.4          "devide",
    34         1          1.0      1.0      1.4          "multiply",
    35         1          1.0      1.0      1.4          "divide",
    36         1          1.0      1.0      1.4          "plas",
    37         1          1.0      1.0      1.4          "minos",
    38         1          2.0      2.0      2.9          "multipy"
    39                                                   ]
    40         1          2.0      2.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         24.0     24.0     34.3          elements[random.randint(0,length)],
    43         1         10.0     10.0     14.3          elements[random.randint(0,length)],
    44         1          8.0      8.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.4      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     55.6      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     11.1      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     11.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     11.1      if isinstance(obj, str):
    61         1          1.0      1.0     11.1          return 3

Total time: 4.8e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      2.1      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      2.1      def pr(x):
    68                                                   print x
    69         1         38.0     38.0     79.2      sep()
    70                                           
    71         1          1.0      1.0      2.1      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      2.1      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      2.1      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          2.0      2.0      4.2      elif list[2] == "divide":
    78         1          1.0      1.0      2.1          if list[1] == 0:
    79         1          1.0      1.0      2.1              result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84         1          1.0      1.0      2.1      return result

Total time: 0.00092 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        132.0    132.0     14.3      inputValue = inputPart()
    89         1         10.0     10.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1         15.0     15.0      1.6      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         69.0     69.0      7.5          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          2.0      2.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        680.0    680.0     73.9      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

133回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 766, 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.9          44,
    20         1          1.0      1.0      2.9          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.9          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.9          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.9          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     38.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.7          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         2          1.0      0.5     16.7          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 2.8e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      3.6      def sep():
    66                                                   print "--------------------------------------"
    67         1          0.0      0.0      0.0      def pr(x):
    68                                                   print x
    69         1         21.0     21.0     75.0      sep()
    70                                           
    71         1          1.0      1.0      3.6      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      3.6      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      3.6      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      3.6      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          1.0      1.0      3.6          result = "Operator is invalid."
    84         1          1.0      1.0      3.6      return result

Total time: 0.000471 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         68.0     68.0     14.4      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         35.0     35.0      7.4          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        348.0    348.0     73.9      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

134回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['saerf', 'multipy', 234]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          1.0      1.0      2.7          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.7          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     43.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.7      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     60.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000648 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     11.3      inputValue = inputPart()
    89         1          8.0      8.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.6      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      3.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        532.0    532.0     82.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

135回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['AAAd123482934', 'multipy', 0]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.7          234,
    17         1          1.0      1.0      2.7          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          1.0      1.0      2.7          20,
    23         1          1.0      1.0      2.7          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.7          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          1.0      1.0      2.7          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     37.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.7      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     33.3      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     33.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          1.0      0.5     16.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000464 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.1      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        351.0    351.0     75.6      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

136回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['divide', 766, 'plas']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.7          234,
    17         1          1.0      1.0      2.7          543,
    18         1          1.0      1.0      2.7          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          1.0      1.0      2.7          20,
    23         1          1.0      1.0      2.7          111,
    24         1          1.0      1.0      2.7          371,
    25         1          1.0      1.0      2.7          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          1.0      1.0      2.7          "minus",
    33         1          1.0      1.0      2.7          "devide",
    34         1          1.0      1.0      2.7          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     35.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     30.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     20.0      if isinstance(obj, str):
    61         2          1.0      0.5     10.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000467 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.0      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        354.0    354.0     75.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

137回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multiply', 100, 'minus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.6          5,
    21         1          1.0      1.0      2.6          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     34.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         1          1.0      1.0     16.7          return 1
    53                                           
    54         2          1.0      0.5     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000454 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.4      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        343.0    343.0     75.6      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

138回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['divide', 111, 0]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          1.0      1.0      2.6          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     36.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     33.3      if isinstance(obj, int):
    52         2          1.0      0.5     16.7          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     16.7      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000449 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.6      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      4.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        337.0    337.0     75.1      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

139回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['saerf', 5, 'divide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.9          234,
    17         1          1.0      1.0      2.9          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          1.0      1.0      2.9          20,
    23         1          1.0      1.0      2.9          111,
    24         1          1.0      1.0      2.9          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          1.0      1.0      2.9          "minus",
    33         1          1.0      1.0      2.9          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.9          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     37.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     33.3      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     22.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     22.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     22.2      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000455 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.6      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        345.0    345.0     75.8      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

140回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 371, 20]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          1.0      1.0      2.5          543,
    18         1          1.0      1.0      2.5          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.5          100,
    22         1          1.0      1.0      2.5          20,
    23         1          1.0      1.0      2.5          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.5          "あいう",
    29         1          1.0      1.0      2.5          "saerf",
    30         1          1.0      1.0      2.5          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          1.0      1.0      2.5          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     37.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 2e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7    100.0      if isinstance(obj, int):
    52         3          0.0      0.0      0.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000538 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         74.0     74.0     13.8      inputValue = inputPart()
    89         1          6.0      6.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.7      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         22.0     22.0      4.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        425.0    425.0     79.0      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

141回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multipy', 5, 'minos']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.9          44,
    20         1          1.0      1.0      2.9          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.9          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.9          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.9          "divide",
    36         1          1.0      1.0      2.9          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     37.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     33.3      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     22.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     22.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     22.2      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000461 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.2      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        352.0    352.0     76.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

142回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['AAAd123482934', 'devide', 26182576726545671723454736273454323454327667827345432763478372L]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.8          543,
    18         1          1.0      1.0      2.8          766,
    19         1          1.0      1.0      2.8          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.8          20,
    23         1          1.0      1.0      2.8          111,
    24         1          1.0      1.0      2.8          371,
    25         1          1.0      1.0      2.8          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          1.0      1.0      2.8          "AAAd123482934",
    32         1          1.0      1.0      2.8          "minus",
    33         1          1.0      1.0      2.8          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     38.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1.1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     36.4      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          3.0      1.0     27.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          2.0      0.7     18.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          1.0      0.3      9.1      if isinstance(obj, str):
    61         2          1.0      0.5      9.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000457 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.3      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        346.0    346.0     75.7      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

143回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plas', 'minus', 111]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     36.8          elements[random.randint(0,length)],
    43         1          6.0      6.0     15.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     25.0      if isinstance(obj, int):
    52         1          1.0      1.0     12.5          return 1
    53                                           
    54         2          1.0      0.5     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     25.0      if isinstance(obj, str):
    61         2          1.0      0.5     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000492 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     14.4      inputValue = inputPart()
    89         1          9.0      9.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.4      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        383.0    383.0     77.8      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

144回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 234, 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 5.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      1.8          1,
    16         1          1.0      1.0      1.8          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      1.8          766,
    19         1          1.0      1.0      1.8          44,
    20         1          1.0      1.0      1.8          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      1.8          111,
    24         1          1.0      1.0      1.8          371,
    25         1          1.0      1.0      1.8          0,
    26         1          1.0      1.0      1.8          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      1.8          "plus",
    31         1          1.0      1.0      1.8          "AAAd123482934",
    32         1          1.0      1.0      1.8          "minus",
    33         1          1.0      1.0      1.8          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      1.8          "minos",
    38         1          1.0      1.0      1.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      1.8      length = len(elements)-1
    41                                               extraction = [
    42         1         19.0     19.0     34.5          elements[random.randint(0,length)],
    43         1         10.0     10.0     18.2          elements[random.randint(0,length)],
    44         1          9.0      9.0     16.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      1.8      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0    100.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00056 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         95.0     95.0     17.0      inputValue = inputPart()
    89         1          6.0      6.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.7      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        423.0    423.0     75.5      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

145回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 'devide', 'multiply']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          1.0      1.0      2.5          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.5          100,
    22         1          1.0      1.0      2.5          20,
    23         1          1.0      1.0      2.5          111,
    24         1          1.0      1.0      2.5          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.5          "saerf",
    30         1          1.0      1.0      2.5          "plus",
    31         1          1.0      1.0      2.5          "AAAd123482934",
    32         1          1.0      1.0      2.5          "minus",
    33         1          1.0      1.0      2.5          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          2.0      2.0      5.0      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         1          1.0      1.0     14.3          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000468 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.0      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        354.0    354.0     75.6      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

146回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minus', 0.134, 'あいう']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.8          1,
    16         1          1.0      1.0      2.8          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.8          100,
    22         1          1.0      1.0      2.8          20,
    23         1          1.0      1.0      2.8          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          1.0      1.0      2.8          "AAAd123482934",
    32         1          1.0      1.0      2.8          "minus",
    33         1          1.0      1.0      2.8          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     38.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.8      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     44.4      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     22.2      if isinstance(obj, float):
    55         1          1.0      1.0     11.1          return 1
    56                                           
    57         2          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          2.0      1.0     22.2          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000467 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.0      inputValue = inputPart()
    89         1          8.0      8.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        355.0    355.0     76.0      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

147回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[543, 234, 'plus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     34.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.2          elements[random.randint(0,length)],
    44         1          4.0      4.0      9.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 2e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7    100.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 2.3e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      4.3      def sep():
    66                                                   print "--------------------------------------"
    67         1          0.0      0.0      0.0      def pr(x):
    68                                                   print x
    69         1         21.0     21.0     91.3      sep()
    70                                           
    71         1          1.0      1.0      4.3      if list[2] == "plus":
    72         1          0.0      0.0      0.0          result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84         1          0.0      0.0      0.0      return result

Total time: 0.000479 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         69.0     69.0     14.4      inputValue = inputPart()
    89         1          5.0      5.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          3.0      3.0      0.6      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         33.0     33.0      6.9          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        357.0    357.0     74.5      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

148回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 'minos', 'minos']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      3.0          1,
    16         1          1.0      1.0      3.0          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      3.0          100,
    22         1          1.0      1.0      3.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      3.0          0.134,
    28         1          1.0      1.0      3.0          "あいう",
    29         1          1.0      1.0      3.0          "saerf",
    30         1          1.0      1.0      3.0          "plus",
    31         1          1.0      1.0      3.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      3.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      3.0      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     39.4          elements[random.randint(0,length)],
    43         1          5.0      5.0     15.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     12.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     22.2      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          1.0      0.3     11.1      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          2.0      0.7     22.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          3.0      1.0     33.3      if isinstance(obj, str):
    61         2          1.0      0.5     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000452 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.5      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        336.0    336.0     74.3      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

149回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plas', 26182576726545671723454736273454323454327667827345432763478372L, 'AAAd123482934']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.7          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          1.0      1.0      2.7          20,
    23         1          1.0      1.0      2.7          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          1.0      1.0      2.7          "minus",
    33         1          1.0      1.0      2.7          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     37.8          elements[random.randint(0,length)],
    43         1          6.0      6.0     16.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.7      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     33.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          1.0      0.3     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000459 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.3      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        346.0    346.0     75.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

150回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[234, 'multiply', 'minos']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 5.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.0          1,
    16         1          1.0      1.0      2.0          234,
    17         1          1.0      1.0      2.0          543,
    18         1          1.0      1.0      2.0          766,
    19         1          1.0      1.0      2.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.0          20,
    23         1          1.0      1.0      2.0          111,
    24         1          1.0      1.0      2.0          371,
    25         1          1.0      1.0      2.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.0          "saerf",
    30         1          1.0      1.0      2.0          "plus",
    31         1          1.0      1.0      2.0          "AAAd123482934",
    32         1          1.0      1.0      2.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.0          "plas",
    37         1          1.0      1.0      2.0          "minos",
    38         1          1.0      1.0      2.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.0      length = len(elements)-1
    41                                               extraction = [
    42         1         19.0     19.0     37.3          elements[random.randint(0,length)],
    43         1          9.0      9.0     17.6          elements[random.randint(0,length)],
    44         1          5.0      5.0      9.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.0      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     30.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     20.0      if isinstance(obj, str):
    61         2          1.0      0.5     10.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000472 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         83.0     83.0     17.6      inputValue = inputPart()
    89         1          6.0      6.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        350.0    350.0     74.2      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

151回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[234, 20, 'plus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.6          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     36.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     75.0      if isinstance(obj, int):
    52         2          1.0      0.5     25.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 2.2e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      4.5      def sep():
    66                                                   print "--------------------------------------"
    67         1          0.0      0.0      0.0      def pr(x):
    68                                                   print x
    69         1         19.0     19.0     86.4      sep()
    70                                           
    71         1          0.0      0.0      0.0      if list[2] == "plus":
    72         1          1.0      1.0      4.5          result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84         1          1.0      1.0      4.5      return result

Total time: 0.000474 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     15.2      inputValue = inputPart()
    89         1          6.0      6.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         31.0     31.0      6.5          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        349.0    349.0     73.6      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

152回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 'divide', 44]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     60.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000459 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         69.0     69.0     15.0      inputValue = inputPart()
    89         1          8.0      8.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        349.0    349.0     76.0      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

153回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multipy', 'saerf', 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.9          5,
    21         1          1.0      1.0      2.9          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.9          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     41.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.7          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     50.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          1.0      0.5     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000471 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.1      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      4.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        358.0    358.0     76.0      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

154回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[111, 543, 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      3.0          1,
    16         1          1.0      1.0      3.0          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      3.0          100,
    22         1          1.0      1.0      3.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      3.0          "saerf",
    30         1          1.0      1.0      3.0          "plus",
    31         1          1.0      1.0      3.0          "AAAd123482934",
    32         1          1.0      1.0      3.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      3.0          "multipy"
    39                                                   ]
    40         1          2.0      2.0      6.1      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     39.4          elements[random.randint(0,length)],
    43         1          5.0      5.0     15.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     12.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         2          1.0      0.5     12.5          return 1
    53                                           
    54         1          1.0      1.0     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     12.5      if isinstance(obj, str):
    61         1          1.0      1.0     12.5          return 3

Total time: 2.3e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          0.0      0.0      0.0      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      4.3      def pr(x):
    68                                                   print x
    69         1         19.0     19.0     82.6      sep()
    70                                           
    71         1          1.0      1.0      4.3      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          0.0      0.0      0.0      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      4.3      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      4.3      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          0.0      0.0      0.0          result = "Operator is invalid."
    84         1          0.0      0.0      0.0      return result

Total time: 0.000481 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     14.6      inputValue = inputPart()
    89         1          6.0      6.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         33.0     33.0      6.9          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        356.0    356.0     74.0      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

155回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[234, 'plas', 'plas']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.5          44,
    20         1          1.0      1.0      2.5          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.5          371,
    25         1          1.0      1.0      2.5          0,
    26         1          1.0      1.0      2.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.5          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.5          "minus",
    33         1          1.0      1.0      2.5          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          2.0      2.0      5.0      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     37.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     33.3      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     22.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     22.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     11.1      if isinstance(obj, str):
    61         2          1.0      0.5     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000533 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         74.0     74.0     13.9      inputValue = inputPart()
    89         1          6.0      6.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         22.0     22.0      4.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        414.0    414.0     77.7      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

156回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[1, 'AAAd123482934', 0]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     31.7          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     40.0      if isinstance(obj, int):
    52         2          2.0      1.0     40.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000445 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.7      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         16.0     16.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        341.0    341.0     76.6      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

157回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[371, 'AAAd123482934', 100]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.4          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     33.3          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          4.0      4.0      9.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     33.3      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     16.7      if isinstance(obj, str):
    61         1          1.0      1.0     16.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000452 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.7      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        346.0    346.0     76.5      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

158回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multiply', 1, 'saerf']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.9          elements[random.randint(0,length)],
    43         1          6.0      6.0     15.4          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         1          1.0      1.0     16.7          return 1
    53                                           
    54         2          1.0      0.5     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000448 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.8      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        336.0    336.0     75.0      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

159回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multipy', 26182576726545671723454736273454323454327667827345432763478372L, 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     35.7          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     55.6      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     22.2      if isinstance(obj, float):
    55         1          1.0      1.0     11.1          return 1
    56                                           
    57         2          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          1.0      1.0     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000472 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     15.5      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         18.0     18.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        359.0    359.0     76.1      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

160回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 100, 20]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.8          1,
    16         1          1.0      1.0      2.8          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.8          5,
    21         1          1.0      1.0      2.8          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.8          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.8          0.134,
    28         1          1.0      1.0      2.8          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.8          "multiply",
    35         1          1.0      1.0      2.8          "divide",
    36         1          1.0      1.0      2.8          "plas",
    37         1          1.0      1.0      2.8          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     36.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     16.7      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000447 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         69.0     69.0     15.4      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        340.0    340.0     76.1      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

161回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[111, 44, 111]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.8          234,
    17         1          1.0      1.0      2.8          543,
    18         1          1.0      1.0      2.8          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.8          100,
    22         1          1.0      1.0      2.8          20,
    23         1          1.0      1.0      2.8          111,
    24         1          1.0      1.0      2.8          371,
    25         1          1.0      1.0      2.8          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          1.0      1.0      2.8          "AAAd123482934",
    32         1          1.0      1.0      2.8          "minus",
    33         1          1.0      1.0      2.8          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     36.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     66.7      if isinstance(obj, int):
    52         3          1.0      0.3     33.3          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000444 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.8      inputValue = inputPart()
    89         1          6.0      6.0      1.4      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        340.0    340.0     76.6      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

162回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['saerf', 44, 'saerf']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.7          234,
    17         1          1.0      1.0      2.7          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          1.0      1.0      2.7          20,
    23         1          1.0      1.0      2.7          111,
    24         1          1.0      1.0      2.7          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          1.0      1.0      2.7          "minus",
    33         1          1.0      1.0      2.7          "devide",
    34         1          1.0      1.0      2.7          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.7          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     37.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.7      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     22.2      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     22.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     22.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     22.2      if isinstance(obj, str):
    61         2          1.0      0.5     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000458 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.3      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        345.0    345.0     75.3      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

163回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minos', 'multipy', 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.8          1,
    16         1          1.0      1.0      2.8          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.8          5,
    21         1          1.0      1.0      2.8          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.8          0.134,
    28         1          1.0      1.0      2.8          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.8          "divide",
    36         1          1.0      1.0      2.8          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     38.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          1.0      0.3     25.0      if isinstance(obj, int):
    52         1          1.0      1.0     25.0          return 1
    53                                           
    54         2          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     25.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     25.0      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000456 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.4      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        347.0    347.0     76.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

164回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 'multiply', 20]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          1.0      1.0      2.4          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     34.1          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.6          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     28.6      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     28.6      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     28.6      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000456 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.4      inputValue = inputPart()
    89         1          8.0      8.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         22.0     22.0      4.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        343.0    343.0     75.2      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

165回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minos', 44, 543]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.5          766,
    19         1          1.0      1.0      2.5          44,
    20         1          1.0      1.0      2.5          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.5          0,
    26         1          1.0      1.0      2.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.5          0.134,
    28         1          1.0      1.0      2.5          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          1.0      1.0      2.5          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     66.7      if isinstance(obj, int):
    52         2          1.0      0.5     33.3          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000456 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.4      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         19.0     19.0      4.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        349.0    349.0     76.5      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

166回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[543, 'minus', 766]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.4          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     35.7          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     75.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          1.0      1.0     25.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000602 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     11.6      inputValue = inputPart()
    89         1          5.0      5.0      0.8      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.2      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         19.0     19.0      3.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        493.0    493.0     81.9      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

167回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0.134, 'plus', 766]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          1.0      1.0      2.6          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.9          elements[random.randint(0,length)],
    43         1          6.0      6.0     15.4          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 2e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7    100.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          0.0      0.0      0.0      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000464 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     15.7      inputValue = inputPart()
    89         1          7.0      7.0      1.5      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        353.0    353.0     76.1      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

168回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plus', 'multiply', 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.9          5,
    21         1          1.0      1.0      2.9          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.9          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.9          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     38.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.7          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     40.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     10.0      if isinstance(obj, str):
    61         2          1.0      0.5     10.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000452 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.5      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        342.0    342.0     75.7      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

169回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minus', 0.134, 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.7          5,
    21         1          1.0      1.0      2.7          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.7          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.7          0.134,
    28         1          1.0      1.0      2.7          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.7          "multiply",
    35         1          1.0      1.0      2.7          "divide",
    36         1          1.0      1.0      2.7          "plas",
    37         1          1.0      1.0      2.7          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     35.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.7      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     44.4      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     22.2      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57         2          1.0      0.5     11.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     11.1      if isinstance(obj, str):
    61         2          1.0      0.5     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000465 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.1      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        355.0    355.0     76.3      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

170回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plas', 44, 100]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.4          20,
    23         1          1.0      1.0      2.4          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          1.0      1.0      2.4          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     36.6          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.6          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     57.1      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000612 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         77.0     77.0     12.6      inputValue = inputPart()
    89         1         10.0     10.0      1.6      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.7      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         25.0     25.0      4.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        487.0    487.0     79.6      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

171回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plas', 'plas', 26182576726545671723454736273454323454327667827345432763478372L]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          1.0      1.0      2.7          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.7          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.7          "multiply",
    35         1          1.0      1.0      2.7          "divide",
    36         1          1.0      1.0      2.7          "plas",
    37         1          1.0      1.0      2.7          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     35.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.7      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     28.6      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          1.0      0.3     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          1.0      0.3     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          3.0      1.0     42.9      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000473 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0     16.1      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        353.0    353.0     74.6      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

172回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[100, 766, 'minos']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          1.0      1.0      2.9          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          1.0      1.0      2.9          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     41.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.7          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     33.3      if isinstance(obj, int):
    52         2          1.0      0.5     16.7          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     16.7      if isinstance(obj, str):
    61         1          1.0      1.0     16.7          return 3

Total time: 2.3e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          0.0      0.0      0.0      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      4.3      def pr(x):
    68                                                   print x
    69         1         18.0     18.0     78.3      sep()
    70                                           
    71         1          1.0      1.0      4.3      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      4.3      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          0.0      0.0      0.0      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      4.3      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          1.0      1.0      4.3          result = "Operator is invalid."
    84         1          0.0      0.0      0.0      return result

Total time: 0.000469 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     14.9      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          3.0      3.0      0.6      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         33.0     33.0      7.0          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        348.0    348.0     74.2      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

173回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[5, 'あいう', 'あいう']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          1.0      1.0      2.6          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     33.3          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     28.6      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         2          2.0      1.0     28.6          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00046 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         69.0     69.0     15.0      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        352.0    352.0     76.5      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

174回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 'saerf', 0]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.8          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.8          543,
    18         1          1.0      1.0      2.8          766,
    19         1          1.0      1.0      2.8          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.8          100,
    22         1          1.0      1.0      2.8          20,
    23         1          1.0      1.0      2.8          111,
    24         1          1.0      1.0      2.8          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          1.0      1.0      2.8          "AAAd123482934",
    32         1          1.0      1.0      2.8          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     36.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     40.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     20.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000443 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.8      inputValue = inputPart()
    89         1          8.0      8.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.4      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        337.0    337.0     76.1      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

175回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0, 'multiply', 'multipy']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.8          543,
    18         1          1.0      1.0      2.8          766,
    19         1          1.0      1.0      2.8          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.8          111,
    24         1          1.0      1.0      2.8          371,
    25         1          1.0      1.0      2.8          0,
    26         1          1.0      1.0      2.8          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.8          "AAAd123482934",
    32         1          1.0      1.0      2.8          "minus",
    33         1          1.0      1.0      2.8          "devide",
    34         1          1.0      1.0      2.8          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     38.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         1          1.0      1.0     14.3          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000454 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.6      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        345.0    345.0     76.0      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

176回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[111, 26182576726545671723454736273454323454327667827345432763478372L, 'AAAd123482934']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.9          5,
    21         1          1.0      1.0      2.9          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.9          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.9          "divide",
    36         1          1.0      1.0      2.9          "plas",
    37         1          1.0      1.0      2.9          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     37.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     40.0      if isinstance(obj, int):
    52         1          1.0      1.0     10.0          return 1
    53                                           
    54         2          2.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     10.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00046 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.2      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        350.0    350.0     76.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

177回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[1, 766, 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          1.0      0.3     20.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     20.0      if isinstance(obj, str):
    61         1          1.0      1.0     20.0          return 3

Total time: 2.4e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          0.0      0.0      0.0      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      4.2      def pr(x):
    68                                                   print x
    69         1         18.0     18.0     75.0      sep()
    70                                           
    71         1          1.0      1.0      4.2      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      4.2      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          0.0      0.0      0.0      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      4.2      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          1.0      1.0      4.2          result = "Operator is invalid."
    84         1          1.0      1.0      4.2      return result

Total time: 0.000464 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.1      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         32.0     32.0      6.9          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        342.0    342.0     73.7      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

178回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0, 'plas', 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.8          1,
    16         1          1.0      1.0      2.8          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.8          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.8          0,
    26         1          1.0      1.0      2.8          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.8          0.134,
    28         1          1.0      1.0      2.8          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.8          "devide",
    34         1          1.0      1.0      2.8          "multiply",
    35         1          1.0      1.0      2.8          "divide",
    36         1          1.0      1.0      2.8          "plas",
    37         1          1.0      1.0      2.8          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     36.1          elements[random.randint(0,length)],
    43         1          4.0      4.0     11.1          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.8      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          1.0      0.3     20.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     20.0      if isinstance(obj, str):
    61         1          1.0      1.0     20.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000451 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.5      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         18.0     18.0      4.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        343.0    343.0     76.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

179回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multiply', 111, 'AAAd123482934']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.9          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.9          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     40.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.9      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     33.3      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     11.1      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     22.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     22.2      if isinstance(obj, str):
    61         2          1.0      0.5     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000507 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     14.0      inputValue = inputPart()
    89         1          9.0      9.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1         17.0     17.0      3.4      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         25.0     25.0      4.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        380.0    380.0     75.0      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

180回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multiply', 111, 26182576726545671723454736273454323454327667827345432763478372L]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          1.0      1.0      2.9          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          1.0      1.0      2.9          "minus",
    33         1          1.0      1.0      2.9          "devide",
    34         1          1.0      1.0      2.9          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.9          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     38.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.7          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     33.3      if isinstance(obj, int):
    52         1          1.0      1.0     11.1          return 1
    53                                           
    54         2          2.0      1.0     22.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     11.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     11.1      if isinstance(obj, str):
    61         1          1.0      1.0     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000462 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.2      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        352.0    352.0     76.2      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

181回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[5, 26182576726545671723454736273454323454327667827345432763478372L, 44]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 5.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.0          1,
    16         1          1.0      1.0      2.0          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.0          766,
    19         1          1.0      1.0      2.0          44,
    20         1          1.0      1.0      2.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.0          111,
    24         1          1.0      1.0      2.0          371,
    25         1          1.0      1.0      2.0          0,
    26         1          1.0      1.0      2.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.0          "plus",
    31         1          1.0      1.0      2.0          "AAAd123482934",
    32         1          1.0      1.0      2.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.0      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     33.3          elements[random.randint(0,length)],
    43         1         10.0     10.0     19.6          elements[random.randint(0,length)],
    44         1          8.0      8.0     15.7          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.0      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          5.0      1.7     55.6      if isinstance(obj, int):
    52         2          1.0      0.5     11.1          return 1
    53                                           
    54         1          1.0      1.0     11.1      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     11.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     11.1      if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000556 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         90.0     90.0     16.2      inputValue = inputPart()
    89         1         10.0     10.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1         14.0     14.0      2.5      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         27.0     27.0      4.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        404.0    404.0     72.7      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

182回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0, 'plas', 234]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     33.3          elements[random.randint(0,length)],
    43         1          4.0      4.0     10.3          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     33.3      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     16.7      if isinstance(obj, str):
    61         1          1.0      1.0     16.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00045 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.6      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        346.0    346.0     76.9      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

183回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 'plus', 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     36.6          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.2          elements[random.randint(0,length)],
    44         1          4.0      4.0      9.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 1.1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     27.3      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          3.0      1.0     27.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          3.0      1.0     27.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          2.0      0.7     18.2      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000472 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         74.0     74.0     15.7      inputValue = inputPart()
    89         1          8.0      8.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         21.0     21.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        354.0    354.0     75.0      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

184回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[371, 'devide', 766]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.9          234,
    17         1          1.0      1.0      2.9          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          1.0      1.0      2.9          20,
    23         1          1.0      1.0      2.9          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          1.0      1.0      2.9          "minus",
    33         1          1.0      1.0      2.9          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     40.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     33.3      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     16.7      if isinstance(obj, str):
    61         1          1.0      1.0     16.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000448 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     16.1      inputValue = inputPart()
    89         1          6.0      6.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         18.0     18.0      4.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        338.0    338.0     75.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

185回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 'AAAd123482934', 'minos']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.3          1,
    16         1          1.0      1.0      2.3          234,
    17         1          1.0      1.0      2.3          543,
    18         1          1.0      1.0      2.3          766,
    19         1          1.0      1.0      2.3          44,
    20         1          1.0      1.0      2.3          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.3          20,
    23         1          1.0      1.0      2.3          111,
    24         1          1.0      1.0      2.3          371,
    25         1          1.0      1.0      2.3          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.3          "saerf",
    30         1          1.0      1.0      2.3          "plus",
    31         1          1.0      1.0      2.3          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.3          "divide",
    36         1          1.0      1.0      2.3          "plas",
    37         1          1.0      1.0      2.3          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.3      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     34.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.4          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.3      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     33.3      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     22.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          2.0      0.7     22.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          1.0      0.3     11.1      if isinstance(obj, str):
    61         2          1.0      0.5     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00053 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0     14.3      inputValue = inputPart()
    89         1          9.0      9.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        410.0    410.0     77.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

186回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[111, 'AAAd123482934', 234]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          1.0      1.0      2.9          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          1.0      1.0      2.9          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     40.0          elements[random.randint(0,length)],
    43         1          6.0      6.0     17.1          elements[random.randint(0,length)],
    44         1          5.0      5.0     14.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     60.0      if isinstance(obj, int):
    52         2          2.0      1.0     40.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000451 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.5      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      4.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        339.0    339.0     75.2      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

187回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 'devide', 'saerf']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.9          234,
    17         1          1.0      1.0      2.9          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          1.0      1.0      2.9          20,
    23         1          1.0      1.0      2.9          111,
    24         1          1.0      1.0      2.9          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          1.0      1.0      2.9          "minus",
    33         1          1.0      1.0      2.9          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     37.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     40.0      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          1.0      0.3     10.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          1.0      0.3     10.0      if isinstance(obj, str):
    61         3          2.0      0.7     20.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000471 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     14.9      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        356.0    356.0     75.6      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

188回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 'multipy', 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.7          766,
    19         1          1.0      1.0      2.7          44,
    20         1          1.0      1.0      2.7          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.7          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.7          0.134,
    28         1          1.0      1.0      2.7          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     35.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.7      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     40.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     20.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000451 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         69.0     69.0     15.3      inputValue = inputPart()
    89         1          8.0      8.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        344.0    344.0     76.3      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

189回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multiply', 'divide', 100]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      3.0          1,
    16         1          1.0      1.0      3.0          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      3.0          100,
    22         1          1.0      1.0      3.0          20,
    23         1          1.0      1.0      3.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      3.0          "saerf",
    30         1          1.0      1.0      3.0          "plus",
    31         1          1.0      1.0      3.0          "AAAd123482934",
    32         1          1.0      1.0      3.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      3.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      3.0      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     39.4          elements[random.randint(0,length)],
    43         1          5.0      5.0     15.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     12.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     12.5      if isinstance(obj, str):
    61         2          1.0      0.5     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000458 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.3      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        346.0    346.0     75.5      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

190回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plas', 1, 44]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.9          5,
    21         1          1.0      1.0      2.9          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.9          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     37.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          5.0      5.0     14.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.9      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     40.0      if isinstance(obj, int):
    52         2          1.0      0.5     20.0          return 1
    53                                           
    54         1          1.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000455 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         69.0     69.0     15.2      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        352.0    352.0     77.4      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

191回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 0, 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          1.0      1.0      2.9          20,
    23         1          1.0      1.0      2.9          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.9          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     38.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.7          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     16.7      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000454 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.4      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        342.0    342.0     75.3      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

192回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[111, 'plas', 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.5          234,
    17         1          1.0      1.0      2.5          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.5          100,
    22         1          1.0      1.0      2.5          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.5          0.134,
    28         1          1.0      1.0      2.5          "あいう",
    29         1          1.0      1.0      2.5          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          1.0      1.0      2.5          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          2.0      2.0      5.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     37.5          elements[random.randint(0,length)],
    43         1          6.0      6.0     15.0          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     50.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          1.0      0.5     25.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000532 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0     14.3      inputValue = inputPart()
    89         1          6.0      6.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          9.0      9.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         24.0     24.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        408.0    408.0     76.7      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

193回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minos', 100, 'saerf']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.8          1,
    16         1          1.0      1.0      2.8          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.8          44,
    20         1          1.0      1.0      2.8          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.8          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.8          0.134,
    28         1          1.0      1.0      2.8          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.8          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     36.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.8      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     60.0      if isinstance(obj, int):
    52         1          1.0      1.0     20.0          return 1
    53                                           
    54         2          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          1.0      0.5     20.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000463 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.1      inputValue = inputPart()
    89         1          8.0      8.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        352.0    352.0     76.0      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

194回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0.134, 'AAAd123482934', 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.7          234,
    17         1          1.0      1.0      2.7          543,
    18         1          1.0      1.0      2.7          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          1.0      1.0      2.7          20,
    23         1          1.0      1.0      2.7          111,
    24         1          1.0      1.0      2.7          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          1.0      1.0      2.7          "minus",
    33         1          1.0      1.0      2.7          "devide",
    34         1          1.0      1.0      2.7          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     37.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     33.3      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     22.2      if isinstance(obj, float):
    55         2          2.0      1.0     22.2          return 1
    56                                           
    57         1          1.0      1.0     11.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     11.1      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000469 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     14.9      inputValue = inputPart()
    89         1          7.0      7.0      1.5      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        359.0    359.0     76.5      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

195回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[766, 'minus', 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          1.0      1.0      2.5          543,
    18         1          1.0      1.0      2.5          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.5          100,
    22         1          1.0      1.0      2.5          20,
    23         1          1.0      1.0      2.5          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.5          0.134,
    28         1          1.0      1.0      2.5          "あいう",
    29         1          1.0      1.0      2.5          "saerf",
    30         1          1.0      1.0      2.5          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          1.0      1.0      2.5          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     44.4      if isinstance(obj, int):
    52         2          1.0      0.5     11.1          return 1
    53                                           
    54         1          1.0      1.0     11.1      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     11.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     11.1      if isinstance(obj, str):
    61         1          1.0      1.0     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000498 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     14.7      inputValue = inputPart()
    89         1          5.0      5.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.6      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      4.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        383.0    383.0     76.9      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

196回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 26182576726545671723454736273454323454327667827345432763478372L, 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          2.0      2.0      5.1      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         2          1.0      0.5     14.3          return 1
    53                                           
    54         1          1.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000486 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     14.8      inputValue = inputPart()
    89         1          5.0      5.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.4      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        377.0    377.0     77.6      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

197回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plus', 26182576726545671723454736273454323454327667827345432763478372L, 'AAAd123482934']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     34.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     28.6      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     28.6      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          2.0      0.7     28.6      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          1.0      0.3     14.3      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000463 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.1      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        350.0    350.0     75.6      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

198回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 0.134, 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.9          5,
    21         1          1.0      1.0      2.9          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          1.0      1.0      2.9          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     41.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.7          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     75.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          0.0      0.0      0.0      if isinstance(obj, float):
    55         1          1.0      1.0     25.0          return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000467 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.2      inputValue = inputPart()
    89         1          8.0      8.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        357.0    357.0     76.4      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

199回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 'plas', 44]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          1.0      1.0      2.9          20,
    23         1          1.0      1.0      2.9          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          1.0      1.0      2.9          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     37.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          5.0      5.0     14.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.9      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     33.3      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     16.7      if isinstance(obj, str):
    61         1          1.0      1.0     16.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000459 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.3      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        346.0    346.0     75.4      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

200回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0, 'saerf', 234]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     34.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.2          elements[random.randint(0,length)],
    44         1          4.0      4.0      9.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     60.0      if isinstance(obj, int):
    52         2          1.0      0.5     20.0          return 1
    53                                           
    54         1          1.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000457 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         69.0     69.0     15.1      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         18.0     18.0      3.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        351.0    351.0     76.8      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

201回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['divide', 'devide', 100]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.3          1,
    16         1          1.0      1.0      2.3          234,
    17         1          1.0      1.0      2.3          543,
    18         1          1.0      1.0      2.3          766,
    19         1          1.0      1.0      2.3          44,
    20         1          1.0      1.0      2.3          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.3          111,
    24         1          1.0      1.0      2.3          371,
    25         1          1.0      1.0      2.3          0,
    26         1          1.0      1.0      2.3          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.3          "AAAd123482934",
    32         1          1.0      1.0      2.3          "minus",
    33         1          1.0      1.0      2.3          "devide",
    34         1          1.0      1.0      2.3          "multiply",
    35         1          1.0      1.0      2.3          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.3          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.3      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     32.6          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.6          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.6          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.3      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     28.6      if isinstance(obj, int):
    52         1          1.0      1.0     14.3          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         2          1.0      0.5     14.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000472 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.0      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         21.0     21.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        360.0    360.0     76.3      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

202回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 0.134, 234]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.7          543,
    18         1          1.0      1.0      2.7          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          1.0      1.0      2.7          20,
    23         1          1.0      1.0      2.7          111,
    24         1          1.0      1.0      2.7          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          1.0      1.0      2.7          "minus",
    33         1          1.0      1.0      2.7          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     37.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.7      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     25.0      if isinstance(obj, int):
    52         1          1.0      1.0     12.5          return 1
    53                                           
    54         2          2.0      1.0     25.0      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57         1          1.0      1.0     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     12.5      if isinstance(obj, str):
    61         1          1.0      1.0     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000467 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.0      inputValue = inputPart()
    89         1          8.0      8.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.6      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         16.0     16.0      3.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        363.0    363.0     77.7      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

203回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[1, 'plus', 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.7          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.7          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.7          0,
    26         1          1.0      1.0      2.7          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.7          0.134,
    28         1          1.0      1.0      2.7          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.7          "devide",
    34         1          1.0      1.0      2.7          "multiply",
    35         1          1.0      1.0      2.7          "divide",
    36         1          1.0      1.0      2.7          "plas",
    37         1          1.0      1.0      2.7          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     37.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     33.3      if isinstance(obj, int):
    52         2          1.0      0.5     16.7          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     16.7      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000497 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     14.7      inputValue = inputPart()
    89         1          6.0      6.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.6      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.6      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         19.0     19.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        386.0    386.0     77.7      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

204回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 'divide', 'saerf']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.7          234,
    17         1          1.0      1.0      2.7          543,
    18         1          1.0      1.0      2.7          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.7          20,
    23         1          1.0      1.0      2.7          111,
    24         1          1.0      1.0      2.7          371,
    25         1          1.0      1.0      2.7          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          1.0      1.0      2.7          "minus",
    33         1          1.0      1.0      2.7          "devide",
    34         1          1.0      1.0      2.7          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.7          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     37.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     40.0      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          1.0      0.3     10.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          1.0      0.3     10.0      if isinstance(obj, str):
    61         3          2.0      0.7     20.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000474 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         74.0     74.0     15.6      inputValue = inputPart()
    89         1          8.0      8.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        355.0    355.0     74.9      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

205回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[20, 'divide', 44]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     38.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     33.3      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     16.7      if isinstance(obj, str):
    61         1          1.0      1.0     16.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000446 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.9      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        341.0    341.0     76.5      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

206回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[5, 'multipy', 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.6          5,
    21         1          1.0      1.0      2.6          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     36.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          1.0      0.3     25.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     25.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     25.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000459 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.5      inputValue = inputPart()
    89         1          6.0      6.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         18.0     18.0      3.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        351.0    351.0     76.5      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

207回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[5, 234, 'divide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.7          543,
    18         1          1.0      1.0      2.7          766,
    19         1          1.0      1.0      2.7          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.7          20,
    23         1          1.0      1.0      2.7          111,
    24         1          1.0      1.0      2.7          371,
    25         1          1.0      1.0      2.7          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          1.0      1.0      2.7          "minus",
    33         1          1.0      1.0      2.7          "devide",
    34         1          1.0      1.0      2.7          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.7          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     37.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         2          1.0      0.5     12.5          return 1
    53                                           
    54         1          1.0      1.0     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     12.5      if isinstance(obj, str):
    61         1          1.0      1.0     12.5          return 3

Total time: 2.8e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      3.6      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      3.6      def pr(x):
    68                                                   print x
    69         1         22.0     22.0     78.6      sep()
    70                                           
    71         1          0.0      0.0      0.0      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      3.6      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      3.6      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          0.0      0.0      0.0      elif list[2] == "divide":
    78         1          1.0      1.0      3.6          if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81         1          1.0      1.0      3.6              result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84         1          0.0      0.0      0.0      return result

Total time: 0.000501 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     14.6      inputValue = inputPart()
    89         1          6.0      6.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.6      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         38.0     38.0      7.6          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        368.0    368.0     73.5      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

208回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[234, 100, 766]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.7          766,
    19         1          1.0      1.0      2.7          44,
    20         1          1.0      1.0      2.7          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.7          0,
    26         1          1.0      1.0      2.7          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.7          0.134,
    28         1          1.0      1.0      2.7          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.7          "divide",
    36         1          1.0      1.0      2.7          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     37.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0    100.0      if isinstance(obj, int):
    52         3          0.0      0.0      0.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000445 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     16.0      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        342.0    342.0     76.9      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

209回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[371, 'plas', 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     33.3          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     60.0      if isinstance(obj, int):
    52         1          1.0      1.0     20.0          return 1
    53                                           
    54         2          0.0      0.0      0.0      if isinstance(obj, float):
    55         1          1.0      1.0     20.0          return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000465 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.1      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         16.0     16.0      3.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        361.0    361.0     77.6      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

210回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 'multiply', 20]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.4          100,
    22         1          1.0      1.0      2.4          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     34.1          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.6          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         1          1.0      1.0     12.5          return 1
    53                                           
    54         2          1.0      0.5     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     12.5      if isinstance(obj, str):
    61         2          1.0      0.5     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000457 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     15.8      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         21.0     21.0      4.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        340.0    340.0     74.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

211回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[1, 100, 20]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.2          1,
    16         1          1.0      1.0      2.2          234,
    17         1          1.0      1.0      2.2          543,
    18         1          1.0      1.0      2.2          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.2          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.2          111,
    24         1          1.0      1.0      2.2          371,
    25         1          1.0      1.0      2.2          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.2          "あいう",
    29         1          1.0      1.0      2.2          "saerf",
    30         1          1.0      1.0      2.2          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.2          "multiply",
    35         1          1.0      1.0      2.2          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.2          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.2      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     37.0          elements[random.randint(0,length)],
    43         1          7.0      7.0     15.2          elements[random.randint(0,length)],
    44         1          6.0      6.0     13.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.2      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     66.7      if isinstance(obj, int):
    52         3          1.0      0.3     33.3          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000604 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         83.0     83.0     13.7      inputValue = inputPart()
    89         1          6.0      6.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         23.0     23.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        482.0    482.0     79.8      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

212回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[234, 111, 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     33.3          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 1e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          1.0      0.3    100.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000484 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     14.7      inputValue = inputPart()
    89         1          6.0      6.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      1.0      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         18.0     18.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        376.0    376.0     77.7      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

213回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plus', 'minos', 'multipy']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     34.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.2          elements[random.randint(0,length)],
    44         1          4.0      4.0      9.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     40.0      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          1.0      0.3     10.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          1.0      0.3     10.0      if isinstance(obj, str):
    61         3          2.0      0.7     20.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00046 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.4      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        348.0    348.0     75.7      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

214回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multipy', 'あいう', 'あいう']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.4          100,
    22         1          1.0      1.0      2.4          20,
    23         1          1.0      1.0      2.4          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          1.0      1.0      2.4          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     35.7          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          4.0      4.0      9.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 1.3e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     30.8      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          3.0      1.0     23.1      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          3.0      1.0     23.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          2.0      0.7     15.4      if isinstance(obj, str):
    61         3          1.0      0.3      7.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000569 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         79.0     79.0     13.9      inputValue = inputPart()
    89         1          9.0      9.0      1.6      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         27.0     27.0      4.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        440.0    440.0     77.3      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

215回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[766, 371, 'minus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.5          543,
    18         1          1.0      1.0      2.5          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.5          20,
    23         1          1.0      1.0      2.5          111,
    24         1          1.0      1.0      2.5          371,
    25         1          1.0      1.0      2.5          0,
    26         1          1.0      1.0      2.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.5          "minus",
    33         1          1.0      1.0      2.5          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     33.3      if isinstance(obj, int):
    52         2          1.0      0.5     16.7          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     16.7      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 2.3e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          0.0      0.0      0.0      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      4.3      def pr(x):
    68                                                   print x
    69         1         20.0     20.0     87.0      sep()
    70                                           
    71         1          1.0      1.0      4.3      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          0.0      0.0      0.0      elif list[2] == "minus":
    74         1          1.0      1.0      4.3          result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84         1          0.0      0.0      0.0      return result

Total time: 0.000479 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     15.0      inputValue = inputPart()
    89         1          5.0      5.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         31.0     31.0      6.5          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        358.0    358.0     74.7      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

216回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[234, 234, 'saerf']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     31.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     66.7      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     33.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 2.3e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      4.3      def sep():
    66                                                   print "--------------------------------------"
    67         1          0.0      0.0      0.0      def pr(x):
    68                                                   print x
    69         1         18.0     18.0     78.3      sep()
    70                                           
    71         1          0.0      0.0      0.0      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      4.3      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      4.3      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          0.0      0.0      0.0      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          1.0      1.0      4.3          result = "Operator is invalid."
    84         1          1.0      1.0      4.3      return result

Total time: 0.000468 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.0      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          3.0      3.0      0.6      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         33.0     33.0      7.1          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        345.0    345.0     73.7      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

217回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minus', 'multiply', 'minus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          1.0      1.0      2.6          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     36.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          1.0      0.3     14.3      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          1.0      0.3     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          2.0      0.7     28.6      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          2.0      0.7     28.6      if isinstance(obj, str):
    61         3          1.0      0.3     14.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00053 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     13.8      inputValue = inputPart()
    89         1          9.0      9.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         22.0     22.0      4.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        408.0    408.0     77.0      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

218回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plus', 111, 'minos']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.6          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     36.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     22.2      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     22.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     22.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     22.2      if isinstance(obj, str):
    61         2          1.0      0.5     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000463 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.3      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        348.0    348.0     75.2      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

219回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minos', 1, 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.9          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.9          "divide",
    36         1          1.0      1.0      2.9          "plas",
    37         1          1.0      1.0      2.9          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     40.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          5.0      5.0     14.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     57.1      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000657 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     10.7      inputValue = inputPart()
    89         1          9.0      9.0      1.4      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      2.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        550.0    550.0     83.7      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

220回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[100, 'minos', 5]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      3.0          1,
    16         1          1.0      1.0      3.0          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      3.0          5,
    21         1          1.0      1.0      3.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      3.0          "saerf",
    30         1          1.0      1.0      3.0          "plus",
    31         1          1.0      1.0      3.0          "AAAd123482934",
    32         1          1.0      1.0      3.0          "minus",
    33         1          1.0      1.0      3.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      3.0          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      3.0      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     39.4          elements[random.randint(0,length)],
    43         1          5.0      5.0     15.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     12.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     66.7      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000469 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     14.9      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          9.0      9.0      1.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         18.0     18.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        360.0    360.0     76.8      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

221回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[5, 234, 'plus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.7          5,
    21         1          1.0      1.0      2.7          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.7          0,
    26         1          1.0      1.0      2.7          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.7          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.7          "minus",
    33         1          1.0      1.0      2.7          "devide",
    34         1          1.0      1.0      2.7          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     40.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     40.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     20.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 2.7e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          0.0      0.0      0.0      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      3.7      def pr(x):
    68                                                   print x
    69         1         23.0     23.0     85.2      sep()
    70                                           
    71         1          1.0      1.0      3.7      if list[2] == "plus":
    72         1          1.0      1.0      3.7          result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84         1          1.0      1.0      3.7      return result

Total time: 0.000541 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         74.0     74.0     13.7      inputValue = inputPart()
    89         1          6.0      6.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          3.0      3.0      0.6      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         35.0     35.0      6.5          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        411.0    411.0     76.0      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

222回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 'devide', 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 0.00015 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          3.0      3.0      2.0          1,
    16         1          5.0      5.0      3.3          234,
    17         1          1.0      1.0      0.7          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      0.7          44,
    20         1          1.0      1.0      0.7          5,
    21         1          1.0      1.0      0.7          100,
    22         1          1.0      1.0      0.7          20,
    23         1          2.0      2.0      1.3          111,
    24         1          2.0      2.0      1.3          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      0.7          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      0.7          0.134,
    28         1          1.0      1.0      0.7          "あいう",
    29         1          1.0      1.0      0.7          "saerf",
    30         1          1.0      1.0      0.7          "plus",
    31         1          2.0      2.0      1.3          "AAAd123482934",
    32         1          1.0      1.0      0.7          "minus",
    33         1          1.0      1.0      0.7          "devide",
    34         1          2.0      2.0      1.3          "multiply",
    35         1          2.0      2.0      1.3          "divide",
    36         1          1.0      1.0      0.7          "plas",
    37         1          2.0      2.0      1.3          "minos",
    38         1          3.0      3.0      2.0          "multipy"
    39                                                   ]
    40         1          5.0      5.0      3.3      length = len(elements)-1
    41                                               extraction = [
    42         1         66.0     66.0     44.0          elements[random.randint(0,length)],
    43         1         25.0     25.0     16.7          elements[random.randint(0,length)],
    44         1         17.0     17.0     11.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      0.7      return extraction

Total time: 1.9e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3         12.0      4.0     63.2      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          3.0      1.5     15.8      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     10.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     10.5      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.001439 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        268.0    268.0     18.6      inputValue = inputPart()
    89         1         30.0     30.0      2.1      judgeValue0 = judge(inputValue[0])
    90         1         17.0     17.0      1.2      judgeValue1 = judge(inputValue[1])
    91         1         10.0     10.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          2.0      2.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.1          output = "error"
    96                                               
    97         1         80.0     80.0      5.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       1029.0   1029.0     71.5      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

223回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[20, 5, 100]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          1.0      1.0      2.5          543,
    18         1          1.0      1.0      2.5          766,
    19         1          1.0      1.0      2.5          44,
    20         1          1.0      1.0      2.5          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.5          111,
    24         1          1.0      1.0      2.5          371,
    25         1          1.0      1.0      2.5          0,
    26         1          1.0      1.0      2.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.5          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.5          "minus",
    33         1          1.0      1.0      2.5          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     32.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     60.0      if isinstance(obj, int):
    52         3          2.0      0.7     40.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000451 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         74.0     74.0     16.4      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        343.0    343.0     76.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

224回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[543, 'plas', 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.5          100,
    22         1          1.0      1.0      2.5          20,
    23         1          1.0      1.0      2.5          111,
    24         1          1.0      1.0      2.5          371,
    25         1          1.0      1.0      2.5          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.5          "minus",
    33         1          1.0      1.0      2.5          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          1.0      1.0      2.5          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     75.0      if isinstance(obj, int):
    52         2          1.0      0.5     25.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00045 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         69.0     69.0     15.3      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.6      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        341.0    341.0     75.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

225回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0.134, 'plus', 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     31.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 1.1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     27.3      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          3.0      1.0     27.3      if isinstance(obj, float):
    55         1          1.0      1.0      9.1          return 1
    56                                           
    57         2          2.0      1.0     18.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          2.0      1.0     18.2      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000457 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.3      inputValue = inputPart()
    89         1          7.0      7.0      1.5      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        345.0    345.0     75.5      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

226回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 'multiply', 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.7          234,
    17         1          1.0      1.0      2.7          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          1.0      1.0      2.7          20,
    23         1          1.0      1.0      2.7          111,
    24         1          1.0      1.0      2.7          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          1.0      1.0      2.7          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     37.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.7      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     28.6      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     28.6      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          2.0      0.7     28.6      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          1.0      0.3     14.3      if isinstance(obj, str):
    61         3          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000466 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.0      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        356.0    356.0     76.4      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

227回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 'plus', 26182576726545671723454736273454323454327667827345432763478372L]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.5          234,
    17         1          1.0      1.0      2.5          543,
    18         1          1.0      1.0      2.5          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.5          20,
    23         1          1.0      1.0      2.5          111,
    24         1          1.0      1.0      2.5          371,
    25         1          1.0      1.0      2.5          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.5          "plus",
    31         1          1.0      1.0      2.5          "AAAd123482934",
    32         1          1.0      1.0      2.5          "minus",
    33         1          1.0      1.0      2.5          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     37.5          elements[random.randint(0,length)],
    43         1          6.0      6.0     15.0          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     75.0      if isinstance(obj, int):
    52         1          1.0      1.0     25.0          return 1
    53                                           
    54         2          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000471 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     15.3      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        361.0    361.0     76.6      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

228回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plus', 0, 'minus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.6          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     36.8          elements[random.randint(0,length)],
    43         1          4.0      4.0     10.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     12.5      if isinstance(obj, str):
    61         2          2.0      1.0     25.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000456 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.4      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         18.0     18.0      3.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        345.0    345.0     75.7      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

229回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[100, 'multipy', 'plas']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.9          234,
    17         1          1.0      1.0      2.9          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          1.0      1.0      2.9          20,
    23         1          1.0      1.0      2.9          111,
    24         1          1.0      1.0      2.9          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          1.0      1.0      2.9          "minus",
    33         1          1.0      1.0      2.9          "devide",
    34         1          1.0      1.0      2.9          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     37.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     25.0      if isinstance(obj, int):
    52         1          1.0      1.0     12.5          return 1
    53                                           
    54         2          2.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     25.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     12.5      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000451 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         69.0     69.0     15.3      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.6      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        342.0    342.0     75.8      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

230回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multiply', 'saerf', 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          1.0      1.0      2.7          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.7          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.7          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     40.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.7      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          1.0      0.3     25.0      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          1.0      0.3     25.0      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57         2          1.0      0.5     25.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     25.0      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000456 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.6      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        345.0    345.0     75.7      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

231回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['divide', 'AAAd123482934', 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.9          5,
    21         1          1.0      1.0      2.9          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          1.0      1.0      2.9          "minus",
    33         1          1.0      1.0      2.9          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.9          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     37.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          5.0      5.0     14.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.9      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          1.0      0.3     12.5      if isinstance(obj, str):
    61         3          2.0      0.7     25.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00046 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         69.0     69.0     15.0      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        346.0    346.0     75.2      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

232回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0, 44, 100]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          1.0      1.0      2.5          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.5          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.5          0,
    26         1          1.0      1.0      2.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.5          0.134,
    28         1          1.0      1.0      2.5          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.5          "AAAd123482934",
    32         1          1.0      1.0      2.5          "minus",
    33         1          1.0      1.0      2.5          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.0          elements[random.randint(0,length)],
    43         1          6.0      6.0     15.0          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     66.7      if isinstance(obj, int):
    52         3          1.0      0.3     33.3          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000618 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0     12.3      inputValue = inputPart()
    89         1          6.0      6.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.6      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      3.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        502.0    502.0     81.2      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

233回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minus', 'multipy', 766]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     33.3          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     16.7      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000461 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.2      inputValue = inputPart()
    89         1          8.0      8.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      4.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        349.0    349.0     75.7      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

234回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 'minus', 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.8          234,
    17         1          1.0      1.0      2.8          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.8          100,
    22         1          1.0      1.0      2.8          20,
    23         1          1.0      1.0      2.8          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          1.0      1.0      2.8          "AAAd123482934",
    32         1          1.0      1.0      2.8          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     38.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.8      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     28.6      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     28.6      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     28.6      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00045 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.6      inputValue = inputPart()
    89         1          8.0      8.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         18.0     18.0      4.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        341.0    341.0     75.8      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

235回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multiply', 'minus', 'AAAd123482934']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     34.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     22.2      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     22.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          2.0      0.7     22.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          3.0      1.0     33.3      if isinstance(obj, str):
    61         3          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00046 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.2      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        349.0    349.0     75.9      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

236回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 20, 5]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.9          5,
    21         1          1.0      1.0      2.9          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.9          0,
    26         1          1.0      1.0      2.9          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.9          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          1.0      1.0      2.9          "minus",
    33         1          1.0      1.0      2.9          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     40.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         2          1.0      0.5     14.3          return 1
    53                                           
    54         1          1.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000484 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     15.1      inputValue = inputPart()
    89         1          8.0      8.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         18.0     18.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        374.0    374.0     77.3      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

237回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[1, 234, 'saerf']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     34.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     33.3      if isinstance(obj, int):
    52         2          1.0      0.5     16.7          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     16.7      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 2.1e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          0.0      0.0      0.0      def sep():
    66                                                   print "--------------------------------------"
    67         1          0.0      0.0      0.0      def pr(x):
    68                                                   print x
    69         1         18.0     18.0     85.7      sep()
    70                                           
    71         1          1.0      1.0      4.8      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          0.0      0.0      0.0      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      4.8      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      4.8      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          0.0      0.0      0.0          result = "Operator is invalid."
    84         1          0.0      0.0      0.0      return result

Total time: 0.000477 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     14.9      inputValue = inputPart()
    89         1          6.0      6.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         33.0     33.0      6.9          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        352.0    352.0     73.8      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

238回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multiply', 'AAAd123482934', 'あいう']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.9          234,
    17         1          1.0      1.0      2.9          543,
    18         1          1.0      1.0      2.9          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          1.0      1.0      2.9          20,
    23         1          1.0      1.0      2.9          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.9          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     37.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     40.0      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          3.0      1.0     30.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          2.0      0.7     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          1.0      0.3     10.0      if isinstance(obj, str):
    61         3          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000467 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.2      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        353.0    353.0     75.6      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

239回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[100, 'あいう', 234]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     34.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61         1          1.0      1.0     14.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000466 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.2      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        359.0    359.0     77.0      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

240回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plus', 234, 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.5          44,
    20         1          1.0      1.0      2.5          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.5          371,
    25         1          1.0      1.0      2.5          0,
    26         1          1.0      1.0      2.5          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.5          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.5          "minus",
    33         1          1.0      1.0      2.5          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     50.0      if isinstance(obj, int):
    52         2          1.0      0.5     25.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          1.0      1.0     25.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000447 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.9      inputValue = inputPart()
    89         1          8.0      8.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        343.0    343.0     76.7      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

241回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[234, 5, 'multipy']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          1.0      1.0      2.6          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     34.2          elements[random.randint(0,length)],
    43         1          6.0      6.0     15.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         2          1.0      0.5     16.7          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          1.0      1.0     16.7          return 3

Total time: 2.8e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      3.6      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      3.6      def pr(x):
    68                                                   print x
    69         1         22.0     22.0     78.6      sep()
    70                                           
    71         1          0.0      0.0      0.0      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      3.6      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      3.6      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          0.0      0.0      0.0      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          1.0      1.0      3.6          result = "Operator is invalid."
    84         1          1.0      1.0      3.6      return result

Total time: 0.000476 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     14.9      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          3.0      3.0      0.6      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         37.0     37.0      7.8          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        350.0    350.0     73.5      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

242回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['divide', 'devide', 44]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     34.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     33.3      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     22.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     11.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     11.1      if isinstance(obj, str):
    61         2          2.0      1.0     22.2          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000462 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.4      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        351.0    351.0     76.0      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

243回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[371, 0.134, 20]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.4          100,
    22         1          1.0      1.0      2.4          20,
    23         1          1.0      1.0      2.4          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          1.0      1.0      2.4          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     35.7          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     50.0      if isinstance(obj, int):
    52         2          1.0      0.5     25.0          return 1
    53                                           
    54         1          1.0      1.0     25.0      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00055 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0     13.8      inputValue = inputPart()
    89         1          6.0      6.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         24.0     24.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        430.0    430.0     78.2      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

244回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[5, 'multipy', 234]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     34.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          1.0      0.3     25.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     25.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     25.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     25.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000457 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.3      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        349.0    349.0     76.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

245回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[1, 111, 0]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.8          234,
    17         1          1.0      1.0      2.8          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.8          100,
    22         1          1.0      1.0      2.8          20,
    23         1          1.0      1.0      2.8          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.8          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          1.0      1.0      2.8          "AAAd123482934",
    32         1          1.0      1.0      2.8          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.8          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     38.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         3          3.0      1.0     50.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00046 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.4      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         22.0     22.0      4.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        351.0    351.0     76.3      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

246回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minus', 'devide', 'multipy']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.7          234,
    17         1          1.0      1.0      2.7          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.7          0.134,
    28         1          1.0      1.0      2.7          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.7          "multiply",
    35         1          1.0      1.0      2.7          "divide",
    36         1          1.0      1.0      2.7          "plas",
    37         1          1.0      1.0      2.7          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     37.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          1.0      0.3     16.7      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          1.0      0.3     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          1.0      0.3     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          2.0      0.7     33.3      if isinstance(obj, str):
    61         3          1.0      0.3     16.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000489 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     14.9      inputValue = inputPart()
    89         1          9.0      9.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.4      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.4      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         18.0     18.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        371.0    371.0     75.9      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

247回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plas', 'あいう', 5]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     34.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     60.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000467 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.2      inputValue = inputPart()
    89         1          8.0      8.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        353.0    353.0     75.6      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

248回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[1, 0, 111]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          1.0      1.0      2.7          20,
    23         1          1.0      1.0      2.7          111,
    24         1          1.0      1.0      2.7          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          1.0      1.0      2.7          "minus",
    33         1          1.0      1.0      2.7          "devide",
    34         1          1.0      1.0      2.7          "multiply",
    35         1          1.0      1.0      2.7          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.7          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     37.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 2e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          1.0      0.3     50.0      if isinstance(obj, int):
    52         3          1.0      0.3     50.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000453 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     16.1      inputValue = inputPart()
    89         1          6.0      6.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         19.0     19.0      4.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        345.0    345.0     76.2      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

249回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 44, 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.8          234,
    17         1          1.0      1.0      2.8          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.8          100,
    22         1          1.0      1.0      2.8          20,
    23         1          1.0      1.0      2.8          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.8          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          1.0      1.0      2.8          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.8          "plas",
    37         1          1.0      1.0      2.8          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     36.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.8      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         2          1.0      0.5     16.7          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000464 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     15.5      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         21.0     21.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        352.0    352.0     75.9      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

250回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['AAAd123482934', 'minus', 'multiply']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.7          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.7          44,
    20         1          1.0      1.0      2.7          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.7          0,
    26         1          1.0      1.0      2.7          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.7          0.134,
    28         1          1.0      1.0      2.7          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.7          "multiply",
    35         1          1.0      1.0      2.7          "divide",
    36         1          1.0      1.0      2.7          "plas",
    37         1          1.0      1.0      2.7          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     37.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     44.4      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     22.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          1.0      0.3     11.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          0.0      0.0      0.0      if isinstance(obj, str):
    61         3          2.0      0.7     22.2          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000512 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     14.1      inputValue = inputPart()
    89         1          9.0      9.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.2      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         22.0     22.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        394.0    394.0     77.0      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

251回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[371, 'multipy', 'saerf']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.9          5,
    21         1          1.0      1.0      2.9          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.9          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.9          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     40.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     40.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     20.0      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000455 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.4      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          9.0      9.0      2.0      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         21.0     21.0      4.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        342.0    342.0     75.2      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

252回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[543, 'multiply', 'multipy']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          1.0      1.0      2.5          543,
    18         1          1.0      1.0      2.5          766,
    19         1          1.0      1.0      2.5          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.5          100,
    22         1          1.0      1.0      2.5          20,
    23         1          1.0      1.0      2.5          111,
    24         1          1.0      1.0      2.5          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.5          "あいう",
    29         1          1.0      1.0      2.5          "saerf",
    30         1          1.0      1.0      2.5          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          1.0      1.0      2.5          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     50.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     16.7      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000473 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     15.4      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        360.0    360.0     76.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

253回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 234, 'saerf']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     33.3          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     28.6      if isinstance(obj, int):
    52         1          1.0      1.0     14.3          return 1
    53                                           
    54         2          2.0      1.0     28.6      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     28.6      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000467 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.0      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        356.0    356.0     76.2      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

254回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 'divide', 5]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          2.0      2.0      5.1          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.6          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     38.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     60.0      if isinstance(obj, int):
    52         2          1.0      0.5     20.0          return 1
    53                                           
    54         1          1.0      1.0     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000522 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         75.0     75.0     14.4      inputValue = inputPart()
    89         1          6.0      6.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          9.0      9.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         19.0     19.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        406.0    406.0     77.8      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

255回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minos', 371, 111]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     33.3          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          6.0      6.0     14.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          2.0      2.0     28.6      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000476 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0     16.0      inputValue = inputPart()
    89         1         10.0     10.0      2.1      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        360.0    360.0     75.6      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

256回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['AAAd123482934', 'minos', 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.6          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.6          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     34.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     28.6      if isinstance(obj, int):
    52         1          1.0      1.0     14.3          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     28.6      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000451 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         68.0     68.0     15.1      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.6      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        344.0    344.0     76.3      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

257回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[5, 543, 'multiply']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.8          234,
    17         1          1.0      1.0      2.8          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.8          100,
    22         1          1.0      1.0      2.8          20,
    23         1          1.0      1.0      2.8          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          1.0      1.0      2.8          "AAAd123482934",
    32         1          1.0      1.0      2.8          "minus",
    33         1          1.0      1.0      2.8          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     41.7          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     75.0      if isinstance(obj, int):
    52         2          1.0      0.5     25.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 2.4e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      4.2      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      4.2      def pr(x):
    68                                                   print x
    69         1         18.0     18.0     75.0      sep()
    70                                           
    71         1          0.0      0.0      0.0      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      4.2      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      4.2      elif list[2] == "multiply":
    76         1          1.0      1.0      4.2          result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84         1          1.0      1.0      4.2      return result

Total time: 0.000488 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     14.5      inputValue = inputPart()
    89         1          5.0      5.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.6      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         32.0     32.0      6.6          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        365.0    365.0     74.8      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

258回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[111, 44, 'minus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.9          234,
    17         1          1.0      1.0      2.9          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          1.0      1.0      2.9          20,
    23         1          1.0      1.0      2.9          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          1.0      1.0      2.9          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.9          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     38.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.7          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     80.0      if isinstance(obj, int):
    52         2          1.0      0.5     20.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 2.1e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      4.8      def sep():
    66                                                   print "--------------------------------------"
    67         1          0.0      0.0      0.0      def pr(x):
    68                                                   print x
    69         1         18.0     18.0     85.7      sep()
    70                                           
    71         1          0.0      0.0      0.0      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      4.8      elif list[2] == "minus":
    74         1          1.0      1.0      4.8          result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84         1          0.0      0.0      0.0      return result

Total time: 0.000474 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     15.4      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         31.0     31.0      6.5          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        348.0    348.0     73.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

259回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[1, 'AAAd123482934', 543]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.6          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     34.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     33.3      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     16.7      if isinstance(obj, str):
    61         1          1.0      1.0     16.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000454 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.4      inputValue = inputPart()
    89         1          6.0      6.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        349.0    349.0     76.9      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

260回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multipy', 'multipy', 'plas']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     34.1          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.6          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          1.0      0.3     12.5      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          1.0      0.3     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          2.0      0.7     25.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          3.0      1.0     37.5      if isinstance(obj, str):
    61         3          1.0      0.3     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000467 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.2      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        355.0    355.0     76.0      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

261回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[1, 234, 'plus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          1.0      1.0      2.9          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          1.0      1.0      2.9          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     41.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.7          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     33.3      if isinstance(obj, int):
    52         2          1.0      0.5     16.7          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     16.7      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 2.1e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      4.8      def sep():
    66                                                   print "--------------------------------------"
    67         1          0.0      0.0      0.0      def pr(x):
    68                                                   print x
    69         1         18.0     18.0     85.7      sep()
    70                                           
    71         1          1.0      1.0      4.8      if list[2] == "plus":
    72         1          0.0      0.0      0.0          result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84         1          1.0      1.0      4.8      return result

Total time: 0.000471 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     14.9      inputValue = inputPart()
    89         1          6.0      6.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         29.0     29.0      6.2          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        351.0    351.0     74.5      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

262回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plas', 26182576726545671723454736273454323454327667827345432763478372L, 'plus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.6          5,
    21         1          1.0      1.0      2.6          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          2.0      2.0      5.1      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     38.5          elements[random.randint(0,length)],
    43         1          6.0      6.0     15.4          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     30.0      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          2.0      0.7     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          2.0      0.7     20.0      if isinstance(obj, str):
    61         2          1.0      0.5     10.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00054 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0     14.1      inputValue = inputPart()
    89         1          9.0      9.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      3.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        416.0    416.0     77.0      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

263回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[100, 'saerf', 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.5          44,
    20         1          1.0      1.0      2.5          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.5          111,
    24         1          1.0      1.0      2.5          371,
    25         1          1.0      1.0      2.5          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.5          "plus",
    31         1          1.0      1.0      2.5          "AAAd123482934",
    32         1          1.0      1.0      2.5          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.5          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          2.0      2.0      5.0      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     40.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     66.7      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     16.7      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000553 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         82.0     82.0     14.8      inputValue = inputPart()
    89         1          6.0      6.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          9.0      9.0      1.6      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         25.0     25.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        425.0    425.0     76.9      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

264回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 234, 'plus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     36.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         1          1.0      1.0     12.5          return 1
    53                                           
    54         2          1.0      0.5     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     12.5      if isinstance(obj, str):
    61         1          1.0      1.0     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000451 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.5      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.6      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        342.0    342.0     75.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

265回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[371, 0.134, 'multiply']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.4          100,
    22         1          1.0      1.0      2.4          20,
    23         1          1.0      1.0      2.4          111,
    24         1          1.0      1.0      2.4          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.4          "saerf",
    30         1          1.0      1.0      2.4          "plus",
    31         1          1.0      1.0      2.4          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     34.1          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.6          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     50.0      if isinstance(obj, int):
    52         1          1.0      1.0     12.5          return 1
    53                                           
    54         2          2.0      1.0     25.0      if isinstance(obj, float):
    55         1          1.0      1.0     12.5          return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 2.4e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          0.0      0.0      0.0      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      4.2      def pr(x):
    68                                                   print x
    69         1         20.0     20.0     83.3      sep()
    70                                           
    71         1          1.0      1.0      4.2      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      4.2      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          0.0      0.0      0.0      elif list[2] == "multiply":
    76         1          1.0      1.0      4.2          result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84         1          0.0      0.0      0.0      return result

Total time: 0.00052 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         75.0     75.0     14.4      inputValue = inputPart()
    89         1          5.0      5.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.2      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         34.0     34.0      6.5          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        390.0    390.0     75.0      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

266回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0, 100, 111]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.8          234,
    17         1          1.0      1.0      2.8          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.8          100,
    22         1          1.0      1.0      2.8          20,
    23         1          1.0      1.0      2.8          111,
    24         1          1.0      1.0      2.8          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          1.0      1.0      2.8          "AAAd123482934",
    32         1          1.0      1.0      2.8          "minus",
    33         1          1.0      1.0      2.8          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     38.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     60.0      if isinstance(obj, int):
    52         3          2.0      0.7     40.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000448 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.6      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        345.0    345.0     77.0      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

267回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plas', 44, 'divide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          1.0      1.0      2.6          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     36.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     50.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          2.0      1.0     50.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000442 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.8      inputValue = inputPart()
    89         1          8.0      8.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.4      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         16.0     16.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        336.0    336.0     76.0      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

268回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[234, 'divide', 'あいう']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.7          5,
    21         1          1.0      1.0      2.7          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.7          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          1.0      1.0      2.7          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.7          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     37.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.7      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     28.6      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         2          2.0      1.0     28.6          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000481 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     15.2      inputValue = inputPart()
    89         1          5.0      5.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        370.0    370.0     76.9      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

269回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plas', 'multipy', 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.6          5,
    21         1          1.0      1.0      2.6          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     38.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     33.3      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     16.7      if isinstance(obj, str):
    61         2          2.0      1.0     33.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000535 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         77.0     77.0     14.4      inputValue = inputPart()
    89         1         10.0     10.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         24.0     24.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        409.0    409.0     76.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

270回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 111, 371]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          1.0      1.0      2.9          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.9          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.9          "plas",
    37         1          1.0      1.0      2.9          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     37.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 2e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7    100.0      if isinstance(obj, int):
    52         3          0.0      0.0      0.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000461 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         75.0     75.0     16.3      inputValue = inputPart()
    89         1          6.0      6.0      1.3      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        354.0    354.0     76.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

271回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['saerf', 5, 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.8          1,
    16         1          1.0      1.0      2.8          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.8          44,
    20         1          1.0      1.0      2.8          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.8          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.8          0.134,
    28         1          1.0      1.0      2.8          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.8          "divide",
    36         1          1.0      1.0      2.8          "plas",
    37         1          1.0      1.0      2.8          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     36.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.8      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     40.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          2.0      1.0     40.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000458 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.3      inputValue = inputPart()
    89         1          8.0      8.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         20.0     20.0      4.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        347.0    347.0     75.8      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

272回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[766, 'multiply', 'minos']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.6          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         1          1.0      1.0     14.3          return 1
    53                                           
    54         2          1.0      0.5     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     14.3      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00046 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.2      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        350.0    350.0     76.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

273回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['saerf', 'devide', 766]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.6          5,
    21         1          1.0      1.0      2.6          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     36.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     33.3      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     22.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     22.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     11.1      if isinstance(obj, str):
    61         2          1.0      0.5     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000466 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         74.0     74.0     15.9      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        352.0    352.0     75.5      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

274回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multipy', 1, 'AAAd123482934']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.1e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          1.0      1.0      2.4          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     34.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     33.3      if isinstance(obj, int):
    52         1          1.0      1.0     16.7          return 1
    53                                           
    54         2          1.0      0.5     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     16.7      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000453 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.5      inputValue = inputPart()
    89         1          9.0      9.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          5.0      5.0      1.1      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        345.0    345.0     76.2      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

275回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plas', 'minos', 0.134]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.3          1,
    16         1          1.0      1.0      2.3          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.3          766,
    19         1          1.0      1.0      2.3          44,
    20         1          1.0      1.0      2.3          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.3          20,
    23         1          1.0      1.0      2.3          111,
    24         1          1.0      1.0      2.3          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.3          "あいう",
    29         1          1.0      1.0      2.3          "saerf",
    30         1          1.0      1.0      2.3          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.3          "multiply",
    35         1          1.0      1.0      2.3          "divide",
    36         1          1.0      1.0      2.3          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.7      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     34.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.6          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.6          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.3      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     28.6      if isinstance(obj, float):
    55         1          1.0      1.0     14.3          return 1
    56                                           
    57         2          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          0.0      0.0      0.0      if isinstance(obj, str):
    61         2          1.0      0.5     14.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000562 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         78.0     78.0     13.9      inputValue = inputPart()
    89         1         11.0     11.0      2.0      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.2      judgeValue1 = judge(inputValue[1])
    91         1          5.0      5.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         21.0     21.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        438.0    438.0     77.9      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

276回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['minos', 766, 'devide']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.2          1,
    16         1          1.0      1.0      2.2          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.2          766,
    19         1          1.0      1.0      2.2          44,
    20         1          1.0      1.0      2.2          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.2          20,
    23         1          1.0      1.0      2.2          111,
    24         1          1.0      1.0      2.2          371,
    25         1          1.0      1.0      2.2          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.2          "saerf",
    30         1          1.0      1.0      2.2          "plus",
    31         1          1.0      1.0      2.2          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.2          "divide",
    36         1          1.0      1.0      2.2          "plas",
    37         1          1.0      1.0      2.2          "minos",
    38         1          1.0      1.0      2.2          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.2      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     30.4          elements[random.randint(0,length)],
    43         1          6.0      6.0     13.0          elements[random.randint(0,length)],
    44         1          8.0      8.0     17.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.2      return extraction

Total time: 1.1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     36.4      if isinstance(obj, int):
    52         1          1.0      1.0      9.1          return 1
    53                                           
    54         2          2.0      1.0     18.2      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     18.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5      9.1      if isinstance(obj, str):
    61         2          1.0      0.5      9.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000549 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         86.0     86.0     15.7      inputValue = inputPart()
    89         1         16.0     16.0      2.9      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1         13.0     13.0      2.4      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         22.0     22.0      4.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        401.0    401.0     73.0      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

277回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plas', 'minus', 'minos']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.9          234,
    17         1          1.0      1.0      2.9          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          1.0      1.0      2.9          20,
    23         1          1.0      1.0      2.9          111,
    24         1          1.0      1.0      2.9          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          1.0      1.0      2.9          "minus",
    33         1          1.0      1.0      2.9          "devide",
    34         1          1.0      1.0      2.9          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.9      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     37.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 1e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     20.0      if isinstance(obj, int):
    52                                                   return 1
    53                                           
    54         3          2.0      0.7     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         3          2.0      0.7     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         3          3.0      1.0     30.0      if isinstance(obj, str):
    61         3          1.0      0.3     10.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000464 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.1      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      1.3      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        353.0    353.0     76.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

278回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['あいう', 'plas', 766]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.8          1,
    16         1          1.0      1.0      2.8          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          1.0      1.0      2.8          44,
    20         1          1.0      1.0      2.8          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.8          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.8          0.134,
    28         1          1.0      1.0      2.8          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.8          "divide",
    36         1          1.0      1.0      2.8          "plas",
    37         1          1.0      1.0      2.8          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     38.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         1          1.0      1.0     12.5          return 1
    53                                           
    54         2          1.0      0.5     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     25.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     12.5      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000495 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     14.5      inputValue = inputPart()
    89         1          9.0      9.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.4      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        382.0    382.0     77.2      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

279回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[234, 'minos', 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.1          1,
    16         1          1.0      1.0      2.1          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.1          766,
    19         1          1.0      1.0      2.1          44,
    20         1          1.0      1.0      2.1          5,
    21         1          1.0      1.0      2.1          100,
    22         1          1.0      1.0      2.1          20,
    23         1          1.0      1.0      2.1          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.1          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.1          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.1          "AAAd123482934",
    32         1          1.0      1.0      2.1          "minus",
    33         1          1.0      1.0      2.1          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.1          "divide",
    36         1          1.0      1.0      2.1          "plas",
    37         1          1.0      1.0      2.1          "minos",
    38         1          1.0      1.0      2.1          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.2      length = len(elements)-1
    41                                               extraction = [
    42         1         18.0     18.0     37.5          elements[random.randint(0,length)],
    43         1          6.0      6.0     12.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     10.4          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         2          1.0      0.5     12.5          return 1
    53                                           
    54         1          1.0      1.0     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     12.5      if isinstance(obj, str):
    61         1          1.0      1.0     12.5          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000835 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         84.0     84.0     10.1      inputValue = inputPart()
    89         1          6.0      6.0      0.7      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.0      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.5      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         23.0     23.0      2.8      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        705.0    705.0     84.4      print str(inputValue).decode("string-escape")
   102         1          5.0      5.0      0.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

280回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[44, 100, 'plas']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.7          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.7          5,
    21         1          1.0      1.0      2.7          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.7          0.134,
    28         1          1.0      1.0      2.7          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.7          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     43.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     57.1      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 2.6e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      3.8      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      3.8      def pr(x):
    68                                                   print x
    69         1         20.0     20.0     76.9      sep()
    70                                           
    71         1          1.0      1.0      3.8      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      3.8      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      3.8      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          0.0      0.0      0.0      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          0.0      0.0      0.0          result = "Operator is invalid."
    84         1          1.0      1.0      3.8      return result

Total time: 0.000684 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         74.0     74.0     10.8      inputValue = inputPart()
    89         1          6.0      6.0      0.9      judgeValue0 = judge(inputValue[0])
    90         1          3.0      3.0      0.4      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.2      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         36.0     36.0      5.3          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.1      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        553.0    553.0     80.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

281回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[26182576726545671723454736273454323454327667827345432763478372L, 234, 100]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.6          5,
    21         1          1.0      1.0      2.6          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.6          0.134,
    28         1          1.0      1.0      2.6          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          0.0      0.0      0.0          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     38.5          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     12.8          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     28.6      if isinstance(obj, int):
    52         2          2.0      1.0     28.6          return 1
    53                                           
    54         1          1.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000464 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         74.0     74.0     15.9      inputValue = inputPart()
    89         1          8.0      8.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        355.0    355.0     76.5      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

282回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['divide', 'minus', 234]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          0.0      0.0      0.0          234,
    17         1          1.0      1.0      2.6          543,
    18         1          1.0      1.0      2.6          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.6          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          1.0      1.0      2.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.6          "devide",
    34         1          1.0      1.0      2.6          "multiply",
    35         1          1.0      1.0      2.6          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     34.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.2          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.2          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.6      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     33.3      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     16.7      if isinstance(obj, str):
    61         2          2.0      1.0     33.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000459 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     15.7      inputValue = inputPart()
    89         1          8.0      8.0      1.7      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        350.0    350.0     76.3      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

283回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[111, 44, 'multiply']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.3          1,
    16         1          1.0      1.0      2.3          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.3          766,
    19         1          1.0      1.0      2.3          44,
    20         1          1.0      1.0      2.3          5,
    21         1          0.0      0.0      0.0          100,
    22         1          1.0      1.0      2.3          20,
    23         1          1.0      1.0      2.3          111,
    24         1          1.0      1.0      2.3          371,
    25         1          1.0      1.0      2.3          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.3          "saerf",
    30         1          1.0      1.0      2.3          "plus",
    31         1          1.0      1.0      2.3          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.3          "divide",
    36         1          1.0      1.0      2.3          "plas",
    37         1          1.0      1.0      2.3          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.3      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     37.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.6          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.6          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3    100.0      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 2.6e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          0.0      0.0      0.0      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      3.8      def pr(x):
    68                                                   print x
    69         1         21.0     21.0     80.8      sep()
    70                                           
    71         1          1.0      1.0      3.8      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      3.8      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          0.0      0.0      0.0      elif list[2] == "multiply":
    76         1          1.0      1.0      3.8          result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84         1          1.0      1.0      3.8      return result

Total time: 0.000539 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0     14.1      inputValue = inputPart()
    89         1          6.0      6.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.7      judgeValue1 = judge(inputValue[1])
    91         1          9.0      9.0      1.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         36.0     36.0      6.7          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        406.0    406.0     75.3      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

284回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['devide', 0.134, 234]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          1.0      1.0      2.4          543,
    18         1          1.0      1.0      2.4          766,
    19         1          1.0      1.0      2.4          44,
    20         1          1.0      1.0      2.4          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          1.0      1.0      2.4          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          1.0      1.0      2.4          "plas",
    37         1          1.0      1.0      2.4          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.4      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     31.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.9          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.4      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         1          1.0      1.0     12.5          return 1
    53                                           
    54         2          2.0      1.0     25.0      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57         1          1.0      1.0     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     12.5      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00047 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     14.9      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.3      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        359.0    359.0     76.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

285回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0.134, 'あいう', 111]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.5          1,
    16         1          1.0      1.0      2.5          234,
    17         1          1.0      1.0      2.5          543,
    18         1          1.0      1.0      2.5          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.5          100,
    22         1          1.0      1.0      2.5          20,
    23         1          1.0      1.0      2.5          111,
    24         1          1.0      1.0      2.5          371,
    25         1          1.0      1.0      2.5          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          1.0      1.0      2.5          "AAAd123482934",
    32         1          1.0      1.0      2.5          "minus",
    33         1          1.0      1.0      2.5          "devide",
    34         1          1.0      1.0      2.5          "multiply",
    35         1          1.0      1.0      2.5          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.5          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.0          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.5          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.0          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.5      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     66.7      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          0.0      0.0      0.0      if isinstance(obj, float):
    55         1          0.0      0.0      0.0          return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          1.0      1.0     33.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000467 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.2      inputValue = inputPart()
    89         1          7.0      7.0      1.5      judgeValue0 = judge(inputValue[0])
    90         1          7.0      7.0      1.5      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         18.0     18.0      3.9      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        357.0    357.0     76.4      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

286回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[371, 44, 'multipy']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.8          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.8          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.8          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.8          0.134,
    28         1          1.0      1.0      2.8          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.8          "minus",
    33         1          1.0      1.0      2.8          "devide",
    34         1          1.0      1.0      2.8          "multiply",
    35         1          1.0      1.0      2.8          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     41.7          elements[random.randint(0,length)],
    43         1          6.0      6.0     16.7          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     42.9      if isinstance(obj, int):
    52         2          1.0      0.5     14.3          return 1
    53                                           
    54         1          1.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     14.3      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     14.3      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 2.7e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      3.7      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      3.7      def pr(x):
    68                                                   print x
    69         1         22.0     22.0     81.5      sep()
    70                                           
    71         1          1.0      1.0      3.7      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          0.0      0.0      0.0      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      3.7      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          0.0      0.0      0.0      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          0.0      0.0      0.0          result = "Operator is invalid."
    84         1          1.0      1.0      3.7      return result

Total time: 0.000504 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         74.0     74.0     14.7      inputValue = inputPart()
    89         1          5.0      5.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.6      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         38.0     38.0      7.5          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        372.0    372.0     73.8      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

287回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['divide', 44, 766]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.9e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.6          1,
    16         1          1.0      1.0      2.6          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.6          766,
    19         1          1.0      1.0      2.6          44,
    20         1          1.0      1.0      2.6          5,
    21         1          0.0      0.0      0.0          100,
    22         1          0.0      0.0      0.0          20,
    23         1          1.0      1.0      2.6          111,
    24         1          1.0      1.0      2.6          371,
    25         1          1.0      1.0      2.6          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.6          "saerf",
    30         1          1.0      1.0      2.6          "plus",
    31         1          1.0      1.0      2.6          "AAAd123482934",
    32         1          1.0      1.0      2.6          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.6          "plas",
    37         1          1.0      1.0      2.6          "minos",
    38         1          1.0      1.0      2.6          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.6      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     35.9          elements[random.randint(0,length)],
    43         1          5.0      5.0     12.8          elements[random.randint(0,length)],
    44         1          4.0      4.0     10.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 7e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     57.1      if isinstance(obj, int):
    52         2          1.0      0.5     14.3          return 1
    53                                           
    54         1          1.0      1.0     14.3      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          1.0      1.0     14.3          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000486 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         73.0     73.0     15.0      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         22.0     22.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        371.0    371.0     76.3      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

288回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['AAAd123482934', 371, 'multipy']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.2e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.4          1,
    16         1          1.0      1.0      2.4          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.4          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.4          0,
    26         1          1.0      1.0      2.4          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.4          0.134,
    28         1          1.0      1.0      2.4          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          1.0      1.0      2.4          "minus",
    33         1          1.0      1.0      2.4          "devide",
    34         1          1.0      1.0      2.4          "multiply",
    35         1          1.0      1.0      2.4          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.4          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.8      length = len(elements)-1
    41                                               extraction = [
    42         1         17.0     17.0     40.5          elements[random.randint(0,length)],
    43         1          6.0      6.0     14.3          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          0.0      0.0      0.0      return extraction

Total time: 5e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     40.0      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     20.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          1.0      0.5     20.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     20.0      if isinstance(obj, str):
    61         2          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000941 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         76.0     76.0      8.1      inputValue = inputPart()
    89         1         10.0     10.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.4      judgeValue1 = judge(inputValue[1])
    91         1          6.0      6.0      0.6      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         19.0     19.0      2.0      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        824.0    824.0     87.6      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

289回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[111, 371, 'plas']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.7          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.7          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.7          0.134,
    28         1          1.0      1.0      2.7          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.7          "devide",
    34         1          1.0      1.0      2.7          "multiply",
    35         1          1.0      1.0      2.7          "divide",
    36         1          1.0      1.0      2.7          "plas",
    37         1          1.0      1.0      2.7          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     35.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.7      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     66.7      if isinstance(obj, int):
    52         2          1.0      0.5     33.3          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 2.4e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      4.2      def sep():
    66                                                   print "--------------------------------------"
    67         1          0.0      0.0      0.0      def pr(x):
    68                                                   print x
    69         1         18.0     18.0     75.0      sep()
    70                                           
    71         1          1.0      1.0      4.2      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      4.2      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          0.0      0.0      0.0      elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77         1          1.0      1.0      4.2      elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83         1          1.0      1.0      4.2          result = "Operator is invalid."
    84         1          1.0      1.0      4.2      return result

Total time: 0.000479 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     14.6      inputValue = inputPart()
    89         1          5.0      5.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          3.0      3.0      0.6      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         33.0     33.0      6.9          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        357.0    357.0     74.5      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

290回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[234, 'plus', 543]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.7          5,
    21         1          1.0      1.0      2.7          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.7          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.7          0.134,
    28         1          1.0      1.0      2.7          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.7          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     37.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.7      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     75.0      if isinstance(obj, int):
    52         2          1.0      0.5     25.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000464 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.1      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.7      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         21.0     21.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        352.0    352.0     75.9      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

291回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[371, 100, 0]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.3e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.3          1,
    16         1          1.0      1.0      2.3          234,
    17         1          1.0      1.0      2.3          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.3          100,
    22         1          1.0      1.0      2.3          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          1.0      1.0      2.3          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.3          0.134,
    28         1          1.0      1.0      2.3          "あいう",
    29         1          1.0      1.0      2.3          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          1.0      1.0      2.3          "multiply",
    35         1          1.0      1.0      2.3          "divide",
    36         1          1.0      1.0      2.3          "plas",
    37         1          1.0      1.0      2.3          "minos",
    38         1          1.0      1.0      2.3          "multipy"
    39                                                   ]
    40         1          2.0      2.0      4.7      length = len(elements)-1
    41                                               extraction = [
    42         1         16.0     16.0     37.2          elements[random.randint(0,length)],
    43         1          5.0      5.0     11.6          elements[random.randint(0,length)],
    44         1          5.0      5.0     11.6          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.3      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     50.0      if isinstance(obj, int):
    52         3          2.0      0.7     50.0          return 1
    53                                           
    54                                               if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57                                               if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60                                               if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000518 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         77.0     77.0     14.9      inputValue = inputPart()
    89         1          6.0      6.0      1.2      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         24.0     24.0      4.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        401.0    401.0     77.4      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

292回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[111, 'あいう', 'あいう']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.8e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.1          1,
    16         1          2.0      2.0      4.2          234,
    17         1          0.0      0.0      0.0          543,
    18         1          1.0      1.0      2.1          766,
    19         1          1.0      1.0      2.1          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.1          100,
    22         1          1.0      1.0      2.1          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          1.0      1.0      2.1          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.1          "saerf",
    30         1          1.0      1.0      2.1          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.1          "devide",
    34         1          1.0      1.0      2.1          "multiply",
    35         1          1.0      1.0      2.1          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.1          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.1      length = len(elements)-1
    41                                               extraction = [
    42         1         18.0     18.0     37.5          elements[random.randint(0,length)],
    43         1          8.0      8.0     16.7          elements[random.randint(0,length)],
    44         1          6.0      6.0     12.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.1      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     44.4      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          1.0      0.5     11.1      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         2          2.0      1.0     22.2      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         2          1.0      0.5     11.1      if isinstance(obj, str):
    61         2          1.0      0.5     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000889 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         90.0     90.0     10.1      inputValue = inputPart()
    89         1          6.0      6.0      0.7      judgeValue0 = judge(inputValue[0])
    90         1          9.0      9.0      1.0      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      0.8      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         31.0     31.0      3.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        742.0    742.0     83.5      print str(inputValue).decode("string-escape")
   102         1          4.0      4.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

293回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['AAAd123482934', 371, 1]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.7          1,
    16         1          1.0      1.0      2.7          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          1.0      1.0      2.7          5,
    21         1          1.0      1.0      2.7          100,
    22         1          0.0      0.0      0.0          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.7          0.134,
    28         1          1.0      1.0      2.7          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.7          "divide",
    36         1          1.0      1.0      2.7          "plas",
    37         1          1.0      1.0      2.7          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     37.8          elements[random.randint(0,length)],
    43         1          4.0      4.0     10.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.7      return extraction

Total time: 3e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     66.7      if isinstance(obj, int):
    52         2          1.0      0.5     33.3          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000443 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.8      inputValue = inputPart()
    89         1          8.0      8.0      1.8      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         20.0     20.0      4.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        336.0    336.0     75.8      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

294回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[5, 1, 26182576726545671723454736273454323454327667827345432763478372L]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.7          234,
    17         1          1.0      1.0      2.7          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.7          100,
    22         1          1.0      1.0      2.7          20,
    23         1          1.0      1.0      2.7          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.7          "あいう",
    29         1          1.0      1.0      2.7          "saerf",
    30         1          1.0      1.0      2.7          "plus",
    31         1          1.0      1.0      2.7          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          1.0      1.0      2.7          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.7          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.7      length = len(elements)-1
    41                                               extraction = [
    42         1         14.0     14.0     37.8          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.5          elements[random.randint(0,length)],
    44         1          5.0      5.0     13.5          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.7      return extraction

Total time: 8e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     37.5      if isinstance(obj, int):
    52         2          2.0      1.0     25.0          return 1
    53                                           
    54         1          1.0      1.0     12.5      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     12.5      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     12.5      if isinstance(obj, str):
    61                                                   return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00046 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         70.0     70.0     15.2      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          7.0      7.0      1.5      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         17.0     17.0      3.7      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        354.0    354.0     77.0      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

295回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0, 'multipy', 766]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.5e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.9          1,
    16         1          1.0      1.0      2.9          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.9          100,
    22         1          1.0      1.0      2.9          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          1.0      1.0      2.9          "あいう",
    29         1          1.0      1.0      2.9          "saerf",
    30         1          1.0      1.0      2.9          "plus",
    31         1          1.0      1.0      2.9          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.9          "multipy"
    39                                                   ]
    40         1          2.0      2.0      5.7      length = len(elements)-1
    41                                               extraction = [
    42         1         13.0     13.0     37.1          elements[random.randint(0,length)],
    43         1          5.0      5.0     14.3          elements[random.randint(0,length)],
    44         1          5.0      5.0     14.3          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.9      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     33.3      if isinstance(obj, int):
    52         2          0.0      0.0      0.0          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          1.0      1.0     16.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     16.7      if isinstance(obj, str):
    61         1          1.0      1.0     16.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000449 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         69.0     69.0     15.4      inputValue = inputPart()
    89         1          5.0      5.0      1.1      judgeValue0 = judge(inputValue[0])
    90         1          8.0      8.0      1.8      judgeValue1 = judge(inputValue[1])
    91         1          3.0      3.0      0.7      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         16.0     16.0      3.6      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        346.0    346.0     77.1      print str(inputValue).decode("string-escape")
   102         1          2.0      2.0      0.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

296回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[0.134, 20, 'multiply']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 0.000158 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      0.6          1,
    16         1          1.0      1.0      0.6          234,
    17         1          1.0      1.0      0.6          543,
    18         1          1.0      1.0      0.6          766,
    19         1          1.0      1.0      0.6          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      0.6          100,
    22         1          1.0      1.0      0.6          20,
    23         1          1.0      1.0      0.6          111,
    24         1          1.0      1.0      0.6          371,
    25         1          1.0      1.0      0.6          0,
    26         1          1.0      1.0      0.6          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      0.6          0.134,
    28         1          1.0      1.0      0.6          "あいう",
    29         1          0.0      0.0      0.0          "saerf",
    30         1          1.0      1.0      0.6          "plus",
    31         1          1.0      1.0      0.6          "AAAd123482934",
    32         1          1.0      1.0      0.6          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          3.0      3.0      1.9          "multiply",
    35         1          1.0      1.0      0.6          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          1.0      1.0      0.6          "minos",
    38         1          4.0      4.0      2.5          "multipy"
    39                                                   ]
    40         1          4.0      4.0      2.5      length = len(elements)-1
    41                                               extraction = [
    42         1         78.0     78.0     49.4          elements[random.randint(0,length)],
    43         1         28.0     28.0     17.7          elements[random.randint(0,length)],
    44         1         22.0     22.0     13.9          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      0.6      return extraction

Total time: 2.6e-05 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3         19.0      6.3     73.1      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          3.0      1.5     11.5      if isinstance(obj, float):
    55         1          1.0      1.0      3.8          return 1
    56                                           
    57         1          2.0      2.0      7.7      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0      3.8      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 7.8e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          2.0      2.0      2.6      def sep():
    66                                                   print "--------------------------------------"
    67         1          1.0      1.0      1.3      def pr(x):
    68                                                   print x
    69         1         67.0     67.0     85.9      sep()
    70                                           
    71         1          3.0      3.0      3.8      if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73         1          1.0      1.0      1.3      elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75         1          1.0      1.0      1.3      elif list[2] == "multiply":
    76         1          2.0      2.0      2.6          result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84         1          1.0      1.0      1.3      return result

Total time: 0.001507 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1        258.0    258.0     17.1      inputValue = inputPart()
    89         1         21.0     21.0      1.4      judgeValue0 = judge(inputValue[0])
    90         1         18.0     18.0      1.2      judgeValue1 = judge(inputValue[1])
    91         1         16.0     16.0      1.1      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.1      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1        127.0    127.0      8.4          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          5.0      5.0      0.3      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1       1058.0   1058.0     70.2      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

297回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['plas', 0.134, 20]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 4.7e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.1          1,
    16         1          1.0      1.0      2.1          234,
    17         1          1.0      1.0      2.1          543,
    18         1          1.0      1.0      2.1          766,
    19         1          1.0      1.0      2.1          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.1          100,
    22         1          1.0      1.0      2.1          20,
    23         1          1.0      1.0      2.1          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.1          0.134,
    28         1          1.0      1.0      2.1          "あいう",
    29         1          1.0      1.0      2.1          "saerf",
    30         1          0.0      0.0      0.0          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          1.0      1.0      2.1          "devide",
    34         1          1.0      1.0      2.1          "multiply",
    35         1          1.0      1.0      2.1          "divide",
    36         1          1.0      1.0      2.1          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.1          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.1      length = len(elements)-1
    41                                               extraction = [
    42         1         18.0     18.0     38.3          elements[random.randint(0,length)],
    43         1          6.0      6.0     12.8          elements[random.randint(0,length)],
    44         1          5.0      5.0     10.6          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.1      return extraction

Total time: 9e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          4.0      1.3     44.4      if isinstance(obj, int):
    52         1          0.0      0.0      0.0          return 1
    53                                           
    54         2          2.0      1.0     22.2      if isinstance(obj, float):
    55         1          1.0      1.0     11.1          return 1
    56                                           
    57         1          1.0      1.0     11.1      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          1.0      1.0     11.1          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.00062 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         83.0     83.0     13.4      inputValue = inputPart()
    89         1         12.0     12.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          6.0      6.0      1.0      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.6      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          1.0      1.0      0.2          output = "error"
    96                                               
    97         1         26.0     26.0      4.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        484.0    484.0     78.1      print str(inputValue).decode("string-escape")
   102         1          3.0      3.0      0.5      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

298回目のループです
--------------------------------------
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
[5, 20, 'plus']
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          0.0      0.0      0.0          1,
    16         1          1.0      1.0      2.8          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.8          100,
    22         1          1.0      1.0      2.8          20,
    23         1          0.0      0.0      0.0          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          1.0      1.0      2.8          0.134,
    28         1          1.0      1.0      2.8          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          0.0      0.0      0.0          "AAAd123482934",
    32         1          0.0      0.0      0.0          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          1.0      1.0      2.8          "divide",
    36         1          1.0      1.0      2.8          "plas",
    37         1          1.0      1.0      2.8          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     41.7          elements[random.randint(0,length)],
    43         1          4.0      4.0     11.1          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.8      return extraction

Total time: 4e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          3.0      1.0     75.0      if isinstance(obj, int):
    52         2          1.0      0.5     25.0          return 1
    53                                           
    54         1          0.0      0.0      0.0      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          0.0      0.0      0.0      if isinstance(obj, str):
    61         1          0.0      0.0      0.0          return 3

Total time: 2e-05 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65         1          1.0      1.0      5.0      def sep():
    66                                                   print "--------------------------------------"
    67         1          0.0      0.0      0.0      def pr(x):
    68                                                   print x
    69         1         18.0     18.0     90.0      sep()
    70                                           
    71         1          1.0      1.0      5.0      if list[2] == "plus":
    72         1          0.0      0.0      0.0          result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84         1          0.0      0.0      0.0      return result

Total time: 0.000478 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         72.0     72.0     15.1      inputValue = inputPart()
    89         1          5.0      5.0      1.0      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.8      judgeValue1 = judge(inputValue[1])
    91         1          8.0      8.0      1.7      judgeValue2 = judge(inputValue[2])
    92         1          1.0      1.0      0.2      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93         1         30.0     30.0      6.3          output = calc(inputValue)
    94                                               else:
    95                                                   output = "error"
    96                                               
    97         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        356.0    356.0     74.5      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

299回目のループです
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
['multiply', 44, 100]
-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-
Wrote profile results to profile.py.lprof
Timer unit: 1e-06 s

Total time: 3.6e-05 s
File: profile.py
Function: inputPart at line 11

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    11                                           @profile
    12                                           def inputPart():
    13                                           
    14                                               elements = [
    15         1          1.0      1.0      2.8          1,
    16         1          1.0      1.0      2.8          234,
    17         1          0.0      0.0      0.0          543,
    18         1          0.0      0.0      0.0          766,
    19         1          0.0      0.0      0.0          44,
    20         1          0.0      0.0      0.0          5,
    21         1          1.0      1.0      2.8          100,
    22         1          1.0      1.0      2.8          20,
    23         1          1.0      1.0      2.8          111,
    24         1          0.0      0.0      0.0          371,
    25         1          0.0      0.0      0.0          0,
    26         1          0.0      0.0      0.0          26182576726545671723454736273454323454327667827345432763478372,
    27         1          0.0      0.0      0.0          0.134,
    28         1          0.0      0.0      0.0          "あいう",
    29         1          1.0      1.0      2.8          "saerf",
    30         1          1.0      1.0      2.8          "plus",
    31         1          1.0      1.0      2.8          "AAAd123482934",
    32         1          1.0      1.0      2.8          "minus",
    33         1          0.0      0.0      0.0          "devide",
    34         1          0.0      0.0      0.0          "multiply",
    35         1          0.0      0.0      0.0          "divide",
    36         1          0.0      0.0      0.0          "plas",
    37         1          0.0      0.0      0.0          "minos",
    38         1          1.0      1.0      2.8          "multipy"
    39                                                   ]
    40         1          1.0      1.0      2.8      length = len(elements)-1
    41                                               extraction = [
    42         1         15.0     15.0     41.7          elements[random.randint(0,length)],
    43         1          5.0      5.0     13.9          elements[random.randint(0,length)],
    44         1          4.0      4.0     11.1          elements[random.randint(0,length)]
    45                                                   ]
    46         1          1.0      1.0      2.8      return extraction

Total time: 6e-06 s
File: profile.py
Function: judge at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           @profile
    49                                           def judge(obj):
    50                                               """ 入力値の型を判定する """
    51         3          2.0      0.7     33.3      if isinstance(obj, int):
    52         2          1.0      0.5     16.7          return 1
    53                                           
    54         1          1.0      1.0     16.7      if isinstance(obj, float):
    55                                                   return 1
    56                                           
    57         1          0.0      0.0      0.0      if isinstance(obj, list):
    58                                                   return 2
    59                                           
    60         1          1.0      1.0     16.7      if isinstance(obj, str):
    61         1          1.0      1.0     16.7          return 3

Total time: 0 s
File: profile.py
Function: calc at line 63

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    63                                           @profile
    64                                           def calc(list):
    65                                               def sep():
    66                                                   print "--------------------------------------"
    67                                               def pr(x):
    68                                                   print x
    69                                               sep()
    70                                           
    71                                               if list[2] == "plus":
    72                                                   result = list[0]+list[1]
    73                                               elif list[2] == "minus":
    74                                                   result = list[0]-list[1]
    75                                               elif list[2] == "multiply":
    76                                                   result = list[0]*list[1]
    77                                               elif list[2] == "divide":
    78                                                   if list[1] == 0:
    79                                                       result = "Do not divide by 0."
    80                                                   else:
    81                                                       result = list[0]/list[1]      
    82                                               else:
    83                                                   result = "Operator is invalid."
    84                                               return result

Total time: 0.000469 s
File: profile.py
Function: main at line 86

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    86                                           @profile
    87                                           def main():
    88         1         71.0     71.0     15.1      inputValue = inputPart()
    89         1          9.0      9.0      1.9      judgeValue0 = judge(inputValue[0])
    90         1          4.0      4.0      0.9      judgeValue1 = judge(inputValue[1])
    91         1          4.0      4.0      0.9      judgeValue2 = judge(inputValue[2])
    92         1          0.0      0.0      0.0      if judgeValue0 == 1 and judgeValue1 == 1 and judgeValue2 == 3:
    93                                                   output = calc(inputValue)
    94                                               else:
    95         1          0.0      0.0      0.0          output = "error"
    96                                               
    97         1         16.0     16.0      3.4      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"
    98                                               """
    99                                               print(output)
   100                                               """
   101         1        364.0    364.0     77.6      print str(inputValue).decode("string-escape")
   102         1          1.0      1.0      0.2      print "-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-"

300回目のループです
